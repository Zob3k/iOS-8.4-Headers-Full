/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:43:52 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /usr/lib/libacmobileshim.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <libacmobileshim.dylib/libacmobileshim.dylib-Structs.h>
#import <libacmobileshim.dylib/ACMToken.h>

@protocol ACMBaseAuthenticationRequest;
@class NSNumber, NSString, NSData, NSMutableDictionary;

@interface ACMInitialToken : ACMToken {

	NSNumber* _appID;
	NSString* _appIDKey;
	NSString* _dsKeyVersion;
	NSString* _sessionToken;
	NSString* _encryptionHash;
	id<ACMBaseAuthenticationRequest> _request;
	NSData* _encryptionHashInOldFormat;
	char _shouldUseOldEncryptionFormat;

}

@property (nonatomic,readonly) NSString * identifier; 
@property (nonatomic,readonly) char isDevicePwnd; 
@property (nonatomic,readonly) NSString * tokenSourceString; 
@property (retain) NSNumber * appID;                                                    //@synthesize appID=_appID - In the implementation block
@property (retain) NSString * appIDKey;                                                 //@synthesize appIDKey=_appIDKey - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * parametersDictionary; 
@property (retain) NSString * dsKeyVersion;                                             //@synthesize dsKeyVersion=_dsKeyVersion - In the implementation block
@property (retain) NSString * sessionToken;                                             //@synthesize sessionToken=_sessionToken - In the implementation block
@property (retain) NSString * encryptionHash;                                           //@synthesize encryptionHash=_encryptionHash - In the implementation block
@property (retain) id<ACMBaseAuthenticationRequest> request;                            //@synthesize request=_request - In the implementation block
@property (retain) NSData * encryptionHashInOldFormat;                                  //@synthesize encryptionHashInOldFormat=_encryptionHashInOldFormat - In the implementation block
@property (assign) char shouldUseOldEncryptionFormat;                                   //@synthesize shouldUseOldEncryptionFormat=_shouldUseOldEncryptionFormat - In the implementation block
+(id)initialTokenWithRequest:(id)arg1 keyCode:(id)arg2 ;
+(id)initialTokenWithRequest:(id)arg1 ;
+(id)initialTokenWithRequest:(id)arg1 principal:(id)arg2 ;
+(id)initialTokenWithRequest:(id)arg1 token:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(NSString *)identifier;
-(id<ACMBaseAuthenticationRequest>)request;
-(id)initWithRequest:(id)arg1 ;
-(void)setAppID:(NSNumber *)arg1 ;
-(NSString *)sessionToken;
-(void)setSessionToken:(NSString *)arg1 ;
-(void)setRequest:(id<ACMBaseAuthenticationRequest>)arg1 ;
-(void)setAppIDKey:(NSString *)arg1 ;
-(NSNumber *)appID;
-(NSString *)appIDKey;
-(void)setDsKeyVersion:(NSString *)arg1 ;
-(char)shouldUseOldEncryptionFormat;
-(void)setShouldUseOldEncryptionFormat:(char)arg1 ;
-(void)createEncryptionHashWithKeycode:(id)arg1 ;
-(NSString *)tokenSourceString;
-(id)initWithRequest:(id)arg1 principal:(id)arg2 ;
-(void)setEncryptionHash:(NSString *)arg1 ;
-(void)setEncryptionHashInOldFormat:(NSData *)arg1 ;
-(char)isDevicePwnd;
-(NSString *)encryptionHash;
-(NSData *)encryptionHashInOldFormat;
-(id)xmlTokenSourceString;
-(id)encryptSourceTokenWithRandomKey:(id)arg1 ;
-(id)envelopEncryptedSourceToken:(id)arg1 encryptedRandomKey:(id)arg2 ;
-(id)signEnvelopedContent:(id)arg1 withIdentity:(SecIdentityRef)arg2 ;
-(id)envelopEncryptedSourceToken:(id)arg1 encryptedRandomKey:(id)arg2 signature:(id)arg3 ;
-(char)canRecoverFailureWithError:(id)arg1 ;
-(char)shouldProceedWithAuthentication;
-(char)isAuthenticationSucceed:(id*)arg1 ;
-(id)stringWithReplacedXMLSpecialCharactersFromString:(id)arg1 ;
-(NSString *)dsKeyVersion;
-(id)tokenEnvelopeWithPublicKey:(SecKeyRef)arg1 deviceIdentity:(SecIdentityRef)arg2 ;
-(id)strippedPropertyListString:(id)arg1 ;
-(NSMutableDictionary *)parametersDictionary;
@end

