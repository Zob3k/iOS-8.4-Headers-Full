/*
* This header is generated by classdump-dyld 0.7
* on Monday, July 6, 2015 at 12:14:51 AM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <SpringBoard/SBBulletinWindowClient.h>
#import <SpringBoard/SBNotificationCenterViewControllerDelegate.h>
#import <SpringBoard/SBWidgetViewControllerDelegate.h>
#import <SpringBoard/_UISettingsKeyObserver.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <SpringBoard/SBExtensionHandling.h>
#import <SpringBoard/SBReachabilityObserver.h>
#import <SpringBoard/SBCoordinatedPresenting.h>

@class SBNotificationCenterViewController, UIView, SBChevronView, UILongPressGestureRecognizer, SBLockScreenActionContext, SBNotificationCenterSettings, NSTimer, FBUIApplicationResignActiveAssertion, NCLaunchStats, NSMutableSet, SBWindow, NSString, NSSet;

@interface SBNotificationCenterController : NSObject <SBBulletinWindowClient, SBNotificationCenterViewControllerDelegate, SBWidgetViewControllerDelegate, _UISettingsKeyObserver, UIGestureRecognizerDelegate, SBExtensionHandling, SBReachabilityObserver, SBCoordinatedPresenting> {

	SBNotificationCenterViewController* _viewController;
	UIView* _coveredContentSnapshot;
	SBChevronView* _borrowedGrabberView;
	/*^block*/id _borrowedGrabberWillPresentBlock;
	/*^block*/id _borrowedGrabberHideBlock;
	/*^block*/id _borrowedGrabberCompletionBlock;
	UILongPressGestureRecognizer* _grabberPressGesture;
	id _keyboardNotificationObserverToken;
	SBLockScreenActionContext* _lockScreenActionContext;
	int _transitionState;
	int _presentedState;
	SBNotificationCenterSettings* _settings;
	char _grabberEnabled;
	char _didCoalesceWidgetsConnections;
	NSTimer* _widgetConnectionsTimer;
	FBUIApplicationResignActiveAssertion* _resignActiveAssertion;
	NCLaunchStats* _launchStats;
	NSMutableSet* _bulletinWindowClients;

}

@property (nonatomic,retain,readonly) SBNotificationCenterViewController * viewController;                                             //@synthesize viewController=_viewController - In the implementation block
@property (nonatomic,readonly) SBNotificationCenterSettings * settings;                                                                //@synthesize settings=_settings - In the implementation block
@property (nonatomic,readonly) SBWindow * window; 
@property (getter=isVisible,nonatomic,readonly) char visible; 
@property (getter=isTransitioning,nonatomic,readonly) char transitioning; 
@property (getter=isAvailableWhileLocked,nonatomic,readonly) char availableWhileLocked; 
@property (getter=isNotificationsViewAvailableWhileLocked,nonatomic,readonly) char notificationsViewAvailableWhileLocked; 
@property (getter=isTodayViewAvailableWhileLocked,nonatomic,readonly) char todayViewAvailableWhileLocked; 
@property (getter=isGrabberVisible,nonatomic,readonly) char grabberVisible; 
@property (assign,getter=isGrabberEnabled,nonatomic) char grabberEnabled;                                                              //@synthesize grabberEnabled=_grabberEnabled - In the implementation block
@property (getter=isPresentingWidgetContent,nonatomic,readonly) char presentingWidgetContent; 
@property (assign,nonatomic) char blursBackground; 
@property (nonatomic,readonly) SBLockScreenActionContext * lockScreenActionContext;                                                    //@synthesize lockScreenActionContext=_lockScreenActionContext - In the implementation block
@property (nonatomic,readonly) int layoutMode; 
@property (nonatomic,readonly) CGSize todayContentMaxSize; 
@property (nonatomic,readonly) UIEdgeInsets todayContentEdgeInsets; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) int coordinatedPresentingControllerIdentifier; 
@property (nonatomic,readonly) float hintDisplacement; 
@property (nonatomic,readonly) unsigned hintEdge; 
@property (assign,nonatomic) id<SBPresentingDelegate> presentingDelegate; 
@property (nonatomic,readonly) NSSet * gestures; 
@property (nonatomic,readonly) NSSet * conflictingGestures; 
@property (nonatomic,readonly) NSSet * tapExcludedViews; 
+(id)newDynamicAnimationForShow:(char)arg1 targetValue:(double)arg2 withInitialValue:(double)arg3 velocity:(double)arg4 extraPull:(char)arg5 ;
+(id)_sharedInstanceCreateIfNecessary:(char)arg1 ;
+(double)transitionAnimationDuration;
+(id)sharedInstance;
+(id)sharedInstanceIfExists;
-(void)handleReachabilityModeDeactivated;
-(void)prepareLayoutForPresentationFromBanner;
-(void)beginPresentationWithTouchLocation:(CGPoint)arg1 ;
-(char)isGrabberVisible;
-(void)setGrabberEnabled:(char)arg1 ;
-(char)canShowHideGrabberView;
-(void)cancelTransition;
-(void)hideGrabberAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(void)beginDismissalWithTouchLocation:(CGPoint)arg1 ;
-(void)showGrabberAnimated:(char)arg1 ;
-(char)isAvailableWhileLocked;
-(void)launchExtensionWithBundleID:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)presentAnimated:(char)arg1 ;
-(void)_presentAnimated:(char)arg1 setupPrelude:(/*^block*/id)arg2 setupPostlude:(/*^block*/id)arg3 animationPrelude:(/*^block*/id)arg4 animationPostlude:(/*^block*/id)arg5 completion:(/*^block*/id)arg6 ;
-(void)runScrollTest:(id)arg1 iterations:(int)arg2 delta:(int)arg3 useAAGView:(char)arg4 ;
-(void)enableAllWidgets:(/*^block*/id)arg1 ;
-(void)runWidgetLaunchTestWithWidgetWithIdentifier:(id)arg1 prelude:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)presentAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(void)finishedScrollTest;
-(id)_lockScreenViewController;
-(char)handleAction:(id)arg1 forBulletin:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(char)doesSectionWithIdentifierUpdateMessagePrivacyViaSectionParameters:(id)arg1 ;
-(void)remoteViewControllerDidConnectForWidget:(id)arg1 ;
-(void)widget:(id)arg1 requestsLaunchOfURL:(id)arg2 ;
-(void)widget:(id)arg1 requestsPresentationOfViewController:(id)arg2 presentationStyle:(int)arg3 context:(id)arg4 completion:(/*^block*/id)arg5 ;
-(char)shouldRequestWidgetRemoteViewControllers;
-(SBLockScreenActionContext *)lockScreenActionContext;
-(char)isPresentingControllerTransitioning;
-(void)endTransitionWithVelocity:(CGPoint)arg1 wasCancelled:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)abortAnimatedTransition;
-(int)coordinatedPresentingControllerIdentifier;
-(float)hintDisplacement;
-(unsigned)hintEdge;
-(CGSize)todayContentMaxSize;
-(UIEdgeInsets)todayContentEdgeInsets;
-(void)_updateCoveredContentSnapshot;
-(void)registerPresentedViewController:(id)arg1 ;
-(void)_handleWidgetLaunchRecommendation:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)biometricEventMonitorDidAuthenticate:(id)arg1 ;
-(char)isNotificationsViewAvailableWhileLocked;
-(char)isTodayViewAvailableWhileLocked;
-(char)_isNotificationCenterViewWithFeatureKeyAvailableWhileLocked:(id)arg1 isLockedDownByRestrictions:(char*)arg2 ;
-(char)_isNotificationCenterViewAvailableWhileLockedWithProfileBlock:(/*^block*/id)arg1 counterpartBlock:(/*^block*/id)arg2 ;
-(char)isPresentingWidgetContent;
-(void)dismissPresentedWidgetContentAnimated:(char)arg1 ;
-(void)_registerNotificationCenterBulletinWindowClient:(id)arg1 ;
-(void)_unregisterNotificationCenterBulletinWindowClient:(id)arg1 ;
-(void)_invalidateCoveredContentSnapshot;
-(void)_insertCoveredContentSnapshotIfNecessary:(id)arg1 ;
-(void)_setViewUserInteractionEnabled:(char)arg1 ;
-(void)handleGrabberPress:(id)arg1 ;
-(char)isGrabberEnabled;
-(void)_setupForViewPresentation;
-(void)_removeCoveredContentSnapshot;
-(void)_setGrabberEnabled:(char)arg1 ;
-(void)_setupForPresentationWithTouchLocation:(CGPoint)arg1 ;
-(void)_beginPresentationWithTouchLocation:(CGPoint)arg1 setupPrelude:(/*^block*/id)arg2 setupPostlude:(/*^block*/id)arg3 animationPrelude:(/*^block*/id)arg4 ;
-(void)_setupForDismissal;
-(void)_cleanupAfterTransition:(char)arg1 ;
-(void)_endTransitionWithVelocity:(CGPoint)arg1 additionalValueApplier:(/*^block*/id)arg2 animationPostlude:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(void)endTransitionWithVelocity:(CGPoint)arg1 additionalValueApplier:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_present:(char)arg1 stepper:(/*^block*/id)arg2 ;
-(void)_present:(char)arg1 withStandardAnimation:(char)arg2 stepper:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 fromCurrentState:(char)arg5 ;
-(void)dismissAnimated:(char)arg1 withStepper:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 fromCurrentState:(char)arg4 ;
-(void)unregisterSharedGrabberView;
-(void)_updateForChangeInMessagePrivacy;
-(char)_requiresUIUnlockForActionContext:(id)arg1 ;
-(void)_handleActionContextRequiringUIUnlock:(id)arg1 ;
-(char)_requiresAuthenticationForActionContext:(id)arg1 ;
-(void)_handleActionContextRequiringAuthentication:(id)arg1 ;
-(char)_handleActionOrRequestWithDefaultAction:(/*^block*/id)arg1 lockedAction:(/*^block*/id)arg2 ;
-(void)_didCoalesceWidgetsConnections:(id)arg1 ;
-(void)_makeVisibleWidgetWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_loadViewForWidget:(id)arg1 prelude:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)bulletinWindowWillRotateToOrientation:(int)arg1 duration:(double)arg2 ;
-(void)bulletinWindowIsAnimatingRotationToOrientation:(int)arg1 duration:(double)arg2 ;
-(void)bulletinWindowDidRotateFromOrientation:(int)arg1 ;
-(id)widgetViewControllerHostDelegate:(id)arg1 ;
-(void)unregisterPresentedViewController:(id)arg1 ;
-(char)_shouldSelectViewControllerAtTouchLocation;
-(void)registerSharedGrabberView:(id)arg1 withWillPresentBlock:(/*^block*/id)arg2 hideBlock:(/*^block*/id)arg3 andCompletion:(/*^block*/id)arg4 ;
-(void)reloadAllWidgets;
-(void)invalidateLockScreenActionContext;
-(void)dealloc;
-(SBWindow *)window;
-(id)init;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(SBNotificationCenterSettings *)settings;
-(char)isTransitioning;
-(SBNotificationCenterViewController *)viewController;
-(char)isVisible;
-(void)settings:(id)arg1 changedValueForKey:(id)arg2 ;
-(void)dismissAnimated:(char)arg1 ;
-(char)blursBackground;
-(void)setBlursBackground:(char)arg1 ;
-(void)handleReachabilityModeActivated;
-(void)updateTransitionWithTouchLocation:(CGPoint)arg1 velocity:(CGPoint)arg2 ;
-(void)endTransitionWithVelocity:(CGPoint)arg1 completion:(/*^block*/id)arg2 ;
-(void)dismissAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(int)layoutMode;
-(char)handleMenuButtonTap;
@end

