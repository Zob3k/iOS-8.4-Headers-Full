/*
* This header is generated by classdump-dyld 0.7
* on Monday, July 6, 2015 at 12:14:54 AM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <SpringBoard/_UISettingsKeyObserver.h>

@protocol SBLockScreenPluginControllerDelegate;
@class SBLockScreenPluginLoader, NSMutableDictionary, SBLockScreenPlugin, SBLockScreenPluginTransitionFactory, SBLockScreenViewController, UIWindow, SBLockScreenTestPluginSettings, NSString;

@interface SBLockScreenPluginController : NSObject <_UISettingsKeyObserver> {

	SBLockScreenPluginLoader* _pluginLoader;
	NSMutableDictionary* _plugins;
	SBLockScreenPlugin* _activePlugin;
	SBLockScreenPlugin* _displayedPlugin;
	SBLockScreenPluginTransitionFactory* _transitionFactory;
	id<SBLockScreenPluginControllerDelegate> _delegate;
	SBLockScreenViewController* _lockScreenViewController;
	char _pluginControllerReceivedViewWillDisappear;
	char _pluginControllerReceivedViewDidDisappear;
	UIWindow* _previousWindow;
	char _removedDisplayedPluginTemporarily;
	SBLockScreenTestPluginSettings* _testSettings;
	char _lockScreenHasNotifications;
	char _allowDisplayOfPlugins;
	float _fadeDuration;

}

@property (assign,nonatomic) SBLockScreenViewController * lockScreenViewController;              //@synthesize lockScreenViewController=_lockScreenViewController - In the implementation block
@property (nonatomic,retain) SBLockScreenPluginLoader * pluginLoader;                            //@synthesize pluginLoader=_pluginLoader - In the implementation block
@property (assign,nonatomic) id<SBLockScreenPluginControllerDelegate> delegate;                  //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) char lockScreenHasNotifications;                                    //@synthesize lockScreenHasNotifications=_lockScreenHasNotifications - In the implementation block
@property (assign,nonatomic) char allowDisplayOfPlugins;                                         //@synthesize allowDisplayOfPlugins=_allowDisplayOfPlugins - In the implementation block
@property (assign) float fadeDuration;                                                           //@synthesize fadeDuration=_fadeDuration - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(SBLockScreenViewController *)lockScreenViewController;
-(void)_handleApplicationExit:(id)arg1 ;
-(char)enableLockScreenBundleWithName:(id)arg1 activationContext:(id)arg2 ;
-(char)disableLockScreenBundleWithName:(id)arg1 deactivationContext:(id)arg2 ;
-(id)_lockScreenView;
-(id)_pluginView;
-(void)_addObservers;
-(id)initWithLockScreenViewController:(id)arg1 ;
-(CGRect)defaultContentRegionForPluginController:(id)arg1 withOrientation:(int)arg2 ;
-(char)isPluginVisible;
-(id)activePluginBundleName;
-(void)_lockScreenWillMoveToWindow;
-(void)_lockScreenDidMoveToWindow;
-(void)_refreshLockScreenPlugin;
-(void)_handleUIRelock;
-(void)_handlePluginDisable:(id)arg1 ;
-(void)_handleUpdatePluginLegibilitySettings:(id)arg1 ;
-(void)_updateCallPluginPresentationStyle;
-(void)_passcodeLockedStateChanged:(id)arg1 ;
-(void)_removeActivePlugin;
-(char)_pluginHidesNotificationList:(id)arg1 ;
-(char)sendEventToPlugin:(/*^block*/id)arg1 ;
-(char)_loadLockScreenPluginWithName:(id)arg1 activationContext:(id)arg2 ;
-(void)_setActivePlugin:(id)arg1 ;
-(id)_highestPriorityPluginIgnoringViewDisplay:(char)arg1 ;
-(void)_setDisplayedPlugin:(id)arg1 ;
-(char)isPhonePluginActive;
-(id)displayedPlugin;
-(id)activePlugin;
-(void)_updateNotificationListForNewlyActivatedPlugin;
-(void)_setEffectivePresentationStyleForDisplayedPluginIfNecessary;
-(id)_transitionContextWithOldPlugin:(id)arg1 newPlugin:(id)arg2 ;
-(void)setLockScreenViewController:(SBLockScreenViewController *)arg1 ;
-(void)_disablePluginsPassingTest:(/*^block*/id)arg1 withReason:(id)arg2 ;
-(id)_pluginForName:(id)arg1 controller:(id)arg2 ;
-(void)_removeDisplayedPluginPermanently:(char)arg1 ;
-(void)_notifyDisplayedPluginRemovedFromWindow;
-(void)_notifyDisplayedPluginAddedToWindow;
-(void)_transitionFromExclusionaryPluginToNotificationList;
-(void)_transitionFromNotificationListToExclusionaryPlugin;
-(char)activePluginHidesNotificationList;
-(char)pluginControllerShouldAnimateOthersResumption;
-(char)isPhonePluginVisible;
-(void)handleUIUnlock;
-(void)handleLockScreenTemporarilyDismissed;
-(void)setLockScreenHasNotifications:(char)arg1 ;
-(SBLockScreenPluginLoader *)pluginLoader;
-(void)setPluginLoader:(SBLockScreenPluginLoader *)arg1 ;
-(char)lockScreenHasNotifications;
-(char)allowDisplayOfPlugins;
-(void)setAllowDisplayOfPlugins:(char)arg1 ;
-(void)setFadeDuration:(float)arg1 ;
-(char)handleLockButtonPressed;
-(float)fadeDuration;
-(void)dealloc;
-(void)setDelegate:(id<SBLockScreenPluginControllerDelegate>)arg1 ;
-(id<SBLockScreenPluginControllerDelegate>)delegate;
-(void)reset;
-(void)settings:(id)arg1 changedValueForKey:(id)arg2 ;
-(char)handleMenuButtonTap;
-(char)handleMenuButtonDoubleTap;
-(char)wantsMenuButtonHeldEvent;
-(char)handleMenuButtonHeld;
-(char)handleVolumeUpButtonPressed;
-(char)handleVolumeDownButtonPressed;
-(char)handleHeadsetButtonPressed:(char)arg1 ;
@end

