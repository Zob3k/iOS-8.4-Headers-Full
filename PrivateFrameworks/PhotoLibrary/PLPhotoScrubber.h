/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:41:56 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <UIKit/UIControl.h>

@protocol PLPhotoScrubberDataSource, PLPhotoScrubberSpeedDelegate;
@class UIView, NSMutableArray, UIImageView, NSTimer;

@interface PLPhotoScrubber : UIControl {

	id<PLPhotoScrubberDataSource> _dataSource;
	unsigned _displayedImageIndex;
	int _prospectiveImageIndex;
	double _timeOfLastTouch;
	double _lastUpdate;
	UIView* _thumbnailTrackView;
	CGRect _thumbnailBounds;
	float _imagesPerViewRatio;
	NSMutableArray* _thumbnailViews;
	UIImageView* _loupeView;
	int _loupeIndex;
	unsigned _imageCount;
	char _scrubbing;
	char _deferImageLoading;
	char _loadImagesSynchronously;
	id<PLPhotoScrubberSpeedDelegate> _speedDelegate;
	float __scrubbingSpeed;
	int __lastSpeedRegime;
	NSTimer* __timeoutTimer;
	double __lastTime;

}

@property (assign,nonatomic) id<PLPhotoScrubberDataSource> dataSource; 
@property (assign,nonatomic) id<PLPhotoScrubberSpeedDelegate> speedDelegate;                //@synthesize speedDelegate=_speedDelegate - In the implementation block
@property (assign,setter=_setScrubbingSpeed:,nonatomic) float _scrubbingSpeed;              //@synthesize _scrubbingSpeed=__scrubbingSpeed - In the implementation block
@property (assign,setter=_setLastSpeedRegime:,nonatomic) int _lastSpeedRegime;              //@synthesize _lastSpeedRegime=__lastSpeedRegime - In the implementation block
@property (assign,setter=_setLastTime:,nonatomic) double _lastTime;                         //@synthesize _lastTime=__lastTime - In the implementation block
@property (setter=_setTimeoutTimer:,nonatomic,retain) NSTimer * _timeoutTimer;              //@synthesize _timeoutTimer=__timeoutTimer - In the implementation block
-(void)_rescheduleTimer;
-(char)isScrubbing;
-(double)_lastTime;
-(void)_setLastTime:(double)arg1 ;
-(NSTimer *)_timeoutTimer;
-(void)_handleTimeoutTimer:(id)arg1 ;
-(void)_setTimeoutTimer:(id)arg1 ;
-(void)setImage:(id)arg1 atIndex:(int)arg2 ;
-(void)ppt_scrubToAbsoluteIndex:(int)arg1 immediately:(char)arg2 ;
-(void)ppt_setIsScrubbing:(char)arg1 ;
-(void)dealloc;
-(void)setDataSource:(id<PLPhotoScrubberDataSource>)arg1 ;
-(void)reloadData;
-(id)init;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setBounds:(CGRect)arg1 ;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(char)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(char)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2 ;
-(void)willRotate;
-(void)didRotate;
-(void)setDataSource:(id)arg1 reloadData:(char)arg2 ;
-(void)setSpeedDelegate:(id<PLPhotoScrubberSpeedDelegate>)arg1 ;
-(void)setDeferImageLoading:(char)arg1 ;
-(void)reloadDataWithNewDisplayedIndex:(unsigned)arg1 ;
-(void)reloadImageAtIndex:(int)arg1 ;
-(int)displayedImageIndex;
-(void)setLoupeImage:(id)arg1 ;
-(char)isFastScrubbing;
-(void)setDisplayedImageIndex:(int)arg1 ;
-(void)_setScrubbingSpeed:(float)arg1 ;
-(void)_setLastSpeedRegime:(int)arg1 ;
-(void)_updateLoupe:(char)arg1 force:(char)arg2 ;
-(unsigned)_imageIndexFromLocation:(CGPoint)arg1 ;
-(void)_setDisplayedImageIndex:(int)arg1 immediately:(char)arg2 ;
-(int)_lastSpeedRegime;
-(void)_setIsScrubbing:(char)arg1 ;
-(unsigned)_thumbnailIndexFromLocation:(CGPoint)arg1 ;
-(void)_setDisplayedImageIndex:(id)arg1 ;
-(void)_updateLoupeWithTouch:(id)arg1 forceUpdate:(char)arg2 ;
-(CGPoint)_centerForImageAtIndex:(int)arg1 ;
-(float)_scrubbingSpeed;
-(void)_setSpeedRegime:(int)arg1 ;
-(void)_performSpeedUpdate;
-(id<PLPhotoScrubberSpeedDelegate>)speedDelegate;
@end

