/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:40:58 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <HealthDaemon/HealthDaemon-Structs.h>
#import <HealthDaemon/HDHealthEntity.h>
#import <HealthDaemon/HDDataEntity.h>

@protocol HDDataEntity <HDSQLiteEntity>
@required
+(id)codableObjectCollectionsWithExcludedSyncStore:(id)arg1 syncAnchorRange:(HDSyncAnchorRange)arg2 lastSyncAnchor:(long long*)arg3 limit:(unsigned)arg4 healthDaemon:(id)arg5 error:(id*)arg6;
+(id)codableObjectsFromObjectCollection:(id)arg1;
+(void)enumerateObjectsOfType:(int)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 sourceIdentifier:(id)arg4 authorizationFilter:(/*^block*/id)arg5 orderBy:(id)arg6 directions:(id)arg7 limit:(unsigned)arg8 handler:(/*^block*/id)arg9;
+(id)entitiesToDeleteBeforeInsertingObject:(id)arg1 sourceEntity:(id)arg2 database:(id)arg3;
+(id)insertDataObject:(id)arg1 withProvenance:(int)arg2 sourceEntity:(id)arg3 creationDate:(id)arg4 healthDaemon:(id)arg5 error:(id*)arg6;
+(id)columnNameForSortIdentifier:(id)arg1;
+(char)addCodableObjectsToCollections:(id)arg1 excludedSyncStore:(id)arg2 syncAnchorRange:(HDSyncAnchorRange)arg3 lastSyncAnchor:(long long*)arg4 predicate:(id)arg5 limit:(unsigned)arg6 healthDaemon:(id)arg7 error:(id*)arg8;
+(int)preferredEntityType;
+(void)enumerateObjectsOfType:(int)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 sourceIdentifier:(id)arg4 authorizationFilter:(/*^block*/id)arg5 limit:(unsigned)arg6 anchor:(id*)arg7 handler:(/*^block*/id)arg8;
+(void)enumerateObjectsWithHealthDaemon:(id)arg1 predicate:(id)arg2 sourceIdentifier:(id)arg3 authorizationFilter:(/*^block*/id)arg4 orderBy:(id)arg5 directions:(id)arg6 limit:(unsigned)arg7 handler:(/*^block*/id)arg8;
+(id)sourceIDsForObjectsOfType:(int)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 error:(id*)arg4;
+(int)countOfObjectsOfType:(int)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 withError:(id*)arg4;
+(void)insertDataObjects:(id)arg1 withProvenance:(int)arg2 sourceEntity:(id)arg3 creationDate:(id)arg4 healthDaemon:(id)arg5 completionHandler:(/*^block*/id)arg6;
+(char)deleteDataObjects:(id)arg1 sourceEntity:(id)arg2 failIfNotFound:(char)arg3 healthDaemon:(id)arg4 error:(id*)arg5;
+(id)propertyApplierWithProperties:(id)arg1 propertySetters:(id)arg2 authorizationFilter:(/*^block*/id)arg3 database:(id)arg4;
+(char)isBackedByTable;
+(char)acceptsObject:(id)arg1;
+(Class)propertyApplierClass;
+(char)deleteDataObjects:(id)arg1 sourceEntity:(id)arg2 healthDaemon:(id)arg3 error:(id*)arg4;
+(id)dataEntityForObject:(id)arg1 healthDaemon:(id)arg2 error:(id*)arg3;
+(id)objectWithUUID:(id)arg1 healthDaemon:(id)arg2 error:(id*)arg3;
+(id)deleteStatementsForRelatedEntitiesInDatabase:(id)arg1;
-(id)dataAnchor;

@end


@class NSString;

@interface HDDataEntity : HDHealthEntity <HDDataEntity>

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)createTableSQL;
+(int)protectionClass;
+(id)propertyForSyncProvenance;
+(id)codableObjectCollectionsWithExcludedSyncStore:(id)arg1 syncAnchorRange:(HDSyncAnchorRange)arg2 lastSyncAnchor:(long long*)arg3 limit:(unsigned)arg4 healthDaemon:(id)arg5 error:(id*)arg6 ;
+(id)codableObjectsFromObjectCollection:(id)arg1 ;
+(void)enumerateObjectsOfType:(int)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 sourceIdentifier:(id)arg4 authorizationFilter:(/*^block*/id)arg5 orderBy:(id)arg6 directions:(id)arg7 limit:(unsigned)arg8 handler:(/*^block*/id)arg9 ;
+(id)_databaseTable;
+(id)_columnsSQL;
+(Class)_associatedDataObjectClass;
+(id)_propertySettersForDataObject;
+(id)_tableValuesFromDataObject:(id)arg1 ;
+(id)entitiesToDeleteBeforeInsertingObject:(id)arg1 sourceEntity:(id)arg2 database:(id)arg3 ;
+(id)insertDataObject:(id)arg1 withProvenance:(int)arg2 sourceEntity:(id)arg3 creationDate:(id)arg4 healthDaemon:(id)arg5 error:(id*)arg6 ;
+(id)associationPropertyForEntityClass:(Class)arg1 ;
+(id)columnNameForSortIdentifier:(id)arg1 ;
+(char)addCodableObjectsToCollections:(id)arg1 excludedSyncStore:(id)arg2 syncAnchorRange:(HDSyncAnchorRange)arg3 lastSyncAnchor:(long long*)arg4 predicate:(id)arg5 limit:(unsigned)arg6 healthDaemon:(id)arg7 error:(id*)arg8 ;
+(int)preferredEntityType;
+(void)enumerateObjectsOfType:(int)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 sourceIdentifier:(id)arg4 authorizationFilter:(/*^block*/id)arg5 limit:(unsigned)arg6 anchor:(id*)arg7 handler:(/*^block*/id)arg8 ;
+(void)enumerateObjectsWithHealthDaemon:(id)arg1 predicate:(id)arg2 sourceIdentifier:(id)arg3 authorizationFilter:(/*^block*/id)arg4 orderBy:(id)arg5 directions:(id)arg6 limit:(unsigned)arg7 handler:(/*^block*/id)arg8 ;
+(id)sourceIDsForObjectsOfType:(int)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 error:(id*)arg4 ;
+(int)countOfObjectsOfType:(int)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 withError:(id*)arg4 ;
+(void)insertDataObjects:(id)arg1 withProvenance:(int)arg2 sourceEntity:(id)arg3 creationDate:(id)arg4 healthDaemon:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
+(id)_insertDataObject:(id)arg1 withProvenance:(int)arg2 sourceEntity:(id)arg3 inDatabase:(id)arg4 error:(id*)arg5 ;
+(char)deleteDataObjects:(id)arg1 sourceEntity:(id)arg2 failIfNotFound:(char)arg3 healthDaemon:(id)arg4 error:(id*)arg5 ;
+(char)_deleteDataObjectWithUUID:(id)arg1 sourceEntity:(id)arg2 failIfNotFound:(char)arg3 deletionContext:(id)arg4 error:(id*)arg5 ;
+(id)_aggregatedPropertySettersForDataObjectWithOrderedProperties:(id*)arg1 ;
+(id)_propertiesForFetchingDataObjectsWithAssociations:(id)arg1 ;
+(id)propertyApplierWithProperties:(id)arg1 propertySetters:(id)arg2 authorizationFilter:(/*^block*/id)arg3 database:(id)arg4 ;
+(id)_dataObjectWithEntity:(id)arg1 type:(int)arg2 propertyApplier:(id)arg3 values:(id*)arg4 healthDaemon:(id)arg5 ;
+(char)_addCodableObjectsToCollections:(id)arg1 healthDaemon:(id)arg2 error:(id*)arg3 queryHandler:(/*^block*/id)arg4 ;
+(Class)_ancestorWithProperty:(id)arg1 ;
+(char)isBackedByTable;
+(void)_removeObjectWithPersistentID:(long long)arg1 database:(id)arg2 ;
+(char)_deleteDataEntityWithPredicate:(id)arg1 failIfNotFound:(char)arg2 deletionContext:(id)arg3 error:(id*)arg4 ;
+(char)acceptsObject:(id)arg1 ;
+(Class)propertyApplierClass;
+(char)deleteDataObjects:(id)arg1 sourceEntity:(id)arg2 healthDaemon:(id)arg3 error:(id*)arg4 ;
+(id)dataEntityForObject:(id)arg1 healthDaemon:(id)arg2 error:(id*)arg3 ;
+(id)objectWithUUID:(id)arg1 healthDaemon:(id)arg2 error:(id*)arg3 ;
+(id)deleteStatementsForRelatedEntitiesInDatabase:(id)arg1 ;
+(id)databaseTable;
+(id)disambiguatedSQLForProperty:(id)arg1 ;
+(id)joinClauseForProperty:(id)arg1 ;
-(id)_dataID;
-(id)dataAnchor;
@end

