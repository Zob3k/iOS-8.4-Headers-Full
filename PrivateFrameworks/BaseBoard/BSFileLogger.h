/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:39:31 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <BaseBoard/BSLogging.h>

@protocol OS_dispatch_queue, BSFileLoggerDelegate;
@class NSObject, NSString, NSMutableArray, NSMutableSet, NSDateFormatter;

@interface BSFileLogger : NSObject <BSLogging> {

	NSObject*<OS_dispatch_queue> _queue;
	NSString* _logPath;
	NSMutableArray* _recentLogs;
	NSMutableSet* _enabledCategories;
	NSDateFormatter* _memoryLogDateFormatter;
	char _enabledByPreference;
	id<BSFileLoggerDelegate> _delegate;

}

@property (nonatomic,readonly) NSString * name; 
@property (getter=isEnabled,nonatomic,readonly) char enabled; 
@property (nonatomic,retain,readonly) NSObject*<OS_dispatch_queue> queue;              //@synthesize queue=_queue - In the implementation block
@property (nonatomic,readonly) NSString * logPath; 
@property (nonatomic,readonly) unsigned logDestinations; 
@property (nonatomic,readonly) int maxLogCount; 
@property (nonatomic,readonly) int maxLogSize; 
@property (nonatomic,readonly) unsigned maxLogLinesInMemory; 
@property (nonatomic,readonly) NSString * logPreferenceDomain; 
@property (nonatomic,readonly) NSString * logPreferenceName; 
@property (nonatomic,readonly) char shouldEnableOnInternalBuilds; 
@property (assign,nonatomic) id<BSFileLoggerDelegate> delegate;                        //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)setDelegate:(id<BSFileLoggerDelegate>)arg1 ;
-(id)init;
-(id<BSFileLoggerDelegate>)delegate;
-(NSString *)name;
-(char)isEnabled;
-(void)_setEnabled:(char)arg1 ;
-(void)logWithFormat:(id)arg1 arguments:(void*)arg2 ;
-(void)logWithFormat:(id)arg1 ;
-(char)_queue_isEnabledForCategory:(id)arg1 ;
-(void)_setEnabled:(char)arg1 fromDefaults:(char)arg2 ;
-(void)_queue_appendLogForCategory:(id)arg1 withFormat:(id)arg2 arguments:(void*)arg3 ;
-(id)composedLogForCategory:(id)arg1 destination:(unsigned)arg2 format:(id)arg3 arguments:(void*)arg4 ;
-(unsigned)maxLogLinesInMemory;
-(void)_appendLogForCategory:(id)arg1 withFormat:(id)arg2 arguments:(void*)arg3 ;
-(char)isEnabledForCategory:(id)arg1 ;
-(void)reloadFromDefaults;
-(void)_enableLogCategory:(id)arg1 ;
-(void)_disableLogCategory:(id)arg1 ;
-(NSString *)logPreferenceDomain;
-(NSString *)logPreferenceName;
-(NSString *)logPath;
-(unsigned)logDestinations;
-(NSObject*<OS_dispatch_queue>)queue;
-(id)loggerForCatagory:(id)arg1 ;
-(int)maxLogCount;
-(int)maxLogSize;
-(id)logPrefixForCategory:(id)arg1 destination:(unsigned)arg2 ;
-(void)willBeginLoggingToPath:(id)arg1 ;
-(char)shouldEnableOnInternalBuilds;
-(id)recentLogs;
-(char)saveRecentLogsToTemporaryPath:(id*)arg1 ;
@end

