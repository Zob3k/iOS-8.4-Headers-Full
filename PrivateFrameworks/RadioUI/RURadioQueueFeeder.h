/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:18 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/RadioUI.framework/RadioUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <RadioUI/RadioUI-Structs.h>
#import <MediaPlayer/MPQueueFeeder.h>
#import <RadioUI/MPUQueueBehaviorManaging.h>

@class RURadioAdObserver, NSMapTable, MPAVItem, MPPlaceholderAVItem, SSVPlaybackLease, NSArray, RadioStation, RadioStationSkipController, NSMutableSet, NSString;

@interface RURadioQueueFeeder : MPQueueFeeder <MPUQueueBehaviorManaging> {

	RURadioAdObserver* _adObserver;
	NSMapTable* _adSlotToAllAdTracks;
	NSMapTable* _adSlotToInsertedAdTracks;
	NSMapTable* _adSlotToRadioTrack;
	char _canSeek;
	MPAVItem* _currentItem;
	char _didReceiveTracklistEnd;
	unsigned _feederRevisionID;
	NSMapTable* _fetchingTracksCompletionHandlersByStation;
	char _hasReceivedStreamTrack;
	char _hasVerifiedCloudStatus;
	char _isPreparingStation;
	int _maximumGetTracksRetryCount;
	MPPlaceholderAVItem* _placeholderAVItem;
	SSVPlaybackLease* _playbackLease;
	int _playbackMode;
	NSArray* _previousDatabaseTrackPlaybackDescriptorQueue;
	NSMapTable* _radioTrackToAdSlot;
	RadioStation* _station;
	RadioStationSkipController* _stationSkipController;
	NSMapTable* _stationTracklistRetrievalRetryCount;
	NSArray* _tracks;
	NSMutableSet* _visibleAdSlots;
	char _wasUsingBackgroundNetwork;

}

@property (nonatomic,retain) RadioStation * station; 
@property (nonatomic,copy,readonly) NSArray * allPreparedAdSlotRadioTracks; 
@property (nonatomic,readonly) NSArray * tracksForNextPlaybackGroup; 
@property (nonatomic,copy) NSArray * tracks;                                             //@synthesize tracks=_tracks - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) char allowsUserVisibleUpcomingItems; 
@property (nonatomic,readonly) char canSeek; 
@property (nonatomic,readonly) char canSkipToPreviousItem; 
@property (nonatomic,readonly) int playbackMode; 
@property (nonatomic,readonly) char userCanChangeShuffleAndRepeatType; 
+(char)isExplicitTracksEnabled;
+(id)_tracksWithPromotionalContentFromTracks:(id)arg1 ;
+(void)_updateIsExplicitContentRestrictedAndPostNotification:(char)arg1 removeTracks:(char)arg2 ;
+(void)_explicitContentAllowedDidChangeNotification:(id)arg1 ;
+(char)isUserDefaultExplicitTracksEnabled;
+(id)_tracksByRemovingPromotionalContentFromTracks:(id)arg1 ;
+(char)isProfileExplicitContentRestricted;
+(void)setIgnoresUserDefaultExplicitTracksEnabled:(char)arg1 ;
+(void)setUserDefaultExplicitTracksEnabled:(char)arg1 ;
+(int)maximumNumberOfTracksToFetch;
-(id)valueForEntityProperty:(id)arg1 ;
-(id)imageURLForEntityArtworkProperty:(id)arg1 fittingSize:(CGSize)arg2 destinationScale:(float)arg3 ;
-(id)entityUniqueIdentifier;
-(id)valuesForEntityProperties:(id)arg1 ;
-(int)playbackMode;
-(unsigned)indexOfItemWithIdentifier:(id)arg1 ;
-(id)copyRawItemAtIndex:(unsigned)arg1 ;
-(id)playbackInfoForIdentifier:(id)arg1 ;
-(id)identifierAtIndex:(unsigned)arg1 ;
-(void)reloadWithPlaybackContext:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3 ;
-(id)localizedPositionInPlaylistString:(id)arg1 ;
-(char)hasValidItemAtIndex:(unsigned)arg1 ;
-(char)canSkipItem:(id)arg1 ;
-(char)allowsUserVisibleUpcomingItems;
-(char)canSkipToPreviousItem;
-(char)userCanChangeShuffleAndRepeatType;
-(char)shouldReuseQueueFeederForPlaybackContext:(id)arg1 ;
-(char)canReorder;
-(unsigned)itemTypeForIndex:(unsigned)arg1 ;
-(char)playerPreparesItemsForPlaybackAsynchronously;
-(SCD_Struct_RU5)skipLimit;
-(unsigned)realRepeatType;
-(id)audioSessionModeForItemAtIndex:(unsigned)arg1 ;
-(unsigned)initialPlaybackQueueDepthForStartingIndex:(unsigned)arg1 ;
-(void)player:(id)arg1 currentItemDidChangeToItem:(id)arg2 ;
-(char)player:(id)arg1 shouldContinuePlaybackForNetworkType:(int)arg2 returningError:(id*)arg3 ;
-(RadioStation *)station;
-(void)_radioModelDidChangeNotification:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(Class)itemClass;
-(unsigned)itemCount;
-(char)preventsHardQueueModificationsForItem:(id)arg1 ;
-(void)setStation:(RadioStation *)arg1 ;
-(void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1 ;
-(NSArray *)allPreparedAdSlotRadioTracks;
-(id)preparedAdSlotForRadioTrack:(id)arg1 ;
-(char)isRadioQueueFeeder;
-(void)_adSlotAdTracksDidChangeNotification:(id)arg1 ;
-(void)_adTrackActionDidFinishNotification:(id)arg1 ;
-(void)_adTrackActionWillBeginNotification:(id)arg1 ;
-(void)_adTrackDidFailToLoadNotification:(id)arg1 ;
-(void)_updateForLoadedStoreBag:(id)arg1 ;
-(void)_storeBagDidLoadNotification:(id)arg1 ;
-(void)_verifyCloudStatusIfNeeded;
-(char)_hasReceivedStreamTrack;
-(id)_trackAtIndex:(unsigned)arg1 shouldFetchAddtionalTracks:(char)arg2 ;
-(int)_playbackModeForTrack:(id)arg1 ;
-(char)_canHavePlaceholderTrack;
-(void)_setAdSlot:(id)arg1 forRadioTrack:(id)arg2 ;
-(void)_applyTracksForAdSlot:(id)arg1 radioTrack:(id)arg2 currentPlayingItem:(id)arg3 toTracks:(id)arg4 ;
-(void)setTracks:(NSArray *)arg1 ;
-(void)_updateTracksForAdSlot:(id)arg1 radioTrack:(id)arg2 ;
-(id)_adSlotForAdTrack:(id)arg1 ;
-(void)_sendContentsDidChangeWithCurrentItem;
-(id)_currentTrackPlaybackDescriptorQueueWithCurrentItem:(id)arg1 shouldIncludePlaybackInformation:(char)arg2 skipDate:(id)arg3 ;
-(unsigned)_indexOfCurrentItem;
-(void)_updateWithTracks:(id)arg1 tracklistActionType:(int)arg2 options:(int)arg3 ;
-(void)_removeAllTracks;
-(void)_fetchAdditionalTracksWithBaseIndex:(int)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)_fetchNextTrackAdSlotIfNeeded;
-(void)_updateTracksForChangedTrackPlaybackDescriptorQueue;
-(void)_configurePlaceholderAVItem;
-(void)_numberOfAvailableSkipsDidChangeNotification:(id)arg1 ;
-(unsigned)_indexOfItem:(id)arg1 ;
-(void)_performGetTracksOperationForStation:(id)arg1 withNumberOfTracks:(int)arg2 ;
-(void)_fetchAdSlotIfNeededForRadioTrack:(id)arg1 inStation:(id)arg2 ;
-(unsigned)_indexOfItem:(id)arg1 inTracks:(id)arg2 ;
-(id)_tracksByRemovingPlayedTracks:(id)arg1 ;
-(char)shouldContinuePlaybackForNetworkType:(int)arg1 player:(id)arg2 ;
-(NSArray *)tracksForNextPlaybackGroup;
-(id)MPU_contentItemIdentifierCollection;
-(void)_applicationWillTerminateNotification:(id)arg1 ;
-(NSArray *)tracks;
-(char)canSeek;
@end

