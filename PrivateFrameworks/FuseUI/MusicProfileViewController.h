/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:40:36 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <FuseUI/FuseUI-Structs.h>
#import <UIKit/UIViewController.h>
#import <FuseUI/MusicProfileDetailViewDelegate.h>
#import <FuseUI/MusicProfileSplitMainViewControllerDelegate.h>
#import <FuseUI/MusicJSProfileNativeViewControllerDelegate.h>
#import <FuseUI/MusicJSNativeViewControllerFactory.h>
#import <FuseUI/SKUIProxyScrollViewDelegate.h>
#import <FuseUI/MusicClientContextConsuming.h>
#import <FuseUI/SKUINavigationBarDisplayConfiguring.h>

@protocol MusicEntityProviding;
@class MPMediaItemCollection, UIView, MusicProfileDetailView, NSString, MusicInteractiveBlurringView, MusicMediaUberHeaderLegibilityOverlayView, UIColor, MusicProfileHeaderView, MusicNavigationBarTitleContainerView, MusicEntityValueContext, SKUIProxyScrollView, NSNumber, NSArray, NSMapTable, MusicProfileSplitMainViewController, MPArtworkCatalog, MusicUberArtworkView, MusicClientContext, UIScrollView, SKUIClientContext;

@interface MusicProfileViewController : UIViewController <MusicProfileDetailViewDelegate, MusicProfileSplitMainViewControllerDelegate, MusicJSProfileNativeViewControllerDelegate, MusicJSNativeViewControllerFactory, SKUIProxyScrollViewDelegate, MusicClientContextConsuming, SKUINavigationBarDisplayConfiguring> {

	MPMediaItemCollection* _artistMediaItemCollection;
	UIView* _backgroundView;
	char _biographyNeedsContent;
	UIView* _hairlineView;
	MusicProfileDetailView* _detailsView;
	char _didDispatchLoadEvent;
	UIEdgeInsets _externalContentInset;
	NSString* _followerCountText;
	NSString* _followersText;
	MusicInteractiveBlurringView* _headerBlurringView;
	float _headerHeight;
	MusicMediaUberHeaderLegibilityOverlayView* _headerLegibilityOverlayView;
	UIView* _headerMultiplyTintView;
	UIColor* _headerRadialGradientColor;
	UIColor* _headerTintColor;
	MusicProfileHeaderView* _headerView;
	char _isAdminEnabled;
	char _isAlbumArtist;
	char _isBiographyInitiallyAvailable;
	char _isCollapsed;
	char _isContainedWithinSplitViewDetail;
	char _isHandlingScrollViewUpdate;
	char _isHeaderBlurringViewTransitioning;
	char _isWaitingToPushProfileBiographyView;
	MusicNavigationBarTitleContainerView* _navigationBarTitleContainerView;
	NSString* _navigationTitle;
	int _numberOfFollowers;
	id<MusicEntityProviding> _profileEntityProvider;
	MusicEntityValueContext* _profileEntityValueContext;
	unsigned _profileType;
	SKUIProxyScrollView* _proxyScrollView;
	NSString* _segmentIdentifierNeedingContent;
	char _shouldUseAvailableContent;
	NSNumber* _storeAdamID;
	char _socialHidden;
	NSArray* _splitScrollViews;
	NSMapTable* _splitScrollViewToScrollingContext;
	MusicProfileSplitMainViewController* _splitDetailViewController;
	MusicProfileSplitMainViewController* _splitMainViewController;
	MPArtworkCatalog* _uberImageArtworkCatalog;
	MusicUberArtworkView* _uberImageView;
	CGSize _uberImageViewConfigurationSize;
	float _uberImageViewConfigurationDisplayScale;
	char _usesLightContentOverHeader;
	char _useNoArtworkStyle;
	MusicClientContext* _clientContext;
	int _options;

}

@property (assign,nonatomic) char shouldAutomaticallySelectMyMusicSegment; 
@property (assign,nonatomic) int options;                                                                  //@synthesize options=_options - In the implementation block
@property (nonatomic,readonly) UIScrollView * currentPrimaryScrollView; 
@property (nonatomic,readonly) MusicProfileSplitMainViewController * splitMainViewController; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) SKUIClientContext * clientContext; 
-(void)dealloc;
-(int)preferredStatusBarStyle;
-(unsigned)supportedInterfaceOrientations;
-(void)traitCollectionDidChange:(id)arg1 ;
-(void)viewDidLayoutSubviews;
-(void)viewWillAppear:(char)arg1 ;
-(id)contentScrollView;
-(void)viewDidLoad;
-(void)viewDidDisappear:(char)arg1 ;
-(void)setOptions:(int)arg1 ;
-(int)options;
-(char)music_handleUserActivityContext:(id)arg1 containerItem:(id)arg2 ;
-(id)initWithProfileEntityProvider:(id)arg1 isAlbumArtist:(char)arg2 clientContext:(id)arg3 existingJSProfileNativeViewController:(id)arg4 profileType:(unsigned)arg5 ;
-(void)profileDetailViewDidSelectTitle:(id)arg1 ;
-(void)profileDetailViewDidSelectContextualActionsButton:(id)arg1 ;
-(void)profileDetailViewDidSelectEditButton:(id)arg1 ;
-(void)profileDetailView:(id)arg1 didUpdateFollowingState:(char)arg2 ;
-(void)profileDetailViewDidSelectShareActionsButton:(id)arg1 ;
-(void)profileSplitMainViewControllerContentScrollViewContentSizeDidChange:(id)arg1 ;
-(void)profileSplitMainViewController:(id)arg1 needsContentForSegmentWithIdentifier:(id)arg2 ;
-(void)profileSplitMainViewControllerContentScrollViewDidScroll:(id)arg1 ;
-(void)profileSplitMainViewController:(id)arg1 contentScrollViewWillEndDraggingWithVelocity:(CGPoint)arg2 targetContentOffset:(inout CGPoint*)arg3 ;
-(char)shouldAutomaticallySelectMyMusicSegment;
-(void)setShouldAutomaticallySelectMyMusicSegment:(char)arg1 ;
-(MusicProfileSplitMainViewController *)splitMainViewController;
-(id)loadJSNativeViewControllerWithAppContext:(id)arg1 ;
-(void)_updateFollowText;
-(void)_dispatchNeedsContentForSegmentWithIdentifier:(id)arg1 ;
-(void)_checkAdminPermissionForCurrentProfile;
-(void)jsProfileNativeViewController:(id)arg1 presentBiographyEditorDocument:(id)arg2 options:(id)arg3 ;
-(void)jsProfileNativeViewController:(id)arg1 presentShareDocument:(id)arg2 options:(id)arg3 ;
-(void)jsProfileNativeViewController:(id)arg1 setMoreRelatedContentDocument:(id)arg2 options:(id)arg3 ;
-(void)jsProfileNativeViewController:(id)arg1 setProfileEntityValueProviderData:(id)arg2 ;
-(void)jsProfileNativeViewController:(id)arg1 setRelatedContentDocument:(id)arg2 options:(id)arg3 ;
-(void)jsProfileNativeViewController:(id)arg1 setReportingInformation:(id)arg2 ;
-(void)jsProfileNativeViewController:(id)arg1 setDocument:(id)arg2 options:(id)arg3 forSegmentIdentifier:(id)arg4 ;
-(void)jsProfileNativeViewController:(id)arg1 setSelectedSegmentIdentifier:(id)arg2 ;
-(void)jsProfileNativeViewController:(id)arg1 setVisibleSegments:(id)arg2 ;
-(void)jsProfileNativeViewController:(id)arg1 setAvailableContentFlags:(id)arg2 ;
-(void)jsProfileNativeViewController:(id)arg1 setNumberOfFollowers:(int)arg2 ;
-(void)jsProfileNativeViewController:(id)arg1 setFollowerCountText:(id)arg2 followersText:(id)arg3 ;
-(void)jsProfileNativeViewController:(id)arg1 setSocialHidden:(char)arg2 ;
-(char)jsProfileNativeViewControllerSupportsRelatedContentDocument:(id)arg1 ;
-(void)_checkAdminPermission;
-(void)_updateNavigationTitle;
-(void)_updateHeaderViewFrameWithHeaderHeight:(float)arg1 ;
-(char)_updateSplitScrollViews;
-(id)_splitMainViewController;
-(id)_splitDetailViewController;
-(void)_updateScrollViewWithOriginatingScrollView:(id)arg1 shouldAlwaysAdjustContentOffset:(char)arg2 ;
-(id)_scrollingContextForSplitScrollView:(id)arg1 ;
-(id)_currentPrimaryScrollView;
-(char)_hasVisibleNavigationBar;
-(float)_minimumHeaderHeight;
-(float)_calculateDisappearanceProgressForHeaderHeight:(float)arg1 ;
-(void)_updateScrollViewWithOriginatingScrollView:(id)arg1 contentOffset:(CGPoint)arg2 shouldAlwaysAdjustContentOffset:(char)arg3 ;
-(float)_effectiveHeaderHeightForContentOffset:(CGPoint)arg1 externalScrollViewContentInset:(UIEdgeInsets)arg2 ;
-(id)_splitMainContentScrollView;
-(id)_splitDetailContentScrollView;
-(UIScrollView *)currentPrimaryScrollView;
-(char)_calculateCollapsed;
-(void)_reconfigureProfileArtwork;
-(void)_registerForNotificationsForProfileEntityProvider:(id)arg1 ;
-(void)_unregisterForNotificationsForProfileEntityProvider:(id)arg1 ;
-(void)_updateToMatchCapabilities;
-(char)_shouldShowBiographyDetailSplitView;
-(void)_updateFollowCount:(int)arg1 ;
-(void)_dispatchNeedsBiographyDocument;
-(void)_updateSplitChildViewControllers;
-(void)_updateHeaderColors;
-(void)_updateNavigationItemTitleView;
-(void)_pushBiographyDocument:(id)arg1 options:(id)arg2 ;
-(void)_updateFollowText:(char)arg1 animated:(char)arg2 ;
-(void)_accessBiographyDocumentUsingBlock:(/*^block*/id)arg1 ;
-(void)_updateHeaderColorsForArtworkBackgroundColor:(id)arg1 allowsBarsAppearanceUpdate:(char)arg2 ;
-(void)_initializeHeaderTintColor;
-(void)_profileEntityProviderDidInvalidateNotification:(id)arg1 ;
-(void)setClientContext:(SKUIClientContext *)arg1 ;
-(SKUIClientContext *)clientContext;
-(char)prefersNavigationBarBackgroundViewHidden;
-(id)navigationBarTintColor;
-(void)scrollViewDidChangeContentInset:(id)arg1 ;
@end

