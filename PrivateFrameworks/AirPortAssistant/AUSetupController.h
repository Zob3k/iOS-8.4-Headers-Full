/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:39:23 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/AirPortAssistant.framework/AirPortAssistant
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AirPortAssistant/AirPortAssistant-Structs.h>
#import <AirPortAssistant/AssistantCallbackController.h>
#import <AirPortAssistant/SetupUIConfigDelegateResult.h>
#import <AirPortAssistant/AutoGuessSetup.h>
#import <AirPortAssistant/BaseStationSetup.h>

@class NSDictionary, NSMutableSet, NSString, NSDate;

@interface AUSetupController : AssistantCallbackController <SetupUIConfigDelegateResult, AutoGuessSetup, BaseStationSetup> {

	id _context;
	char _autoJoinState;
	char _scanningState;
	char _busy;
	char _initializedBasePasswordFlag;
	char _performingManualRead;
	char _needToNilBonjour;
	BSConfigurationContextRef _configContext;
	NSMutableSet* _setupDelegates;
	id _uiConfigDelegate;
	NSString* _autoGuessSetupRecommendation;
	NSDictionary* _lastInstrumentation;
	char _rememberDiskPassword;
	NSDate* _lastHeardFromDevice;
	NSString* _lastSystemName;
	NSString* _lastDNSName;
	NSString* _keychainBasePassword;
	NSString* _keychainWiFiPassword;
	NSString* _keychainDiskPassword;
	char _activeTask;

}

@property (nonatomic,readonly) NSMutableSet * setupDelegates;                         //@synthesize setupDelegates=_setupDelegates - In the implementation block
@property (assign,nonatomic) id<SetupUIConfigDelegate> uiConfigDelegate;              //@synthesize uiConfigDelegate=_uiConfigDelegate - In the implementation block
@property (assign,nonatomic) id context;                                              //@synthesize context=_context - In the implementation block
@property (nonatomic,retain) NSString * autoGuessSetupRecommendation;                 //@synthesize autoGuessSetupRecommendation=_autoGuessSetupRecommendation - In the implementation block
@property (nonatomic,retain) NSDictionary * lastInstrumentation;                      //@synthesize lastInstrumentation=_lastInstrumentation - In the implementation block
@property (nonatomic,retain) NSDictionary * bonjourRecord; 
@property (assign,nonatomic) char rememberBasePassword; 
@property (assign,nonatomic) char rememberWiFiPassword; 
@property (assign,nonatomic) char rememberDiskPassword;                               //@synthesize rememberDiskPassword=_rememberDiskPassword - In the implementation block
@property (nonatomic,retain) NSString * keychainBasePassword; 
@property (nonatomic,retain) NSString * keychainWiFiPassword; 
@property (nonatomic,retain) NSString * keychainDiskPassword; 
@property (nonatomic,readonly) NSDate * lastHeardFromDevice;                          //@synthesize lastHeardFromDevice=_lastHeardFromDevice - In the implementation block
@property (nonatomic,retain) NSString * lastSystemName;                               //@synthesize lastSystemName=_lastSystemName - In the implementation block
@property (nonatomic,retain) NSString * lastDNSName;                                  //@synthesize lastDNSName=_lastDNSName - In the implementation block
@property (assign,nonatomic) char activeTask;                                         //@synthesize activeTask=_activeTask - In the implementation block
@property (retain) NSDictionary * restoreRecommendation; 
+(void)initialize;
+(id)setupController;
-(char)isMonitoring;
-(void)dealloc;
-(id)init;
-(id)context;
-(void)setContext:(id)arg1 ;
-(NSDictionary *)lastInstrumentation;
-(void)setLastInstrumentation:(NSDictionary *)arg1 ;
-(long)subclassAssistantCallback:(AssistantCallbackContext*)arg1 ;
-(NSMutableSet *)setupDelegates;
-(void)setUiConfigDelegate:(id<SetupUIConfigDelegate>)arg1 ;
-(long)setupFromAutoguessRecommendation:(id)arg1 withOptions:(id)arg2 ;
-(long)updateSettingsAsync;
-(long)cancelSetup;
-(void)setupUIConfigResult:(long)arg1 withOptions:(id)arg2 ;
-(void)applicationDidEnterBackgroundNotification:(id)arg1 ;
-(long)closeAllConnections:(char)arg1 ;
-(void)setLastDNSName:(NSString *)arg1 ;
-(void)setLastSystemName:(NSString *)arg1 ;
-(void)setAutoGuessSetupRecommendation:(NSString *)arg1 ;
-(char)activeTask;
-(id<SetupUIConfigDelegate>)uiConfigDelegate;
-(long)copyValue:(id*)arg1 forBSSetting:(int)arg2 ;
-(long)copyValue:(id*)arg1 forSettingPath:(id)arg2 ;
-(int)stateForProblem:(unsigned)arg1 ;
-(char)rememberBasePassword;
-(void)setRememberBasePassword:(char)arg1 ;
-(char)rememberWiFiPassword;
-(void)setRememberWiFiPassword:(char)arg1 ;
-(char)rememberDiskPassword;
-(void)setRememberDiskPassword:(char)arg1 ;
-(long)readPropertyListFromBaseAsync:(id)arg1 ;
-(void)handleBusyStart;
-(void)setupWiFiState;
-(BaseStationRef)bsRef;
-(long)getValue:(id*)arg1 forBSSetting:(int)arg2 ;
-(NSDictionary *)bonjourRecord;
-(void)updateRememberKeychainFlagsButSkipBasePassword:(char)arg1 ;
-(void)loadKeychainBasePassword;
-(void)loadKeychainWirelessPassword;
-(void)deleteKeychainBasePassword;
-(long)updateKeychainWithPasswords;
-(void)saveKeychainBasePassword;
-(void)setKeychainBasePassword:(NSString *)arg1 ;
-(id)bestKeychainMACAddress;
-(NSString *)keychainBasePassword;
-(long)getValue:(id*)arg1 forSettingPath:(id)arg2 ;
-(void)setKeychainWiFiPassword:(NSString *)arg1 ;
-(int)taskState;
-(void)setActiveTask:(char)arg1 ;
-(long)setupWithTargetNetwork:(id)arg1 ;
-(long)setupWithTargetBaseStation:(id)arg1 andSettings:(id)arg2 ;
-(long)setValue:(id)arg1 forBSSetting:(int)arg2 ;
-(long)setValue:(id)arg1 forSettingPath:(id)arg2 ;
-(char)hasACPFeature:(unsigned)arg1 ;
-(long)unignoredProblemCount;
-(id)validateAllSettingsAndGetErrors;
-(id)validateSettingsAndGetErrors:(id)arg1 ;
-(long)ignoreProblemCode:(unsigned)arg1 ;
-(long)unIgnoreProblemCode:(unsigned)arg1 ;
-(NSString *)keychainWiFiPassword;
-(NSString *)keychainDiskPassword;
-(void)setKeychainDiskPassword:(NSString *)arg1 ;
-(long)joinAsync;
-(long)joinAndBrowseAsync;
-(long)readAllPropertiesFromBaseAsync;
-(id)snapshotChangedKeys;
-(void)snapshotResetAll;
-(char)snapshotDirty;
-(long)snapshotPush;
-(long)snapshotPop:(char)arg1 ;
-(id)allKeychainMACAddresses;
-(void)updateRememberKeychainFlagsIfInitializing;
-(long)updateKeychainWithPasswordsWithStatus:(long)arg1 ;
-(void)saveKeychainWirelessPassword;
-(void)deleteKeychainWirelessPassword;
-(long)rpcSystemInterfacesAsync;
-(long)rpcStartRemoteBrowse:(id)arg1 withService:(id)arg2 ;
-(long)rpcRefreshBSSettingAsync:(int)arg1 ;
-(long)rpcDisconnectAllDiskUsersWithMessageAsync:(id)arg1 ;
-(long)rpcRenewDHCPLeaseAsync;
-(long)rpcWPSStartAsync:(char)arg1 dayPass:(char)arg2 timeout:(unsigned)arg3 ;
-(long)rpcWPSStopAsync;
-(long)rpcWPSAllowClientAsync:(id)arg1 ;
-(unsigned)taskCode;
-(int)busyState;
-(long)taskRestartAsync;
-(long)taskRestoreDefaultsAsync:(char)arg1 ;
-(long)taskUploadFirmwareAsync:(id)arg1 ;
-(long)taskEraseDiskAsync:(id)arg1 ;
-(long)taskArchiveDiskAsync:(id)arg1 ;
-(long)setMonitorForChanges:(char)arg1 ;
-(NSDate *)lastHeardFromDevice;
-(void)setBonjourRecord:(NSDictionary *)arg1 ;
-(char)dirty;
-(int)ethernetPortCount;
-(NSString *)autoGuessSetupRecommendation;
-(NSString *)lastSystemName;
-(NSString *)lastDNSName;
-(void)resetWiFiState;
-(char)performingManualRead;
-(void)handleBusyComplete;
-(void)updateLastHeardFromDevice;
-(void)handleSetupComplete:(long)arg1 ;
-(void)handleTaskComplete;
-(void)logChangesToCCL;
-(id)targetBaseInfoDict;
-(long)closeAllConnections;
-(long)cancelTask;
@end

