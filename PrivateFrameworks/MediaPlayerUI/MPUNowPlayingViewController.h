/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:41:21 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/MediaPlayerUI.framework/MediaPlayerUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayerUI/MediaPlayerUI-Structs.h>
#import <UIKit/UIViewController.h>
#import <MediaPlayerUI/MPURatingControlDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UINavigationBarDelegate.h>
#import <MediaPlayerUI/MPTransportControlsTarget.h>
#import <MediaPlayerUI/MPUNowPlayingPlaybackControlsViewDelegate.h>

@class UIView, UIViewController, UINavigationItem, MPQueueFeeder, MPAVItem, MPULyricsView, UINavigationBar, MPUNowPlayingPlaybackControlsView, MPURatingControl, NSTimer, UITapGestureRecognizer, MPUNowPlayingTitlesView, MPUApplicationDefaults, MPNowPlayingObserver, MPAVController, NSString;

@interface MPUNowPlayingViewController : UIViewController <MPURatingControlDelegate, UIGestureRecognizerDelegate, UINavigationBarDelegate, MPTransportControlsTarget, MPUNowPlayingPlaybackControlsViewDelegate> {

	char _canMarqueeText;
	UIView* _contentView;
	UIViewController* _contentViewController;
	UINavigationItem* _effectiveNavigationItem;
	MPQueueFeeder* _feeder;
	char _hasProperApplicationStateForWantingVideoLayer;
	char _hasVisibilityForWantingVideoLayer;
	char _isDetailScrubbing;
	char _isShowingRatings;
	MPAVItem* _item;
	MPULyricsView* _lyricsView;
	UINavigationBar* _padFakeNavigationBar;
	MPUNowPlayingPlaybackControlsView* _playbackControlsView;
	UIViewController* _lastPresentedViewController;
	UINavigationItem* _previousNavigationItem;
	MPURatingControl* _ratingControl;
	NSTimer* _skipInformationRevealTimer;
	UITapGestureRecognizer* _tapGestureRecognizer;
	MPUNowPlayingTitlesView* _titlesView;
	char _wantsVideoLayer;
	char _isWide;
	MPUApplicationDefaults* _applicationDefaults;
	MPNowPlayingObserver* _nowPlayingObserver;
	MPAVController* _player;

}

@property (nonatomic,retain) MPUApplicationDefaults * applicationDefaults;                             //@synthesize applicationDefaults=_applicationDefaults - In the implementation block
@property (nonatomic,retain) MPNowPlayingObserver * nowPlayingObserver;                                //@synthesize nowPlayingObserver=_nowPlayingObserver - In the implementation block
@property (nonatomic,retain) MPAVController * player;                                                  //@synthesize player=_player - In the implementation block
@property (nonatomic,readonly) UIView * _contentView; 
@property (nonatomic,readonly) UIViewController * _contentViewController; 
@property (getter=_isDetailScrubbing,nonatomic,readonly) char _detailScrubbing; 
@property (nonatomic,readonly) UINavigationItem * _effectiveNavigationItem; 
@property (nonatomic,readonly) MPAVItem * _item; 
@property (nonatomic,readonly) MPUNowPlayingPlaybackControlsView * _playbackControlsView; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_playbackStateDidChangeNotification:(id)arg1 ;
-(void)_itemDidChangeNotification:(id)arg1 ;
-(void)_bufferingStateDidChangeNotification:(id)arg1 ;
-(void)crossedTimeMakerWithEvent:(id)arg1 ;
-(char)videoController:(id)arg1 shouldDisplayAlertForError:(id)arg2 ;
-(char)transportControls:(id)arg1 tappedButtonPart:(unsigned long long)arg2 ;
-(void)controlsOverlayDetailSliderTrackingDidEnd:(id)arg1 ;
-(char)controlsOverlay:(id)arg1 shouldUseDetailScrubberForItem:(id)arg2 ;
-(void)controlsOverlayDetailSliderTrackingDidBegin:(id)arg1 ;
-(void)controlsOverlay:(id)arg1 detailSliderTrackingDidChangeScrubSpeed:(int)arg2 ;
-(void)_mediaLibraryDisplayValuesDidChangeNotification:(id)arg1 ;
-(void)_unregisterForPlayerNotifications;
-(void)_registerForPlayerNotifications;
-(char)_updateNavigationItemAnimated:(char)arg1 ;
-(void)dealloc;
-(UIView *)_contentView;
-(char)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)traitCollectionDidChange:(id)arg1 ;
-(void)viewDidLayoutSubviews;
-(char)navigationBar:(id)arg1 shouldPopItem:(id)arg2 ;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)viewDidDisappear:(char)arg1 ;
-(void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(UIViewController *)_contentViewController;
-(void)_applicationDidEnterBackground:(id)arg1 ;
-(void)_applicationWillEnterForeground:(id)arg1 ;
-(void)_tapAction:(id)arg1 ;
-(UINavigationItem *)_effectiveNavigationItem;
-(void)_itemArtworkDidChangeNotification:(id)arg1 ;
-(void)_updateWantsVideoLayer;
-(void)_didSkipTrackNotification:(id)arg1 ;
-(void)_revealSkipInformationMomentarily;
-(void)_updateTitles;
-(void)_scheduleSkipInformationRevealTimer;
-(void)_invalidateSkipInformationRevealTimer;
-(void)ratingDidChangeForRatingControl:(id)arg1 ;
-(void)_skipLimitDidChangeNotification:(id)arg1 ;
-(char)MPU_supportsMiniPlayer;
-(void)_updateMarqueeStatusAllowingCurrentMarqueeToFinish:(char)arg1 ;
-(void)_itemIsExplicitDidChangeNotification:(id)arg1 ;
-(void)_itemTitlesDidChangeNotification:(id)arg1 ;
-(void)_itemRatingDidChangeNotification:(id)arg1 ;
-(void)_cleanupForDeallocationContentView:(id)arg1 contentViewController:(id)arg2 ;
-(void)_popIfNecessary;
-(void)setApplicationDefaults:(MPUApplicationDefaults *)arg1 ;
-(void)_updateControlVisibilityForOrientation:(int)arg1 animated:(char)arg2 ;
-(void)_setShowingRatings:(char)arg1 animated:(char)arg2 ;
-(void)_showLyrics;
-(void)_updateContentView:(id)arg1 forItem:(id)arg2 ;
-(SEL)_actionForHandlingDoubleTapOnArtworkImageView;
-(float)_titleWidth;
-(char)_shouldPopForCurrentPlaybackState;
-(char)_shouldHaveArtworkPlaceholderTextForItem:(id)arg1 ;
-(void)_didUpdateArtworkImage;
-(void)_setWantsVideoLayer:(char)arg1 forItem:(id)arg2 ;
-(MPUApplicationDefaults *)applicationDefaults;
-(MPNowPlayingObserver *)nowPlayingObserver;
-(void)setNowPlayingObserver:(MPNowPlayingObserver *)arg1 ;
-(void)_playbackContentsDidChangeNotification:(id)arg1 ;
-(id)_artistTextForItem:(id)arg1 ;
-(char)_isDetailScrubbing;
-(void)_updateTitlesInView:(id)arg1 forItem:(id)arg2 ;
-(void)_statusBarHeightChangedNotification:(id)arg1 ;
-(void)_layoutForOrientation:(int)arg1 ;
-(void)_updateSizeClass;
-(MPUNowPlayingPlaybackControlsView *)_playbackControlsView;
-(id)_albumTextForItem:(id)arg1 ;
-(CGSize)_contentViewSizeForItem:(id)arg1 withContentView:(id)arg2 orientation:(int)arg3 ;
-(id)_createContentViewForItem:(id)arg1 contentViewController:(id*)arg2 ;
-(char)_itemSupportsRatings:(id)arg1 ;
-(char)_isActionForHandlingDoubleTapOnArtworkImageViewEnabled;
-(void)_itemTitlesDidChange;
-(char)_shouldUpdateContentView:(id)arg1 forBufferingState:(unsigned)arg2 ;
-(id)_titleTextForItem:(id)arg1 ;
-(int)_transitionDirectionForChangeFromItem:(id)arg1 toItem:(id)arg2 ;
-(char)_updateItemRelatedStateForChangeToItem:(id)arg1 animated:(char)arg2 ;
-(void)_willPresentViewController:(id)arg1 ;
-(void)_updateForCurrentItemAnimated:(char)arg1 ;
-(void)playbackControls:(id)arg1 didSelectCreateAction:(int)arg2 ;
-(Class)_playbackControlsViewClass;
-(char)_shouldAbortUpdatingContentView:(id)arg1 forItem:(id)arg2 ;
-(MPAVItem *)_item;
-(void)setPlayer:(MPAVController *)arg1 ;
-(MPAVController *)player;
@end

