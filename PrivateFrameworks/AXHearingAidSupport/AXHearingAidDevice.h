/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:39:17 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/AXHearingAidSupport.framework/AXHearingAidSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AXHearingAidSupport/CBPeripheralDelegate.h>
#import <AXHearingAidSupport/AXHADeviceProtocol.h>

@class AXHATimer, NSString, NSArray, AXHearingAidMode, CBPeripheral, NSMutableDictionary, NSDate;

@interface AXHearingAidDevice : NSObject <CBPeripheralDelegate, AXHADeviceProtocol> {

	float _leftVolume;
	float _rightVolume;
	float _leftMicrophoneVolume;
	float _rightMicrophoneVolume;
	float _leftStreamVolume;
	float _rightStreamVolume;
	char _keepInSync;
	char _finishedLoading;
	long initialLoadToken;
	AXHATimer* _propertyWriteTimer;
	char _isListeningForStreamingChanges;
	char isPaired;
	char isConnecting;
	char isPersistent;
	NSString* leftUUID;
	NSString* rightUUID;
	NSString* name;
	NSString* manufacturer;
	NSString* model;
	NSString* leftFirmwareVersion;
	NSString* rightFirmwareVersion;
	NSString* leftHardwareVersion;
	NSString* rightHardwareVersion;
	float rightBatteryLevel;
	float leftBatteryLevel;
	NSArray* rightPrograms;
	NSArray* leftPrograms;
	AXHearingAidMode* currentRightProgram;
	AXHearingAidMode* currentLeftProgram;
	CBPeripheral* leftPeripheral;
	CBPeripheral* rightPeripheral;
	int _availableEars;
	int leftLoadedProperties;
	int rightLoadedProperties;
	NSMutableDictionary* leftPropertiesLoadCount;
	NSMutableDictionary* rightPropertiesLoadCount;
	NSString* leftPeripheralUUID;
	NSString* rightPeripheralUUID;
	int leftWriteRequestProperties;
	int rightWriteRequestProperties;
	int leftProgramVersion;
	int rightProgramVersion;
	int _leftWriteResponseProperties;
	int _rightWriteResponseProperties;
	NSDate* _leftBatteryLowDate;
	NSDate* _rightBatteryLowDate;
	unsigned long _leftPresetBitmask;
	unsigned long _rightPresetBitmask;

}

@property (assign,nonatomic) char isPaired; 
@property (assign,nonatomic) char keepInSync;                                               //@synthesize keepInSync=_keepInSync - In the implementation block
@property (assign,nonatomic) char isPersistent; 
@property (assign,nonatomic) float rightMicrophoneVolume;                                   //@synthesize rightMicrophoneVolume=_rightMicrophoneVolume - In the implementation block
@property (assign,nonatomic) float leftMicrophoneVolume;                                    //@synthesize leftMicrophoneVolume=_leftMicrophoneVolume - In the implementation block
@property (assign,nonatomic) float rightStreamVolume;                                       //@synthesize rightStreamVolume=_rightStreamVolume - In the implementation block
@property (assign,nonatomic) float leftStreamVolume;                                        //@synthesize leftStreamVolume=_leftStreamVolume - In the implementation block
@property (nonatomic,retain) CBPeripheral * leftPeripheral; 
@property (nonatomic,retain) CBPeripheral * rightPeripheral; 
@property (nonatomic,retain) NSString * name; 
@property (nonatomic,retain) NSString * manufacturer; 
@property (nonatomic,retain) NSString * model; 
@property (nonatomic,retain) NSString * leftFirmwareVersion; 
@property (nonatomic,retain) NSString * rightFirmwareVersion; 
@property (nonatomic,retain) NSString * leftHardwareVersion; 
@property (nonatomic,retain) NSString * rightHardwareVersion; 
@property (nonatomic,retain) NSString * leftUUID; 
@property (nonatomic,retain) NSString * rightUUID; 
@property (nonatomic,retain) NSString * leftPeripheralUUID; 
@property (nonatomic,retain) NSString * rightPeripheralUUID; 
@property (assign,nonatomic) float rightBatteryLevel; 
@property (assign,nonatomic) float leftBatteryLevel; 
@property (nonatomic,copy) NSArray * rightPrograms; 
@property (nonatomic,copy) NSArray * leftPrograms; 
@property (nonatomic,retain) AXHearingAidMode * currentRightProgram; 
@property (nonatomic,retain) AXHearingAidMode * currentLeftProgram; 
@property (assign,nonatomic) char isConnecting; 
@property (assign,nonatomic) int leftLoadedProperties; 
@property (assign,nonatomic) int rightLoadedProperties; 
@property (assign,nonatomic) int leftWriteRequestProperties; 
@property (assign,nonatomic) int rightWriteRequestProperties; 
@property (assign,nonatomic) int leftWriteResponseProperties;                               //@synthesize leftWriteResponseProperties=_leftWriteResponseProperties - In the implementation block
@property (assign,nonatomic) int rightWriteResponseProperties;                              //@synthesize rightWriteResponseProperties=_rightWriteResponseProperties - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * leftPropertiesLoadCount; 
@property (nonatomic,retain) NSMutableDictionary * rightPropertiesLoadCount; 
@property (assign,nonatomic) int leftProgramVersion; 
@property (assign,nonatomic) int rightProgramVersion; 
@property (nonatomic,retain) NSDate * leftBatteryLowDate;                                   //@synthesize leftBatteryLowDate=_leftBatteryLowDate - In the implementation block
@property (nonatomic,retain) NSDate * rightBatteryLowDate;                                  //@synthesize rightBatteryLowDate=_rightBatteryLowDate - In the implementation block
@property (assign,nonatomic) unsigned long leftPresetBitmask;                               //@synthesize leftPresetBitmask=_leftPresetBitmask - In the implementation block
@property (assign,nonatomic) unsigned long rightPresetBitmask;                              //@synthesize rightPresetBitmask=_rightPresetBitmask - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) int availableEars;                                             //@synthesize availableEars=_availableEars - In the implementation block
@property (nonatomic,retain,readonly) AXHearingAidMode * leftSelectedProgram; 
@property (nonatomic,retain,readonly) AXHearingAidMode * rightSelectedProgram; 
@property (nonatomic,retain,readonly) NSString * deviceUUID; 
+(id)characteristicsUUIDs;
-(void)dealloc;
-(NSString *)description;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(void)_init;
-(NSString *)model;
-(void)connect;
-(char)isPersistent;
-(id)valueForProperty:(int)arg1 ;
-(void)disconnect;
-(void)setModel:(NSString *)arg1 ;
-(char)leftAvailable;
-(char)rightAvailable;
-(float)leftBatteryLevel;
-(float)rightBatteryLevel;
-(void)setLeftPrograms:(NSArray *)arg1 ;
-(void)setRightPrograms:(NSArray *)arg1 ;
-(void)setAvailableEars:(int)arg1 ;
-(void)setLeftPeripheralUUID:(NSString *)arg1 ;
-(void)setLeftUUID:(NSString *)arg1 ;
-(void)setRightUUID:(NSString *)arg1 ;
-(void)setRightPeripheralUUID:(NSString *)arg1 ;
-(NSString *)leftUUID;
-(NSString *)rightUUID;
-(void)setIsPaired:(char)arg1 ;
-(void)setLeftFirmwareVersion:(NSString *)arg1 ;
-(void)setRightFirmwareVersion:(NSString *)arg1 ;
-(void)setLeftHardwareVersion:(NSString *)arg1 ;
-(void)setRightHardwareVersion:(NSString *)arg1 ;
-(NSString *)deviceUUID;
-(int)availableEars;
-(NSArray *)leftPrograms;
-(NSArray *)rightPrograms;
-(id)programs;
-(void)setLeftSelectedProgram:(AXHearingAidMode *)arg1 ;
-(void)setRightSelectedProgram:(AXHearingAidMode *)arg1 ;
-(AXHearingAidMode *)leftSelectedProgram;
-(AXHearingAidMode *)rightSelectedProgram;
-(char)didLoadRequiredProperties;
-(void)loadRequiredProperties;
-(void)setLeftBatteryLevel:(float)arg1 ;
-(void)setRightBatteryLevel:(float)arg1 ;
-(void)setLeftBatteryLowDate:(NSDate *)arg1 ;
-(void)setRightBatteryLowDate:(NSDate *)arg1 ;
-(float)leftMicrophoneVolume;
-(float)rightMicrophoneVolume;
-(float)leftStreamVolume;
-(float)rightStreamVolume;
-(NSString *)leftFirmwareVersion;
-(NSString *)rightFirmwareVersion;
-(NSString *)leftHardwareVersion;
-(NSString *)rightHardwareVersion;
-(NSDate *)leftBatteryLowDate;
-(NSDate *)rightBatteryLowDate;
-(char)isBluetoothPaired;
-(id)initWithPersistentRepresentation:(id)arg1 ;
-(char)hasConnection;
-(char)containsPeripheralWithUUID:(id)arg1 ;
-(char)didLoadBasicProperties;
-(void)selectProgram:(id)arg1 ;
-(id)selectedPrograms;
-(id)selectedProgramIndexes;
-(char)keepInSync;
-(void)setKeepInSync:(char)arg1 ;
-(NSString *)leftPeripheralUUID;
-(NSString *)rightPeripheralUUID;
-(void)setRightMicrophoneVolume:(float)arg1 ;
-(void)setLeftMicrophoneVolume:(float)arg1 ;
-(void)setRightStreamVolume:(float)arg1 ;
-(void)setLeftStreamVolume:(float)arg1 ;
-(void)setIsConnecting:(char)arg1 ;
-(void)setLeftPropertiesLoadCount:(NSMutableDictionary *)arg1 ;
-(void)setRightPropertiesLoadCount:(NSMutableDictionary *)arg1 ;
-(void)setCurrentLeftProgram:(AXHearingAidMode *)arg1 ;
-(void)setCurrentRightProgram:(AXHearingAidMode *)arg1 ;
-(void)setLeftPeripheral:(CBPeripheral *)arg1 ;
-(void)updateName;
-(void)peripheral:(id)arg1 didUpdateCharacteristic:(id)arg2 ;
-(void)setIsPersistent:(char)arg1 ;
-(CBPeripheral *)leftPeripheral;
-(AXHearingAidMode *)currentLeftProgram;
-(int)leftLoadedProperties;
-(void)setLeftLoadedProperties:(int)arg1 ;
-(void)setRightPeripheral:(CBPeripheral *)arg1 ;
-(CBPeripheral *)rightPeripheral;
-(AXHearingAidMode *)currentRightProgram;
-(int)rightLoadedProperties;
-(void)setRightLoadedProperties:(int)arg1 ;
-(NSMutableDictionary *)rightPropertiesLoadCount;
-(NSMutableDictionary *)leftPropertiesLoadCount;
-(id)persistentRepresentation;
-(void)setNotify:(char)arg1 forPeripheral:(id)arg2 ;
-(void)loadProperties:(int)arg1 forPeripheral:(id)arg2 withRetryPeriod:(float)arg3 ;
-(void)loadBasicProperties;
-(char)peripheral:(id)arg1 didLoadProperty:(int)arg2 ;
-(int)peripheral:(id)arg1 propertyForCharacteristic:(id)arg2 ;
-(void)loadFailedProperties;
-(void)readValueForCharacteristic:(id)arg1 fromPeripheral:(id)arg2 ;
-(unsigned char)volumeValueForProperty:(int)arg1 andPeripheral:(id)arg2 ;
-(void)writeInt:(unsigned char)arg1 toPeripheral:(id)arg2 forProperty:(int)arg3 ;
-(void)_sendDelayedWrites;
-(id)peripheral:(id)arg1 characteristicForProperty:(int)arg2 ;
-(int)leftWriteResponseProperties;
-(void)setLeftWriteResponseProperties:(int)arg1 ;
-(int)rightWriteResponseProperties;
-(void)setRightWriteResponseProperties:(int)arg1 ;
-(void)delayWriteProperty:(int)arg1 forPeripheral:(id)arg2 ;
-(void)mateWithDevice:(id)arg1 ;
-(unsigned long)rightPresetBitmask;
-(unsigned long)leftPresetBitmask;
-(void)setRightPresetBitmask:(unsigned long)arg1 ;
-(void)setLeftPresetBitmask:(unsigned long)arg1 ;
-(void)readProperty:(int)arg1 fromPeripheral:(id)arg2 ;
-(int)rightProgramVersion;
-(int)leftProgramVersion;
-(id)peripheral:(id)arg1 characteristicForUUID:(id)arg2 ;
-(void)pairingDidCompleteForPeripheral:(id)arg1 ;
-(id)initWithLeftDevice:(id)arg1 andRightDevice:(id)arg2 ;
-(void)connectionDidChange;
-(int)connectedEars;
-(id)deviceDescription;
-(void)peripheral:(id)arg1 didInvalidateServices:(id)arg2 ;
-(void)peripheral:(id)arg1 didFinishPairingWithResult:(id)arg2 ;
-(void)peripheralDidUnpair:(id)arg1 ;
-(char)addPeripheral:(id)arg1 ;
-(int)leftWriteRequestProperties;
-(void)setLeftWriteRequestProperties:(int)arg1 ;
-(int)rightWriteRequestProperties;
-(void)setRightWriteRequestProperties:(int)arg1 ;
-(void)setLeftProgramVersion:(int)arg1 ;
-(void)setRightProgramVersion:(int)arg1 ;
-(char)isPaired;
-(NSString *)manufacturer;
-(void)setManufacturer:(NSString *)arg1 ;
-(void)peripheralDidUpdateName:(id)arg1 ;
-(void)peripheral:(id)arg1 didDiscoverServices:(id)arg2 ;
-(void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3 ;
-(void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3 ;
-(void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3 ;
-(id)initWithPeripheral:(id)arg1 ;
-(void)setValue:(id)arg1 forProperty:(int)arg2 ;
-(char)isConnecting;
-(char)isConnected;
@end

