/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:43:18 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <WebCore/WebCore-Structs.h>
#import <WebCore/DOMObject.h>
#import <WebCore/DOMEventTarget.h>
#import <UIKit/UIKeyboardInput.h>
#import <UIKit/UITextInputPrivate.h>
#import <UIKit/UIKeyInput.h>
#import <UIKit/UITextInputTokenizer.h>
#import <UIKit/UIWebSelectionBlock.h>
#import <UIKit/UITextInput_Internal.h>

@class UITextInteractionAssistant, NSString, UITextRange, NSDictionary, UITextPosition, UIView, UIColor, UIImage, WebArchive, DOMNodeList, DOMDocument, DOMNamedNodeMap, DOMElement;

@interface DOMNode : DOMObject <DOMEventTarget, UIKeyboardInput, UITextInputPrivate, UIKeyInput, UITextInputTokenizer, UIWebSelectionBlock, UITextInput_Internal>

@property (readonly) char mf_isBody; 
@property (readonly) char mf_isAttachment; 
@property (getter=_proxyTextInput,nonatomic,readonly) UIResponder*<UITextInput> __content; 
@property (nonatomic,readonly) UIView*<UITextInputPrivate> _textSelectingContainer; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) int autocapitalizationType; 
@property (assign,nonatomic) int autocorrectionType; 
@property (assign,nonatomic) int spellCheckingType; 
@property (assign,nonatomic) int keyboardType; 
@property (assign,nonatomic) int keyboardAppearance; 
@property (assign,nonatomic) int returnKeyType; 
@property (assign,nonatomic) char enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) char secureTextEntry; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic) id<UITextInputDelegate> inputDelegate; 
@property (nonatomic,readonly) id<UITextInputTokenizer> tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) int selectionAffinity; 
@property (assign,nonatomic) CFCharacterSetRef textTrimmingSet; 
@property (nonatomic,retain) UIColor * insertionPointColor; 
@property (nonatomic,retain) UIColor * selectionBarColor; 
@property (nonatomic,retain) UIColor * selectionHighlightColor; 
@property (nonatomic,retain) UIImage * selectionDragDotImage; 
@property (assign,nonatomic) unsigned insertionPointWidth; 
@property (assign,nonatomic) int textLoupeVisibility; 
@property (assign,nonatomic) int textSelectionBehavior; 
@property (assign,nonatomic) id textSuggestionDelegate; 
@property (assign,nonatomic) char isSingleLineDocument; 
@property (assign,nonatomic) char contentsIsSingleValue; 
@property (assign,nonatomic) char acceptsEmoji; 
@property (assign,nonatomic) char forceEnableDictation; 
@property (assign,nonatomic) int emptyContentReturnKeyType; 
@property (assign,nonatomic) char returnKeyGoesToNextResponder; 
@property (assign,nonatomic) char acceptsFloatingKeyboard; 
@property (assign,nonatomic) char acceptsSplitKeyboard; 
@property (assign,nonatomic) char displaySecureTextUsingPlainText; 
@property (assign,nonatomic) char learnsCorrections; 
@property (assign,nonatomic) int shortcutConversionType; 
@property (assign,nonatomic) char suppressReturnKeyStyling; 
@property (assign,nonatomic) char useInterfaceLanguageForLocalization; 
@property (assign,nonatomic) char deferBecomingResponder; 
@property (assign,nonatomic) char enablesReturnKeyOnNonWhiteSpaceContent; 
@property (nonatomic,copy) NSString * autocorrectionContext; 
@property (nonatomic,copy) NSString * responseContext; 
@property (assign,nonatomic) char disablePrediction; 
@property (nonatomic,readonly) UITextInteractionAssistant * interactionAssistant; 
@property (assign,nonatomic) int selectionGranularity; 
@property (nonatomic,readonly) WebArchive * webArchive; 
@property (copy,readonly) NSString * nodeName; 
@property (copy) NSString * nodeValue; 
@property (readonly) unsigned short nodeType; 
@property (readonly) DOMNode * parentNode; 
@property (readonly) DOMNodeList * childNodes; 
@property (readonly) DOMNode * firstChild; 
@property (readonly) DOMNode * lastChild; 
@property (readonly) DOMNode * previousSibling; 
@property (readonly) DOMNode * nextSibling; 
@property (readonly) DOMDocument * ownerDocument; 
@property (copy,readonly) NSString * namespaceURI; 
@property (copy) NSString * prefix; 
@property (copy,readonly) NSString * localName; 
@property (readonly) DOMNamedNodeMap * attributes; 
@property (copy,readonly) NSString * baseURI; 
@property (copy) NSString * textContent; 
@property (readonly) DOMElement * parentElement; 
@property (readonly) char isContentEditable; 
+(id)_nodeFromJSWrapper:(OpaqueJSValueRef)arg1 ;
-(char)dd_searchForLinkEndNode:(id)arg1 ;
-(void)dd_removeResultLinks;
-(id)mf_childNodeAtIndex:(int)arg1 ;
-(id)mf_lastSibling;
-(id)mf_firstSibling;
-(char)mf_isQuoteOrWithinQuote;
-(id)mf_findElementWithTag:(id)arg1 className:(id)arg2 andIdName:(id)arg3 ;
-(char)mf_isDescendantOfNode:(id)arg1 ;
-(id)mf_traverseNextNodeStayingWithin:(id)arg1 ;
-(id)mf_traverseNextSiblingStayingWithin:(id)arg1 ;
-(id)mf_blockNodeAncestor;
-(id)mf_containingBlockQuote;
-(char)mf_isAtBeginningOfContainerNode:(id)arg1 ;
-(char)mf_isAtEndOfContainerNode:(id)arg1 ;
-(char)mf_containsOnlySelectionMarkers;
-(id)mf_appendBlockPlaceholder;
-(id)mf_nextSiblingOrAunt;
-(id)mf_highestContainingBlockQuote;
-(id)mf_firstDescendantBlockQuote;
-(char)mf_containsRichText;
-(void)recursivelyRemoveMailAttributes;
-(int)mf_quoteLevelDelta;
-(void)_fixParagraphsAndQuotesFromMicrosoftNodesToRemove:(id)arg1 ;
-(char)mf_isBody;
-(char)mf_isAttachment;
-(id)mf_commonAncestorWithNode:(id)arg1 ;
-(void)mf_fixParagraphsAndQuotesFromMicrosoft;
-(id)mf_traversePreviousNode;
-(id)mf_topmostContainingNodeWithNameInArray:(id)arg1 ;
-(void)_startAssistingDocumentView:(id)arg1 ;
-(void)_stopAssistingDocumentView:(id)arg1 ;
-(char)_requiresAccessoryView;
-(char)_requiresInputView;
-(char)_supportsAutoFill;
-(char)_supportsAccessoryClear;
-(void)_accessoryClear;
-(id)_nextAssistedNode;
-(id)_previousAssistedNode;
-(id)_textFormElement;
-(UIView *)textInputView;
-(CGRect)_selectionClipRect;
-(id)_proxyTextInput;
-(NSRange)_selectedNSRange;
-(void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)arg1 ;
-(void)_extendCurrentSelection:(int)arg1 ;
-(void)_setCaretSelectionAtEndOfSelection;
-(id)_moveToEndOfWord:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToEndOfLine:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveRight:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToStartOfWord:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToStartOfLine:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveLeft:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToEndOfParagraph:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToEndOfDocument:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveDown:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToStartOfParagraph:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveToStartOfDocument:(char)arg1 withHistory:(id)arg2 ;
-(id)_moveUp:(char)arg1 withHistory:(id)arg2 ;
-(void)_deleteByWord;
-(void)_deleteToStartOfLine;
-(void)_deleteToEndOfLine;
-(void)_setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)_unmarkText;
-(void)_setGestureRecognizers;
-(unsigned long)_characterBeforeCaretSelection;
-(unsigned long)_characterInRelationToRangedSelection:(int)arg1 ;
-(void)_moveCurrentSelection:(int)arg1 ;
-(void)_expandSelectionToBackwardDeletionCluster;
-(void)_deleteBackwardAndNotify:(char)arg1 ;
-(void)_deleteForwardAndNotify:(char)arg1 ;
-(unsigned long)_characterInRelationToCaretSelection:(int)arg1 ;
-(id)_wordContainingCaretSelection;
-(unsigned long)_characterAfterCaretSelection;
-(id)_rangeOfEnclosingWord:(id)arg1 ;
-(id)_positionAtStartOfWords:(unsigned)arg1 beforePosition:(id)arg2 ;
-(id)_fullText;
-(id)_rangeOfText:(id)arg1 endingAtPosition:(id)arg2 ;
-(void)_replaceCurrentWordWithText:(id)arg1 ;
-(void)_selectAll;
-(char)_selectionAtDocumentStart;
-(NSRange)_nsrangeForTextRange:(id)arg1 ;
-(char)_shouldPerformUICalloutBarButtonReplaceAction:(SEL)arg1 forText:(id)arg2 checkAutocorrection:(char)arg3 ;
-(char)_selectionAtDocumentEnd;
-(id)_positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3 withAffinityDownstream:(char)arg4 ;
-(void)_scrollRectToVisible:(CGRect)arg1 animated:(char)arg2 ;
-(int)_selectionAffinity;
-(id)_fontForCaretSelection;
-(id)_textColorForCaretSelection;
-(id)_newPhraseBoundaryGestureRecognizer;
-(char)_hasMarkedText;
-(char)_usesAsynchronousProtocol;
-(id)_selectableText;
-(id)_fullRange;
-(int)_indexForTextPosition:(id)arg1 ;
-(id)_clampedpositionFromPosition:(id)arg1 offset:(int)arg2 ;
-(id)_keyInput;
-(void)_setSelectedTextRange:(id)arg1 withAffinityDownstream:(char)arg2 ;
-(void)_updateSelectionWithTextRange:(id)arg1 withAffinityDownstream:(char)arg2 ;
-(char)_isEmptySelection;
-(id)_setHistory:(id)arg1 withExtending:(char)arg2 withAnchor:(int)arg3 withAffinityDownstream:(char)arg4 ;
-(id)_setSelectionRangeWithHistory:(id)arg1 ;
-(void)_phraseBoundaryGesture:(id)arg1 ;
-(char)_selectionAtWordStart;
-(char)_hasMarkedTextOrRangedSelection;
-(void)_expandSelectionToStartOfWordBeforeCaretSelection;
-(id)_rangeOfLineEnclosingPosition:(id)arg1 ;
-(id)_rangeOfParagraphEnclosingPosition:(id)arg1 ;
-(id)_findPleasingWordBoundaryFromPosition:(id)arg1 ;
-(id)webFrame;
-(CGRect)boundingRect;
-(CGRect)boundingRectAndInsideFixedPosition:(int*)arg1 ;
-(id)asDomNode;
-(char)selectable;
-(id)parentBlock;
-(char)canShrinkDirectlyToTextOnly;
-(id)enclosingDocument;
-(id)asDomRange;
-(char)hasCustomLineHeight;
-(id)rangeOfContents;
-(char)isSameBlock:(id)arg1 ;
-(char)containsBlock:(id)arg1 ;
-(id)firstDescendantOfAboutTheSameWidthOrHeight;
-(id)lastDescendantOfAboutTheSameWidthOrHeight;
-(char)strictlyContainsBlock:(id)arg1 ;
-(id)largerParent;
-(char)rendersAsBlock;
-(char)containsRange:(id)arg1 ;
-(char)containsNode:(id)arg1 ;
-(id)asElement;
-(id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(CGRect)arg1 withDescentDirection:(int)arg2 ;
-(char)strictlyContainsNode:(id)arg1 ;
-(id)enclosingElementIncludingSelf;
-(char)touchCalloutEnabled;
-(char)alwaysAttemptToShowTapHighlight;
-(char)showsTapHighlight;
-(char)nodeCanBecomeFirstResponder;
-(char)isLikelyToBeginPageLoad;
-(id)absoluteQuadsAtPoint:(CGPoint)arg1 ;
-(id)tapHighlightColor;
-(id)_realNode;
-(id)itemTitle;
-(id)createSelectedItem;
-(id)createPickerCell;
-(void)populateCell:(id)arg1 ;
-(id)delegate;
-(char)isEditable;
-(id)text;
-(void)setText:(id)arg1 ;
-(void)setSecure:(char)arg1 ;
-(char)editing;
-(char)isEditing;
-(UITextInteractionAssistant *)interactionAssistant;
-(id)selectionView;
-(id)textInputTraits;
-(void)setSelectionWithPoint:(CGPoint)arg1 ;
-(void)takeTraitsFrom:(id)arg1 ;
-(UITextPosition *)beginningOfDocument;
-(UITextPosition *)endOfDocument;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)textInRange:(id)arg1 ;
-(id<UITextInputDelegate>)inputDelegate;
-(void)setSelectedTextRange:(UITextRange *)arg1 ;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(char)hasText;
-(void)insertText:(id)arg1 ;
-(void)deleteBackward;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2 ;
-(UITextRange *)selectedTextRange;
-(UITextRange *)markedTextRange;
-(NSDictionary *)markedTextStyle;
-(void)setMarkedTextStyle:(NSDictionary *)arg1 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)unmarkText;
-(id)positionFromPosition:(id)arg1 offset:(int)arg2 ;
-(id)positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3 ;
-(int)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(int)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(int)arg2 ;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(int)arg2 ;
-(void)setInputDelegate:(id<UITextInputDelegate>)arg1 ;
-(id<UITextInputTokenizer>)tokenizer;
-(int)baseWritingDirectionForPosition:(id)arg1 inDirection:(int)arg2 ;
-(void)setBaseWritingDirection:(int)arg1 forRange:(id)arg2 ;
-(CGRect)firstRectForRange:(id)arg1 ;
-(id)selectionRectsForRange:(id)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(id)insertDictationResultPlaceholder;
-(CGRect)frameForDictationResultPlaceholder:(id)arg1 ;
-(void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(char)arg2 ;
-(id)metadataDictionariesForDictationResults;
-(void)beginSelectionChange;
-(void)endSelectionChange;
-(int)selectionAffinity;
-(void)setSelectionAffinity:(int)arg1 ;
-(int)returnKeyType;
-(void)setReturnKeyType:(int)arg1 ;
-(void)selectAll;
-(UIView*<UITextInputPrivate>)_textSelectingContainer;
-(id)textColorForCaretSelection;
-(void)updateAutoscroll:(id)arg1 ;
-(NSRange)selectionRange;
-(char)hasSelection;
-(CFCharacterSetRef)textTrimmingSet;
-(char)hasContent;
-(CGPoint)constrainedPoint:(CGPoint)arg1 ;
-(void)updateSelection;
-(char)becomesEditableWithGestures;
-(void)setBecomesEditableWithGestures:(char)arg1 ;
-(id)automaticallySelectedOverlay;
-(char)requiresKeyEvents;
-(void)handleKeyWebEvent:(id)arg1 ;
-(void)acceptedAutoFillWord:(id)arg1 ;
-(char)isAutoFillMode;
-(id)fontForCaretSelection;
-(id)rangeEnclosingPosition:(id)arg1 withGranularity:(int)arg2 inDirection:(int)arg3 ;
-(char)isPosition:(id)arg1 atBoundary:(int)arg2 inDirection:(int)arg3 ;
-(id)positionFromPosition:(id)arg1 toBoundary:(int)arg2 inDirection:(int)arg3 ;
-(char)isPosition:(id)arg1 withinTextUnit:(int)arg2 inDirection:(int)arg3 ;
-(void)setTextTrimmingSet:(CFCharacterSetRef)arg1 ;
-(int)textLoupeVisibility;
-(void)setTextLoupeVisibility:(int)arg1 ;
-(id)textSuggestionDelegate;
-(void)setTextSuggestionDelegate:(id)arg1 ;
-(char)contentsIsSingleValue;
-(void)setContentsIsSingleValue:(char)arg1 ;
-(CGRect)_lastRectForRange:(id)arg1 ;
-(CGRect)caretRect;
-(void)replaceCurrentWordWithText:(id)arg1 ;
-(void)confirmMarkedText:(id)arg1 ;
-(unsigned short)characterInRelationToCaretSelection:(int)arg1 ;
-(unsigned short)characterAfterCaretSelection;
-(id)rectsForNSRange:(NSRange)arg1 ;
-(int)wordOffsetInRange:(id)arg1 ;
-(int)selectionState;
-(char)selectionAtDocumentStart;
-(char)selectionAtWordStart;
-(id)rangeByMovingCurrentSelection:(int)arg1 ;
-(id)rangeByExtendingCurrentSelection:(int)arg1 ;
-(void)extendCurrentSelection:(int)arg1 ;
-(CGRect)convertCaretRect:(CGRect)arg1 ;
-(char)isShowingPlaceholder;
-(void)setupPlaceholderTextIfNeeded;
-(void)clearMarkedText;
-(void)setSelectedTextRange:(id)arg1 withAffinityDownstream:(char)arg2 ;
-(id)rangeOfEnclosingWord:(id)arg1 ;
-(id)uiWebDocumentView;
-(CGPoint)constrainedPoint:(CGPoint)arg1 withInset:(float)arg2 ;
-(void)setSelectionWithPoint:(CGPoint)arg1 inset:(float)arg2 ;
-(void)replaceRange:(id)arg1 withText:(id)arg2 closeTyping:(char)arg3 ;
-(int)initialSelectionBehavior;
-(void)setInitialSelectionBehavior:(int)arg1 ;
-(id)content;
-(void)moveRight;
-(void)moveLeft;
-(void)moveUp;
-(void)moveDown;
-(char)editable;
-(id)textDocument;
-(CGRect)convertRect:(CGRect)arg1 toView:(id)arg2 ;
-(char)isSecure;
-(int)keyboardType;
-(char)isTextControl;
-(id)tagName;
-(id)urlScheme;
-(id)createPeripheral;
-(id)markupString;
-(CGRect)_renderRect:(BOOL*)arg1 ;
-(void)hidePlaceholder;
-(void)showPlaceholderIfNecessary;
-(char)isHorizontalWritingMode;
-(WebArchive *)webArchive;
-(id)webArchiveByFilteringSubframes:(/*^block*/id)arg1 ;
-(id)startPosition;
-(id)endPosition;
-(id)rangeOfContents;
-(void)dealloc;
-(NSString *)description;
-(DOMDocument *)ownerDocument;
-(DOMNodeList *)childNodes;
-(DOMNode *)lastChild;
-(DOMNode *)firstChild;
-(char)isContentEditable;
-(DOMNode *)parentNode;
-(CGRect)boundingBoxUsingTransforms;
-(DOMNode *)previousSibling;
-(id)removeChild:(id)arg1 ;
-(WKQuad)innerFrameQuad;
-(id)hrefLabel;
-(CGRect)boundingFrame;
-(char)isSameNode:(id)arg1 ;
-(void)inspect;
-(id)borderRadii;
-(WKQuad)absoluteQuad;
-(id)hrefURL;
-(id)absoluteQuads;
-(float)textHeight;
-(unsigned short)nodeType;
-(id)findExplodedTextNodeAtPoint:(CGPoint)arg1 ;
-(id)rangeOfContainingParagraph;
-(DOMElement *)parentElement;
-(CGRect)boundingBox;
-(char)isSelectableBlock;
-(char)containsOnlyInlineObjects;
-(WKQuad)absoluteQuadAndInsideFixedPosition:(char*)arg1 ;
-(DOMNode *)nextSibling;
-(DOMNamedNodeMap *)attributes;
-(id)nextFocusNode;
-(id)previousFocusNode;
-(float)computedFontSize;
-(NSString *)localName;
-(NSString *)nodeValue;
-(NSString *)nodeName;
-(RootObjectRef)_rootObject;
-(id)textRects;
-(Element*)_linkElement;
-(id)lineBoxRects;
-(id)lineBoxQuads;
-(id)hrefTarget;
-(CGRect)hrefFrame;
-(id)hrefTitle;
-(void)finalize;
-(id)lookupNamespaceURI:(id)arg1 ;
-(char)contains:(id)arg1 ;
-(void)addEventListener:(id)arg1 listener:(id)arg2 useCapture:(char)arg3 ;
-(void)removeEventListener:(id)arg1 listener:(id)arg2 useCapture:(char)arg3 ;
-(char)dispatchEvent:(id)arg1 ;
-(void)addEventListener:(id)arg1 :(id)arg2 :(char)arg3 ;
-(void)removeEventListener:(id)arg1 :(id)arg2 :(char)arg3 ;
-(void)setNodeValue:(NSString *)arg1 ;
-(NSString *)namespaceURI;
-(NSString *)prefix;
-(void)setPrefix:(NSString *)arg1 ;
-(NSString *)baseURI;
-(NSString *)textContent;
-(void)setTextContent:(NSString *)arg1 ;
-(id)insertBefore:(id)arg1 refChild:(id)arg2 ;
-(id)insertBefore:(id)arg1 :(id)arg2 ;
-(id)replaceChild:(id)arg1 oldChild:(id)arg2 ;
-(id)replaceChild:(id)arg1 :(id)arg2 ;
-(id)appendChild:(id)arg1 ;
-(char)hasChildNodes;
-(id)cloneNode:(char)arg1 ;
-(void)normalize;
-(char)isSupported:(id)arg1 version:(id)arg2 ;
-(char)isSupported:(id)arg1 :(id)arg2 ;
-(char)hasAttributes;
-(char)isEqualNode:(id)arg1 ;
-(id)lookupPrefix:(id)arg1 ;
-(char)isDefaultNamespace:(id)arg1 ;
-(unsigned short)compareDocumentPosition:(id)arg1 ;
-(id)boundingBoxes;
@end

