/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:07 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PowerlogLiteOperators.framework/PowerlogLiteOperators
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PowerlogLiteOperators/PLAWDAuxMetrics.h>

@class PLEntryNotificationOperatorComposition, PLOperator, NSMutableSet;

@interface PLAWDCamera : PLAWDAuxMetrics {

	char _prevFrontCameraState;
	char _prevBackCameraState;
	char _prevTorchCameraState;
	PLEntryNotificationOperatorComposition* _cameraEventCallbackFront;
	PLEntryNotificationOperatorComposition* _cameraEventCallbackBack;
	PLEntryNotificationOperatorComposition* _cameraEventCallbackTorch;
	long _cameraSubmitCnt;
	double _frontCameraTimestamp;
	double _backCameraTimestamp;
	double _torchCameraTimestamp;

}

@property (retain) PLEntryNotificationOperatorComposition * cameraEventCallbackFront;              //@synthesize cameraEventCallbackFront=_cameraEventCallbackFront - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * cameraEventCallbackBack;               //@synthesize cameraEventCallbackBack=_cameraEventCallbackBack - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * cameraEventCallbackTorch;              //@synthesize cameraEventCallbackTorch=_cameraEventCallbackTorch - In the implementation block
@property (__weak) PLOperator * operator; 
@property (nonatomic,retain) NSMutableSet * runningMetrics; 
@property (assign) char prevFrontCameraState;                                                      //@synthesize prevFrontCameraState=_prevFrontCameraState - In the implementation block
@property (assign) char prevBackCameraState;                                                       //@synthesize prevBackCameraState=_prevBackCameraState - In the implementation block
@property (assign) char prevTorchCameraState;                                                      //@synthesize prevTorchCameraState=_prevTorchCameraState - In the implementation block
@property (assign) double frontCameraTimestamp;                                                    //@synthesize frontCameraTimestamp=_frontCameraTimestamp - In the implementation block
@property (assign) double backCameraTimestamp;                                                     //@synthesize backCameraTimestamp=_backCameraTimestamp - In the implementation block
@property (assign) double torchCameraTimestamp;                                                    //@synthesize torchCameraTimestamp=_torchCameraTimestamp - In the implementation block
@property (assign) long cameraSubmitCnt;                                                           //@synthesize cameraSubmitCnt=_cameraSubmitCnt - In the implementation block
+(id)getSharedObjWithOperator:(id)arg1 ;
+(id)entryAggregateDefinitions;
+(id)entryAggregateDefinitionAwdCamera;
-(void)startMetricCollection:(id)arg1 ;
-(void)stopMetricCollection:(id)arg1 ;
-(char)submitDataToAWDServer:(id)arg1 withAwdConn:(id)arg2 ;
-(void)initCameraStats;
-(void)handleFrontCameraCallback:(id)arg1 ;
-(void)setCameraEventCallbackFront:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)handleBackCameraCallback:(id)arg1 ;
-(void)setCameraEventCallbackBack:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)handleTorchCameraCallback:(id)arg1 ;
-(void)setCameraEventCallbackTorch:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)setPrevFrontCameraState:(char)arg1 ;
-(void)setPrevBackCameraState:(char)arg1 ;
-(void)setPrevTorchCameraState:(char)arg1 ;
-(void)resetCameraTable;
-(char)prevFrontCameraState;
-(void)setFrontCameraTimestamp:(double)arg1 ;
-(char)prevBackCameraState;
-(void)setBackCameraTimestamp:(double)arg1 ;
-(char)prevTorchCameraState;
-(void)setTorchCameraTimestamp:(double)arg1 ;
-(double)frontCameraTimestamp;
-(void)addEntryToCameraTable:(id)arg1 withValue:(double)arg2 ;
-(double)backCameraTimestamp;
-(double)torchCameraTimestamp;
-(long)cameraSubmitCnt;
-(void)setCameraSubmitCnt:(long)arg1 ;
-(void)reInitCameraStats;
-(PLEntryNotificationOperatorComposition *)cameraEventCallbackFront;
-(PLEntryNotificationOperatorComposition *)cameraEventCallbackBack;
-(PLEntryNotificationOperatorComposition *)cameraEventCallbackTorch;
@end

