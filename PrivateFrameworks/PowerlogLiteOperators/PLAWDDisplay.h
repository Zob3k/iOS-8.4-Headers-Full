/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:08 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PowerlogLiteOperators.framework/PowerlogLiteOperators
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PowerlogLiteOperators/PLAWDAuxMetrics.h>

@class PLEntryNotificationOperatorComposition, PLOperator, NSMutableSet;

@interface PLAWDDisplay : PLAWDAuxMetrics {

	char _prevDisplayOn;
	char _prevDeviceCharging;
	char _prevMieOn;
	char _filterFirstEntry;
	char _prevAlsOn;
	PLEntryNotificationOperatorComposition* _displayEventCallback;
	PLEntryNotificationOperatorComposition* _backlightEventCallback;
	PLEntryNotificationOperatorComposition* _alsUserPreferencesEventCallback;
	PLEntryNotificationOperatorComposition* _batteryEventCallback;
	PLEntryNotificationOperatorComposition* _backlightRailCallback;
	PLEntryNotificationOperatorComposition* _touchEventCallback;
	PLEntryNotificationOperatorComposition* _alsEnabledEventCallback;
	PLEntryNotificationOperatorComposition* _ioReportEventCallback;
	long _prevBklBucketIdx;
	long _dispSubmitCnt;
	long _touchSubmitCnt;
	double _displayOnTimeStamp;
	double _mieOnTimeStamp;
	double _bklTimeStamp;
	double _prevBklChgTimeStamp;
	long long _startTouchEntryId;
	double _bklPowerRailTimeStamp;
	double _prevBklPower;

}

@property (__weak) PLOperator * operator; 
@property (nonatomic,retain) NSMutableSet * runningMetrics; 
@property (retain) PLEntryNotificationOperatorComposition * displayEventCallback;                         //@synthesize displayEventCallback=_displayEventCallback - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * backlightEventCallback;                       //@synthesize backlightEventCallback=_backlightEventCallback - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * alsUserPreferencesEventCallback;              //@synthesize alsUserPreferencesEventCallback=_alsUserPreferencesEventCallback - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * batteryEventCallback;                         //@synthesize batteryEventCallback=_batteryEventCallback - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * backlightRailCallback;                        //@synthesize backlightRailCallback=_backlightRailCallback - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * touchEventCallback;                           //@synthesize touchEventCallback=_touchEventCallback - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * alsEnabledEventCallback;                      //@synthesize alsEnabledEventCallback=_alsEnabledEventCallback - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * ioReportEventCallback;                        //@synthesize ioReportEventCallback=_ioReportEventCallback - In the implementation block
@property (assign) char prevDisplayOn;                                                                    //@synthesize prevDisplayOn=_prevDisplayOn - In the implementation block
@property (assign) double displayOnTimeStamp;                                                             //@synthesize displayOnTimeStamp=_displayOnTimeStamp - In the implementation block
@property (assign) char prevDeviceCharging;                                                               //@synthesize prevDeviceCharging=_prevDeviceCharging - In the implementation block
@property (assign) char prevMieOn;                                                                        //@synthesize prevMieOn=_prevMieOn - In the implementation block
@property (assign) double mieOnTimeStamp;                                                                 //@synthesize mieOnTimeStamp=_mieOnTimeStamp - In the implementation block
@property (assign) double bklTimeStamp;                                                                   //@synthesize bklTimeStamp=_bklTimeStamp - In the implementation block
@property (assign) long prevBklBucketIdx;                                                                 //@synthesize prevBklBucketIdx=_prevBklBucketIdx - In the implementation block
@property (assign) double prevBklChgTimeStamp;                                                            //@synthesize prevBklChgTimeStamp=_prevBklChgTimeStamp - In the implementation block
@property (assign) long long startTouchEntryId;                                                           //@synthesize startTouchEntryId=_startTouchEntryId - In the implementation block
@property (assign) double bklPowerRailTimeStamp;                                                          //@synthesize bklPowerRailTimeStamp=_bklPowerRailTimeStamp - In the implementation block
@property (assign) char filterFirstEntry;                                                                 //@synthesize filterFirstEntry=_filterFirstEntry - In the implementation block
@property (assign) long dispSubmitCnt;                                                                    //@synthesize dispSubmitCnt=_dispSubmitCnt - In the implementation block
@property (assign) long touchSubmitCnt;                                                                   //@synthesize touchSubmitCnt=_touchSubmitCnt - In the implementation block
@property (assign) char prevAlsOn;                                                                        //@synthesize prevAlsOn=_prevAlsOn - In the implementation block
@property (assign) double prevBklPower;                                                                   //@synthesize prevBklPower=_prevBklPower - In the implementation block
+(id)getSharedObjWithOperator:(id)arg1 ;
+(id)entryAggregateDefinitions;
+(id)entryAggregateDefinitionAwdDisplayAndAls;
-(void)startMetricCollection:(id)arg1 ;
-(void)stopMetricCollection:(id)arg1 ;
-(char)submitDataToAWDServer:(id)arg1 withAwdConn:(id)arg2 ;
-(void)handleBatteryCallback:(id)arg1 ;
-(void)setBatteryEventCallback:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)handleDisplayCallback:(id)arg1 ;
-(void)setDisplayEventCallback:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)setPrevDeviceCharging:(char)arg1 ;
-(char)prevDeviceCharging;
-(PLEntryNotificationOperatorComposition *)batteryEventCallback;
-(PLEntryNotificationOperatorComposition *)displayEventCallback;
-(void)initDisplayBacklightAlsStats;
-(void)registerForDisplayAgentNotifications;
-(void)initTouchStats;
-(void)registerForTouchNotifications;
-(void)setBacklightEventCallback:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)setAlsUserPreferencesEventCallback:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)setBacklightRailCallback:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)setAlsEnabledEventCallback:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)setIoReportEventCallback:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)setTouchEventCallback:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)handleTouchCallback:(id)arg1 ;
-(PLEntryNotificationOperatorComposition *)touchEventCallback;
-(char)prevMieOn;
-(void)handleBacklightCallback:(id)arg1 ;
-(void)handleAlsUserPreferencesCallback:(id)arg1 ;
-(void)handleBacklightRailCallback:(id)arg1 ;
-(void)handleAlsEnabledCallback:(id)arg1 ;
-(void)handleIOReportCallback:(id)arg1 ;
-(PLEntryNotificationOperatorComposition *)ioReportEventCallback;
-(void)setTouchSubmitCnt:(long)arg1 ;
-(void)setStartTouchEntryId:(long long)arg1 ;
-(long long)startTouchEntryId;
-(void)setDispSubmitCnt:(long)arg1 ;
-(void)setPrevDisplayOn:(char)arg1 ;
-(void)setPrevMieOn:(char)arg1 ;
-(void)setPrevBklBucketIdx:(long)arg1 ;
-(void)setBklTimeStamp:(double)arg1 ;
-(void)setDisplayOnTimeStamp:(double)arg1 ;
-(void)setMieOnTimeStamp:(double)arg1 ;
-(void)setFilterFirstEntry:(char)arg1 ;
-(void)setPrevBklPower:(double)arg1 ;
-(void)setBklPowerRailTimeStamp:(double)arg1 ;
-(void)resetDisplayAlsTable;
-(void)setPrevAlsOn:(char)arg1 ;
-(void)addEntryToDisplayAlsTable:(id)arg1 withValue:(double)arg2 ;
-(char)prevDisplayOn;
-(long)getBklbucketIdx:(long)arg1 withLux:(long)arg2 ;
-(long)prevBklBucketIdx;
-(double)prevBklPower;
-(char)prevAlsOn;
-(long)getLuxBucket:(long)arg1 ;
-(long)getUAmpsBucket:(long)arg1 ;
-(double)displayOnTimeStamp;
-(double)bklPowerRailTimeStamp;
-(void)updateDisplayMetrics:(char)arg1 withState:(char)arg2 ;
-(void)updateMieMetrics:(char)arg1 ;
-(double)bklTimeStamp;
-(char)filterFirstEntry;
-(void)processIOReportEntry:(id)arg1 ;
-(double)mieOnTimeStamp;
-(void)finalizeDisplayAlsTable;
-(long)dispSubmitCnt;
-(void)reInitDisplayBacklightAlsStats;
-(long)touchSubmitCnt;
-(PLEntryNotificationOperatorComposition *)backlightEventCallback;
-(PLEntryNotificationOperatorComposition *)alsUserPreferencesEventCallback;
-(PLEntryNotificationOperatorComposition *)backlightRailCallback;
-(PLEntryNotificationOperatorComposition *)alsEnabledEventCallback;
-(double)prevBklChgTimeStamp;
-(void)setPrevBklChgTimeStamp:(double)arg1 ;
@end

