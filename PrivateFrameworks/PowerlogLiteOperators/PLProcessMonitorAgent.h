/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:07 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PowerlogLiteOperators.framework/PowerlogLiteOperators
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PowerlogCore/PLAgent.h>

@class NSDate, PLEntryNotificationOperatorComposition, PLNSNotificationOperatorComposition;

@interface PLProcessMonitorAgent : PLAgent {

	char _firstBoot;
	NSDate* _currentCachedDate;
	NSDate* _previousCacheDate;
	PLEntryNotificationOperatorComposition* _batteryLevelChanged;
	PLNSNotificationOperatorComposition* _asertionNotifications;
	double _currentCachedTotalCPUTime;

}

@property (retain) NSDate * currentCachedDate;                                                //@synthesize currentCachedDate=_currentCachedDate - In the implementation block
@property (retain) NSDate * previousCacheDate;                                                //@synthesize previousCacheDate=_previousCacheDate - In the implementation block
@property (assign) double currentCachedTotalCPUTime;                                          //@synthesize currentCachedTotalCPUTime=_currentCachedTotalCPUTime - In the implementation block
@property (assign) char firstBoot;                                                            //@synthesize firstBoot=_firstBoot - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * batteryLevelChanged;              //@synthesize batteryLevelChanged=_batteryLevelChanged - In the implementation block
@property (retain) PLNSNotificationOperatorComposition * asertionNotifications;               //@synthesize asertionNotifications=_asertionNotifications - In the implementation block
+(void)load;
+(id)defaults;
+(id)accountingGroupDefinitions;
+(id)entryEventPointDefinitions;
+(id)entryEventForwardDefinitions;
+(id)entryEventBackwardDefinitions;
+(id)entryEventIntervalDefinitions;
+(id)entryEventNoneDefinitions;
+(id)entryEventForwardProcessID;
+(id)entryEventBackwardDefinitionProcessMonitor;
+(id)entryEventIntervalDefinitionProcessMonitorDiff;
-(id)init;
-(void)log;
-(void)initOperatorDependancies;
-(void)setBatteryLevelChanged:(PLEntryNotificationOperatorComposition *)arg1 ;
-(PLEntryNotificationOperatorComposition *)batteryLevelChanged;
-(id)trimmingConditionsForRolloverAtDate:(id)arg1 ;
-(void)logEventIntervalProcessMonitorInterval;
-(char)isCachedForProcessID:(int)arg1 ;
-(id)eventForwardProcessIDForPID:(int)arg1 ;
-(NSDate *)currentCachedDate;
-(void)setPreviousCacheDate:(NSDate *)arg1 ;
-(void)setCurrentCachedDate:(NSDate *)arg1 ;
-(void)setCurrentCachedTotalCPUTime:(double)arg1 ;
-(void)updateProcessMonitorCache;
-(void)logEventIntervalProcessMonitorIntervalUsingCache;
-(void)logEventBackwardProcessMonitorUsingCache;
-(id)processMonitorMultiKeyFromProcessID:(id)arg1 ;
-(NSDate *)previousCacheDate;
-(double)currentCachedTotalCPUTime;
-(char)isCachedForProcessID:(int)arg1 andName:(id)arg2 ;
-(void)logEventBackwardProcessMonitor;
-(char)firstBoot;
-(void)setFirstBoot:(char)arg1 ;
-(PLNSNotificationOperatorComposition *)asertionNotifications;
-(void)setAsertionNotifications:(PLNSNotificationOperatorComposition *)arg1 ;
@end

