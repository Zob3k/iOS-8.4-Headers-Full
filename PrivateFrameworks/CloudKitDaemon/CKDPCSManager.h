/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:39:57 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CloudKitDaemon/CloudKitDaemon-Structs.h>
#import <CloudKitDaemon/CKDProtocolTranslatorIdentityDelegate.h>

@class NSData, CKDClientContext, NSString, NSOperationQueue, CKDPCSFetchAggregator, CKDPCSCache, NSMutableDictionary;

@interface CKDPCSManager : NSObject <CKDProtocolTranslatorIdentityDelegate> {

	NSData* _userIdentityFingerprint;
	CKDClientContext* _context;
	NSString* _currentAccountIdentifier;
	NSOperationQueue* _operationQueue;
	CKDPCSFetchAggregator* _pcsFetchAggregator;
	CKDPCSCache* _zoneCache;
	CKDPCSCache* _backgroundZoneCache;
	NSMutableDictionary* _recordCacheByPrivateZoneID;
	NSMutableDictionary* _backgroundRecordCacheByPrivateZoneID;
	CKDPCSCache* _shareCache;
	CKDPCSCache* _backgroundShareCache;
	PCSIdentityDataRef _sharingIdentity;
	NSString* _serviceName;

}

@property (nonatomic,__weak,readonly) CKDClientContext * context;                                     //@synthesize context=_context - In the implementation block
@property (retain) NSString * currentAccountIdentifier;                                               //@synthesize currentAccountIdentifier=_currentAccountIdentifier - In the implementation block
@property (nonatomic,retain) NSOperationQueue * operationQueue;                                       //@synthesize operationQueue=_operationQueue - In the implementation block
@property (nonatomic,retain) CKDPCSFetchAggregator * pcsFetchAggregator;                              //@synthesize pcsFetchAggregator=_pcsFetchAggregator - In the implementation block
@property (nonatomic,retain) CKDPCSCache * zoneCache;                                                 //@synthesize zoneCache=_zoneCache - In the implementation block
@property (nonatomic,retain) CKDPCSCache * backgroundZoneCache;                                       //@synthesize backgroundZoneCache=_backgroundZoneCache - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * recordCacheByPrivateZoneID;                        //@synthesize recordCacheByPrivateZoneID=_recordCacheByPrivateZoneID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * backgroundRecordCacheByPrivateZoneID;              //@synthesize backgroundRecordCacheByPrivateZoneID=_backgroundRecordCacheByPrivateZoneID - In the implementation block
@property (nonatomic,retain) CKDPCSCache * shareCache;                                                //@synthesize shareCache=_shareCache - In the implementation block
@property (nonatomic,retain) CKDPCSCache * backgroundShareCache;                                      //@synthesize backgroundShareCache=_backgroundShareCache - In the implementation block
@property (assign,nonatomic) PCSIdentityDataRef sharingIdentity;                                      //@synthesize sharingIdentity=_sharingIdentity - In the implementation block
@property (nonatomic,retain) NSString * serviceName;                                                  //@synthesize serviceName=_serviceName - In the implementation block
@property (nonatomic,retain) NSData * userIdentityFingerprint;                                        //@synthesize userIdentityFingerprint=_userIdentityFingerprint - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(CKDClientContext *)context;
-(void)setOperationQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)operationQueue;
-(PCSIdentityDataRef)createSharingIdentityWithError:(id*)arg1 ;
-(id)dataFromSharingIdentity:(PCSIdentityDataRef)arg1 error:(id*)arg2 ;
-(void)clearPCSCaches;
-(id)initWithClientContext:(id)arg1 ;
-(id)_serviceNameForContainerID:(id)arg1 ;
-(void)_fetchPCSForZoneWithIDFromServer:(id)arg1 operation:(id)arg2 forCache:(id)arg3 ;
-(void)_fetchPCSForShareWithIDFromServer:(id)arg1 operation:(id)arg2 forCache:(id)arg3 ;
-(NSString *)currentAccountIdentifier;
-(void)setCurrentAccountIdentifier:(NSString *)arg1 ;
-(void)setUserIdentityFingerprint:(NSData *)arg1 ;
-(NSString *)serviceName;
-(PCSIdentitySetDataRef)copyServiceIdentityWithError:(id*)arg1 ;
-(id)addSelfIdentityToPCS:(OpaquePCSShareProtectionRef)arg1 ;
-(id)dataFromZonePCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(id)etagFromPCSData:(id)arg1 ;
-(OpaquePCSShareProtectionRef)createRecordPCSFromData:(id)arg1 zonePCS:(OpaquePCSShareProtectionRef)arg2 logFailure:(char)arg3 error:(id*)arg4 ;
-(OpaquePCSShareProtectionRef)createRecordPCSFromData:(id)arg1 sharePCS:(OpaquePCSShareProtectionRef)arg2 logFailure:(char)arg3 error:(id*)arg4 ;
-(char)addSharePCS:(OpaquePCSShareProtectionRef)arg1 toRecordPCS:(OpaquePCSShareProtectionRef)arg2 permission:(unsigned)arg3 error:(id*)arg4 ;
-(id)dataFromRecordPCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(OpaquePCSShareProtectionRef)_addPublicSharingIdentityToSharePCS:(OpaquePCSShareProtectionRef)arg1 withError:(id*)arg2 ;
-(OpaquePCSShareProtectionRef)createSharePCSFromData:(id)arg1 sharingIdentity:(PCSIdentityDataRef)arg2 logFailure:(char)arg3 error:(id*)arg4 ;
-(OpaquePCSShareProtectionRef)createSharePCSFromData:(id)arg1 logFailure:(char)arg2 error:(id*)arg3 ;
-(OpaquePCSShareProtectionRef)createZonePCSWithError:(id*)arg1 ;
-(OpaquePCSShareProtectionRef)createZonePCSFromData:(id)arg1 error:(id*)arg2 ;
-(void)_saveNewPCSOnDefaultZone:(id)arg1 operation:(id)arg2 cache:(id)arg3 ;
-(CKDPCSCache *)backgroundZoneCache;
-(CKDPCSCache *)zoneCache;
-(OpaquePCSShareProtectionRef)createRecordPCSFromData:(id)arg1 zonePCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(void)fetchPCSForZoneWithID:(id)arg1 operation:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(OpaquePCSShareProtectionRef)createRecordPCSFromData:(id)arg1 sharePCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(void)fetchPCSForShareWithID:(id)arg1 operation:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)_fetchZonePCSForRecordPCS:(id)arg1 cache:(id)arg2 operation:(id)arg3 ;
-(void)_fetchSharePCSForRecordPCS:(id)arg1 cache:(id)arg2 operation:(id)arg3 ;
-(CKDPCSFetchAggregator *)pcsFetchAggregator;
-(void)_handleRecordFetchedFromServer:(id)arg1 withID:(id)arg2 forCache:(id)arg3 operation:(id)arg4 error:(id)arg5 ;
-(void)_fetchPCSForRecordWithIDFromServer:(id)arg1 operation:(id)arg2 forCache:(id)arg3 ;
-(NSMutableDictionary *)backgroundRecordCacheByPrivateZoneID;
-(id)_newPCSRecordCache;
-(NSMutableDictionary *)recordCacheByPrivateZoneID;
-(OpaquePCSShareProtectionRef)createSharePCSFromData:(id)arg1 error:(id*)arg2 ;
-(id)pcsDataFromFetchedShare:(id)arg1 error:(id*)arg2 ;
-(void)_handleShareFetchedFromServer:(id)arg1 withID:(id)arg2 forCache:(id)arg3 operation:(id)arg4 error:(id)arg5 ;
-(CKDPCSCache *)shareCache;
-(CKDPCSCache *)backgroundShareCache;
-(id)referenceIdentifierStringFromAssetKey:(id)arg1 ;
-(NSData *)userIdentityFingerprint;
-(PCSIdentityDataRef)sharingIdentity;
-(id)protectionIdentifierFromShareProtection:(OpaquePCSShareProtectionRef)arg1 ;
-(id)copyCurrentPublicIdentityWithError:(id*)arg1 ;
-(PCSIdentityDataRef)createSharingIdentityFromData:(id)arg1 error:(id*)arg2 ;
-(id)removeSelfIdentityFromPCS:(OpaquePCSShareProtectionRef)arg1 ;
-(id)etagFromZonePCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(id)repairZonePCSData:(id)arg1 error:(id*)arg2 ;
-(OpaquePCSShareProtectionRef)createRecordPCSWithZonePCS:(OpaquePCSShareProtectionRef)arg1 sharePCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(OpaquePCSShareProtectionRef)createRecordPCSWithEncryptedZonePCS:(CFDataRef)arg1 sharePCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(char)addSharePCS:(OpaquePCSShareProtectionRef)arg1 toRecordPCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(char)removeSharePCS:(OpaquePCSShareProtectionRef)arg1 fromRecordPCS:(OpaquePCSShareProtectionRef)arg2 error:(id*)arg3 ;
-(id)etagFromRecordPCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(OpaquePCSShareProtectionRef)createSharePCSWithError:(id*)arg1 ;
-(OpaquePCSShareProtectionRef)createSharePublicPCSWithIdentity:(PCSIdentityDataRef)arg1 error:(id*)arg2 ;
-(id)dataFromSharePCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(OpaquePCSShareProtectionRef)createSharePCSFromData:(id)arg1 sharingIdentity:(PCSIdentityDataRef)arg2 error:(id*)arg3 ;
-(id)etagFromSharePCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(id)addSharingIdentity:(PCSIdentityDataRef)arg1 toSharePCS:(OpaquePCSShareProtectionRef)arg2 ;
-(id)removeSharingIdentity:(PCSIdentityDataRef)arg1 fromSharePCS:(OpaquePCSShareProtectionRef)arg2 ;
-(id)removePublicIdentity:(PCSPublicIdentityDataRef)arg1 fromSharePCS:(OpaquePCSShareProtectionRef)arg2 ;
-(PCSPublicIdentityDataRef)createPublicIdentityFromData:(id)arg1 error:(id*)arg2 ;
-(id)sharingIdentityDataFromPCS:(OpaquePCSShareProtectionRef)arg1 error:(id*)arg2 ;
-(void)fetchPCSForRecordWithID:(id)arg1 operation:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)setPCSData:(id)arg1 forFetchedZoneID:(id)arg2 withScope:(int)arg3 ;
-(void)setPCSData:(id)arg1 forFetchedRecordID:(id)arg2 withScope:(int)arg3 ;
-(void)setPCSData:(id)arg1 forFetchedShareID:(id)arg2 ;
-(id)unwrapAssetKey:(id)arg1 withRecordPCS:(OpaquePCSShareProtectionRef)arg2 withError:(id*)arg3 ;
-(id)wrapAssetKey:(id)arg1 withRecordPCS:(OpaquePCSShareProtectionRef)arg2 withError:(id*)arg3 ;
-(id)newAssetKey;
-(id)referenceSignatureFromAssetKey:(id)arg1 ;
-(void)setPcsFetchAggregator:(CKDPCSFetchAggregator *)arg1 ;
-(void)setZoneCache:(CKDPCSCache *)arg1 ;
-(void)setBackgroundZoneCache:(CKDPCSCache *)arg1 ;
-(void)setRecordCacheByPrivateZoneID:(NSMutableDictionary *)arg1 ;
-(void)setBackgroundRecordCacheByPrivateZoneID:(NSMutableDictionary *)arg1 ;
-(void)setShareCache:(CKDPCSCache *)arg1 ;
-(void)setBackgroundShareCache:(CKDPCSCache *)arg1 ;
-(void)setSharingIdentity:(PCSIdentityDataRef)arg1 ;
-(void)setServiceName:(NSString *)arg1 ;
@end

