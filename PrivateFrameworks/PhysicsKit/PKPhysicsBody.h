/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:04 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PhysicsKit.framework/PhysicsKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhysicsKit/PhysicsKit-Structs.h>
#import <PhysicsKit/NSCopying.h>
#import <PhysicsKit/NSCoding.h>

@protocol NSObject;
@class PKPhysicsWorld, NSMutableArray, SKNode, NSArray;

@interface PKPhysicsBody : NSObject <NSCopying, NSCoding> {

	id<NSObject> _representedObject;
	unsigned* _bodyDef : 2BodyDef;
	unsigned* _body : 2Body;
	PKCFieldRef _field;
	int _dynamicType;
	vector<PKPhysicsShape *, std::__1::allocator<PKPhysicsShape *> >* _shapes;
	PKPhysicsWorld* _world;
	NSMutableArray* _joints;
	char _inUse;
	int _shapeType;
	shared_ptr<PKPath>* _pathPtr;
	shared_ptr<QuadTree>* _quadTree;
	CGPoint _p0;
	CGPoint _p1;
	CGSize _size;
	float _radius;
	float _edgeRadius;
	CGImageRef _mask;
	shared_ptr<PKPath>* _outline;
	char _isPinned;
	char _allowsRotation;
	/*^block*/id _postStepBlock;

}

@property (nonatomic,__weak,readonly) SKNode * node; 
@property (nonatomic,readonly) vector<PKPhysicsShape ** _shapes; 
@property (assign,nonatomic) unsigned* _bodyDef : 2BodyDef; 
@property (assign,nonatomic) unsigned* _body : 2Body; 
@property (assign,nonatomic) CGPoint position; 
@property (assign,nonatomic) float rotation; 
@property (assign,getter=isDynamic,nonatomic) char dynamic; 
@property (assign,nonatomic) char usesPreciseCollisionDetection; 
@property (assign,nonatomic) char allowsRotation; 
@property (assign,nonatomic) char pinned; 
@property (assign,nonatomic) shared_ptr<PKPath>* outline; 
@property (assign,getter=isResting,nonatomic) char resting; 
@property (assign,nonatomic) float friction; 
@property (assign,nonatomic) float charge; 
@property (assign,nonatomic) float restitution; 
@property (assign,nonatomic) float linearDamping; 
@property (assign,nonatomic) float angularDamping; 
@property (assign,nonatomic) float density; 
@property (assign,nonatomic) float mass; 
@property (nonatomic,readonly) float area; 
@property (assign,nonatomic) float radius; 
@property (assign,nonatomic) char affectedByGravity; 
@property (assign,nonatomic) unsigned fieldBitMask; 
@property (assign,nonatomic) unsigned categoryBitMask; 
@property (assign,nonatomic) unsigned collisionBitMask; 
@property (assign,nonatomic) unsigned contactTestBitMask; 
@property (nonatomic,readonly) NSArray * joints; 
@property (assign,nonatomic,__weak) id<NSObject> representedObject; 
@property (nonatomic,copy) id postStepBlock;                                     //@synthesize postStepBlock=_postStepBlock - In the implementation block
@property (assign,nonatomic) CGVector velocity; 
@property (assign,nonatomic) float angularVelocity; 
+(id)bodyWithCircleOfRadius:(float)arg1 center:(CGPoint)arg2 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 edgeRadius:(float)arg2 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 center:(CGPoint)arg2 edgeRadius:(float)arg3 ;
+(id)bodyWithBodies:(id)arg1 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 center:(CGPoint)arg2 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 ;
+(id)bodyWithCircleOfRadius:(float)arg1 ;
+(id)bodyWithEdgeLoopFromPath:(CGPathRef)arg1 ;
+(id)bodyWithEdgeFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
+(id)bodyWithPolygonFromPath:(CGPathRef)arg1 ;
+(id)bodyWithEdgeChainFromPath:(CGPathRef)arg1 ;
+(id)bodyWithOutline:(shared_ptr<PKPath>*)arg1 offset:(CGPoint)arg2 ;
+(id)initWithQuadTree:(id)arg1 ;
+(id)initWithMarchingCubes:(PKCGrid=iiiRange=ffffff}vector<unsigned char, std::__1::allocator<unsigned char> >=**compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >=*}}vector<float __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >=compressed_pair<float * __attribute__((ext_vector_type(4))), std::__1::allocator<float __attribute__((ext_vector_type(4)))> >}vector<int, std::__1::allocator<int> >=iicompressed_pair<int *, std::__1::allocator<int> >=i}}vector<signed char, std::__1::allocator<signed char> >=**compressed_pair<signed char *, std::__1::allocator<signed char> >=*}}}Ref)arg1 pixelFrame:(CGRect)arg2 ;
-(id)_descriptionClassName;
-(SKNode *)node;
-(NSArray *)joints;
-(id)_descriptionClassName;
-(id)_joints;
-(char)pinned;
-(void)setFieldBitMask:(unsigned)arg1 ;
-(unsigned)fieldBitMask;
-(char)_inUse;
-(void)reapplyScale:(float)arg1 yScale:(float)arg2 ;
-(void)applyForce:(CGPoint)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyTorque:(float)arg1 ;
-(void)applyImpulse:(CGVector)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyAngularImpulse:(float)arg1 ;
-(id)allContactedBodies;
-(unsigned)contactTestBitMask;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(id)description;
-(void)setVelocity:(CGVector)arg1 ;
-(void)setMass:(float)arg1 ;
-(float)charge;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setPosition:(CGPoint)arg1 ;
-(CGPoint)position;
-(void)setCharge:(float)arg1 ;
-(char)active;
-(void)setPinned:(char)arg1 ;
-(void)setResting:(char)arg1 ;
-(id)_world;
-(void)setDynamic:(char)arg1 ;
-(void)setActive:(char)arg1 ;
-(void)setFriction:(float)arg1 ;
-(void)setDensity:(float)arg1 ;
-(void)setAllowsRotation:(char)arg1 ;
-(void)setRestitution:(float)arg1 ;
-(float)friction;
-(float)density;
-(void)setLinearDamping:(float)arg1 ;
-(void)setAngularDamping:(float)arg1 ;
-(char)allowsRotation;
-(CGVector)velocity;
-(void)setRotation:(float)arg1 ;
-(float)rotation;
-(float)angularVelocity;
-(void)setAngularVelocity:(float)arg1 ;
-(float)restitution;
-(float)linearDamping;
-(float)angularDamping;
-(float)mass;
-(void)applyImpulse:(CGVector)arg1 ;
-(id<NSObject>)representedObject;
-(void)setRepresentedObject:(id<NSObject>)arg1 ;
-(void)setAffectedByGravity:(char)arg1 ;
-(void)setPostStepBlock:(id)arg1 ;
-(void)setUsesPreciseCollisionDetection:(char)arg1 ;
-(unsigned)collisionBitMask;
-(void)setCollisionBitMask:(unsigned)arg1 ;
-(unsigned)categoryBitMask;
-(void)setCategoryBitMask:(unsigned)arg1 ;
-(void)setContactTestBitMask:(unsigned)arg1 ;
-(void)applyUnscaledImpulse:(CGVector)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyUnscaledForce:(CGVector)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyUnscaledImpulse:(CGVector)arg1 ;
-(void)applyUnscaledForce:(CGVector)arg1 ;
-(id)initWithCircleOfRadius:(float)arg1 ;
-(id)initWithRectangleOfSize:(CGSize)arg1 ;
-(id)initWithEdgeFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
-(id)initWithPolygonFromPath:(CGPathRef)arg1 ;
-(id)initWithEdgeChainFromPath:(CGPathRef)arg1 ;
-(id)initWithEdgeLoopFromPath:(CGPathRef)arg1 ;
-(void)set_allowSleep:(char)arg1 ;
-(char)isDynamic;
-(char)usesPreciseCollisionDetection;
-(char)isResting;
-(char)affectedByGravity;
-(float)radius;
-(void)setRadius:(float)arg1 ;
-(float)area;
-(id)initWithCircleOfRadius:(float)arg1 center:(CGPoint)arg2 ;
-(id)initWithRectangleOfSize:(CGSize)arg1 center:(CGPoint)arg2 ;
-(vector<PKPhysicsShape **)_shapes;
-(id)initWithRectangleOfSize:(CGSize)arg1 center:(CGPoint)arg2 edgeRadius:(float)arg3 ;
-(id)initWithBodies:(id)arg1 ;
-(id)_descriptionFormat;
-(void)clearBox2DData;
-(char)_allowSleep;
-(id)postStepBlock;
-(unsigned*)_bodyDef;
-(shared_ptr<QuadTree>*)_quadTree;
-(void)set_world:(id)arg1 ;
-(void)set_joints:(id)arg1 ;
-(void)set_inUse:(char)arg1 ;
-(void)set_bodyDef:(unsigned*)arg1 ;
-(void)set_body:(unsigned*)arg1 ;
-(unsigned*)_body;
-(void)applyForce:(CGPoint)arg1 ;
-(shared_ptr<PKPath>*)outline;
-(void)setOutline:(shared_ptr<PKPath>*)arg1 ;
@end

