/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:41:52 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PersistentConnection/PCLoggingDelegate.h>

@protocol OS_dispatch_queue;
@class NSDate, NSString, PCDispatchTimer, NSRunLoop, NSObject;

@interface PCSimpleTimer : NSObject <PCLoggingDelegate> {

	double _fireTime;
	double _startTime;
	double _lastUpdateTime;
	char _triggerOnGMTChange;
	char _disableSystemWaking;
	NSDate* _scheduledWakeDate;
	NSString* _serviceIdentifier;
	id _target;
	SEL _selector;
	id _userInfo;
	PCDispatchTimer* _preventSleepTimer;
	PCDispatchTimer* _fireTimer;
	char _sleepIsImminent;
	unsigned _powerAssertionID;
	id _timeChangeSource;
	NSRunLoop* _timerRunLoop;
	NSString* _timerMode;
	int _significantTimeChangeToken;
	NSObject*<OS_dispatch_queue> _queue;

}

@property (assign,nonatomic) char disableSystemWaking;                    //@synthesize disableSystemWaking=_disableSystemWaking - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * loggingIdentifier;              //@synthesize serviceIdentifier=_serviceIdentifier - In the implementation block
+(id)lastSystemWakeDate;
+(double)currentMachTimeInterval;
-(id)initWithFireDate:(id)arg1 serviceIdentifier:(id)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 ;
-(id)initWithTimeInterval:(double)arg1 serviceIdentifier:(id)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 ;
-(void)scheduleInQueue:(id)arg1 ;
-(void)dealloc;
-(NSString *)debugDescription;
-(void)invalidate;
-(char)isValid;
-(id)userInfo;
-(void)scheduleInRunLoop:(id)arg1 ;
-(NSString *)loggingIdentifier;
-(void)setDisableSystemWaking:(char)arg1 ;
-(void)_updateTimers;
-(void)scheduleInRunLoop:(id)arg1 inMode:(id)arg2 ;
-(void)_fireTimerFired;
-(id)initWithAbsoluteTime:(double)arg1 serviceIdentifier:(id)arg2 target:(id)arg3 selector:(SEL)arg4 userInfo:(id)arg5 triggerOnGMTChange:(char)arg6 ;
-(char)firingIsImminent;
-(void)updateFireTime:(double)arg1 triggerOnGMTChange:(char)arg2 ;
-(char)disableSystemWaking;
-(void)_scheduleTimer;
-(void)_preventSleepFired;
-(void)_setPowerMonitoringEnabled:(char)arg1 ;
-(void)_setSignificantTimeChangeMonitoringEnabled:(char)arg1 ;
-(void)_significantTimeChange;
-(id)_getTimerRunLoop;
-(id)_getTimerMode;
-(void)_performBlockOnQueue:(/*^block*/id)arg1 ;
-(void)_powerNotificationSleepIsNotImminent;
-(void)_powerNotificationSleepIsImminent;
@end

