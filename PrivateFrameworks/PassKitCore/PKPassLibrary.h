/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:41:48 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PassKitCore/PKPassLibraryExportedInterface.h>

@protocol PKPassLibraryDelegate;
@class PKXPCService, PKAsyncCache;

@interface PKPassLibrary : NSObject <PKPassLibraryExportedInterface> {

	PKXPCService* _remoteService;
	PKAsyncCache* _libraryCache;
	id<PKPassLibraryDelegate> _delegate;

}

@property (assign,nonatomic) id<PKPassLibraryDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
+(char)isPaymentPassActivationAvailable;
+(char)isPassLibraryAvailable;
-(void)dealloc;
-(void)setDelegate:(id<PKPassLibraryDelegate>)arg1 ;
-(id)init;
-(id<PKPassLibraryDelegate>)delegate;
-(void)updateSettings:(int)arg1 forObjectWithUniqueID:(id)arg2 ;
-(void)noteObjectSharedWithUniqueID:(id)arg1 ;
-(void)nukeDatabaseAndExit;
-(void)addFakeBulletin;
-(void)introduceDatabaseIntegrityProblem;
-(void)shuffleGroups:(int)arg1 ;
-(void)sendUserEditedCatalog:(id)arg1 ;
-(void)sendPassbookUIServiceLaunched;
-(void)logDelayExitReasons;
-(void)recomputeRelevantPassesWithSearchMode:(int)arg1 ;
-(void)fetchHasCandidatePasses:(/*^block*/id)arg1 ;
-(void)fetchCurrentRelevantPassInfo:(/*^block*/id)arg1 ;
-(void)inAppPaymentPassesForNetworks:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)hasInAppPaymentPassesForNetworks:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)catalogChanged:(id)arg1 withNewPasses:(id)arg2 ;
-(void)removingPassesOfType:(unsigned)arg1 didUpdateWithProgress:(double)arg2 ;
-(void)removingPassesOfType:(unsigned)arg1 didFinishWithSuccess:(char)arg2 ;
-(void)passAdded:(id)arg1 ;
-(void)passUpdated:(id)arg1 ;
-(void)passRemoved:(id)arg1 ;
-(id)_passesWithRetries:(unsigned)arg1 ;
-(id)_passesOfType:(unsigned)arg1 withRetries:(unsigned)arg2 ;
-(void)_getPassWithUniqueID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)_remoteObjectProxyWithSemaphore:(id)arg1 ;
-(void)_applyDataAccessorToObject:(id)arg1 ;
-(id)_remoteObjectProxyWithFailureHandler:(/*^block*/id)arg1 ;
-(void)_applyDataAccessorToObjects:(id)arg1 ;
-(void)_getPassesAndCatalogOfPassTypes:(unsigned)arg1 limitResults:(char)arg2 withRetries:(unsigned)arg3 handler:(/*^block*/id)arg4 ;
-(void)getContainmentStatusAndSettingsForPass:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)_getArchivedObjectWithUniqueID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)removePassWithUniqueID:(id)arg1 ;
-(id)_remoteObjectProxy;
-(char)_isPaymentPassActivationAvailable;
-(void)_postLibraryChangeWithUserInfo:(id)arg1 ;
-(id)_remoteObjectProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(/*^block*/id)_errorHandlerWithCompletion:(/*^block*/id)arg1 ;
-(id)passesOfType:(unsigned)arg1 ;
-(id)passWithUniqueID:(id)arg1 ;
-(char)hasPassesOfType:(unsigned)arg1 ;
-(char)canAddPassOfType:(unsigned)arg1 ;
-(char)isRemovingPassesOfType:(unsigned)arg1 ;
-(void)getRouteRelevantPassesFromLocation:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)getPassesAndCatalog:(char)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)getPassesAndCatalogOfPassTypes:(unsigned)arg1 withHandler:(/*^block*/id)arg2 ;
-(char)replacePassWithPass:(id)arg1 ;
-(id)archiveForObjectWithUniqueID:(id)arg1 ;
-(void)addPasses:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)openPaymentSetup;
-(void)activatePaymentPass:(id)arg1 withActivationCode:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)activatePaymentPass:(id)arg1 withActivationData:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)ingestPassData:(id)arg1 settings:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)requestUpdateOfObjectWithUniqueID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)removePass:(id)arg1 ;
-(void)fetchContentForUniqueID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)fetchImageSetForUniqueID:(id)arg1 ofType:(int)arg2 displayProfile:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(char)migrateData;
-(void)removePassesOfType:(unsigned)arg1 ;
-(void)noteAccountChanged;
-(void)noteAccountDeleted;
-(id)diffForPassBulletinWithRecordID:(id)arg1 ;
-(/*^block*/id)_errorHandlerWithSemaphore:(id)arg1 ;
-(id)passWithPassTypeIdentifier:(id)arg1 serialNumber:(id)arg2 ;
-(char)containsPass:(id)arg1 ;
-(id)passes;
@end

