/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:39:35 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/CalDAV.framework/CalDAV
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CalDAV/CalDAVOperation.h>
#import <CalDAV/CoreDAVContainerInfoTaskGroupDelegate.h>
#import <CalDAV/CoreDAVContainerInfoSyncProvider.h>
#import <CalDAV/CoreDAVPropPatchTaskDelegate.h>
#import <CalDAV/CoreDAVTaskGroupDelegate.h>

@protocol OS_dispatch_group;
@class NSError, NSMutableDictionary, NSString, NSMutableSet, NSObject;

@interface CalDAVCalendarPropertyRefreshOperation : CalDAVOperation <CoreDAVContainerInfoTaskGroupDelegate, CoreDAVContainerInfoSyncProvider, CoreDAVPropPatchTaskDelegate, CoreDAVTaskGroupDelegate> {

	NSError* _savedError;
	NSMutableDictionary* _ctags;
	NSMutableDictionary* _syncTokens;
	char _forceClearCalendarHomeSyncToken;
	NSString* _calendarHomeSyncToken;
	char _useCalendarHomeSyncReport;
	NSMutableDictionary* _pathToLocalCalendar;
	NSMutableSet* _localCalendarsWithNoPath;
	NSMutableSet* _updatedCalendars;
	char _didFinish;
	char _didMakeCalendars;
	char _isSecondRefresh;
	int _nextCalendarOrder;
	NSObject*<OS_dispatch_group> _outstandingTasksGroup;

}

@property (assign,nonatomic) id<CalDAVCalendarPropertyRefreshDelegate> delegate; 
@property (assign,nonatomic) char useCalendarHomeSyncReport;                                  //@synthesize useCalendarHomeSyncReport=_useCalendarHomeSyncReport - In the implementation block
@property (nonatomic,retain) NSString * calendarHomeSyncToken;                                //@synthesize calendarHomeSyncToken=_calendarHomeSyncToken - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(char)useCalendarHomeSyncReport;
-(void)_initializePrincipalCalendarCache;
-(void)_reallyRefreshCalendarProperties;
-(id)_getMkcalendarTaskGroupForCalendar:(id)arg1 ;
-(void)_sendDeletesForCalendars;
-(void)_sendAddsForCalendars;
-(void)_handleCalendarPublish;
-(void)_sendShareActionTasks;
-(void)_prepareCalendarsBeforeRefresh;
-(id)_generateTimeZoneString:(id)arg1 ;
-(int)_sharingStatusForContainer:(id)arg1 ;
-(id)_getSetPropertyStringTask:(id)arg1 forName:(id)arg2 andNamespace:(id)arg3 atURL:(id)arg4 ;
-(char)_handleUpdateForCalendar:(id)arg1 ;
-(void)_getDefaultCalendarsTasksIfNeededForPrincipal:(id)arg1 ;
-(id)_getDefaultMkCalendarForPrincipalTaskGroup:(id)arg1 isEventCalendar:(char)arg2 ;
-(void)_continueHandleContainerInfoTask:(id)arg1 completedWithContainers:(id)arg2 error:(id)arg3 ;
-(void)_finishRefresh;
-(void)containerInfoTask:(id)arg1 completedWithContainers:(id)arg2 error:(id)arg3 ;
-(void)containerInfoSyncTask:(id)arg1 retrievedAddedOrModifiedContainers:(id)arg2 removedContainerURLs:(id)arg3 ;
-(void)containerInfoSyncTask:(id)arg1 completedWithNewSyncToken:(id)arg2 error:(id)arg3 ;
-(NSString *)calendarHomeSyncToken;
-(void)setCalendarHomeSyncToken:(NSString *)arg1 ;
-(id)initWithPrincipal:(id)arg1 ;
-(void)setUseCalendarHomeSyncReport:(char)arg1 ;
-(void)refreshCalendarProperties;
@end

