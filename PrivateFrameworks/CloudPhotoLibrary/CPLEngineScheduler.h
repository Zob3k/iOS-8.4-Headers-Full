/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:40:03 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CloudPhotoLibrary/CPLAbstractObject.h>
#import <CloudPhotoLibrary/CPLEngineComponent.h>

@protocol OS_dispatch_queue;
@class NSDate, NSObject, NSCountedSet, CPLPlatformObject, CPLEngineLibrary, NSString;

@interface CPLEngineScheduler : NSObject <CPLAbstractObject, CPLEngineComponent> {

	unsigned _requiredFirstState;
	unsigned _lastRequestGeneration;
	unsigned _currentRequestGeneration;
	NSDate* _nextScheduledDate;
	double _intervalForRetry;
	NSObject*<OS_dispatch_queue> _queue;
	unsigned _currentSyncState;
	char _opened;
	NSDate* _unavailabilityLimitDate;
	unsigned _foregroundCalls;
	NSCountedSet* _disablingReasons;
	unsigned _disablingMinglingCount;
	NSDate* _lastSyncSessionDateCausedByForeground;
	char _shouldRetryASyncSessionForResourcesUpload;
	char _shouldDoSecondNormalPullPhase;
	CPLPlatformObject* _platformObject;
	CPLEngineLibrary* _engineLibrary;

}

@property (nonatomic,__weak,readonly) CPLEngineLibrary * engineLibrary;              //@synthesize engineLibrary=_engineLibrary - In the implementation block
@property (nonatomic,readonly) char shouldDoSecondNormalPullPhase;                   //@synthesize shouldDoSecondNormalPullPhase=_shouldDoSecondNormalPullPhase - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) CPLPlatformObject * platformObject;                   //@synthesize platformObject=_platformObject - In the implementation block
+(id)platformImplementationProtocol;
-(id)componentName;
-(void)openWithCompletionHandler:(/*^block*/id)arg1 ;
-(CPLEngineLibrary *)engineLibrary;
-(CPLPlatformObject *)platformObject;
-(void)closeAndDeactivate:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getStatusWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getStatusDictionaryWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)initWithEngineLibrary:(id)arg1 ;
-(void)notePullQueueIsFull;
-(void)_disableRetryAfterLocked;
-(char)_syncSessionIsPossible;
-(void)_reallyUnscheduleSession;
-(void)_scheduleNextSyncSession;
-(void)_reallyStartSyncSession;
-(void)_startRequiredSyncSession;
-(void)kickOffSyncSession;
-(void)notePushQueueIsEmpty;
-(void)_noteSyncSessionNeededFromState:(unsigned)arg1 ;
-(void)notePushQueueIsFull;
-(void)_unscheduleNextSyncSession;
-(void)noteServerHasChanges;
-(void)_disableSynchronizationWithReasonLocked:(id)arg1 ;
-(void)_enableSynchronizationWithReasonLocked:(id)arg1 ;
-(void)_noteServerIsUnavailableWithErrorLocked:(id)arg1 ;
-(void)_backOff;
-(void)noteSyncSessionSucceeded;
-(void)_handleResetClientCacheWithError:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_handleResetCloudCacheWithError:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)startRequiredSyncSessionNow;
-(void)noteClientIsInSyncWithClientCache;
-(void)noteClientIsNotInSyncWithClientCache;
-(void)noteResourceDownloadQueueIsFull;
-(void)noteResourceUploadQueueIsFull;
-(char)isClientInForeground;
-(void)disableSynchronizationWithReason:(id)arg1 ;
-(void)enableSynchronizationWithReason:(id)arg1 ;
-(void)disableMingling;
-(void)enableMingling;
-(char)isMinglingEnabled;
-(char)isSynchronizationDisabledWithReasonError:(id*)arg1 ;
-(void)noteServerIsUnavailableWithError:(id)arg1 ;
-(void)noteNetworkStateDidChange;
-(void)noteSyncSessionStateWillBeAttempted:(unsigned)arg1 ;
-(void)noteSyncSessionFailedDuringPhase:(unsigned)arg1 withError:(id)arg2 ;
-(void)resetBackoffInterval;
-(char)shouldDoSecondNormalPullPhase;
-(void)noteClientIsInForeground;
-(void)noteClientIsInBackground;
@end

