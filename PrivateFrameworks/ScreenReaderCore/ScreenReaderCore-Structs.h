/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:30 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class SCRCGestureFactory;

typedef struct __CFRunLoopSource* CFRunLoopSourceRef;

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct _NSZone* NSZoneRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct __CFRunLoopTimer* CFRunLoopTimerRef;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct SCRCMathAverageValue {
	unsigned samples;
	50f fifo;
	int fifoIndex;
	float sum;
	float average;
	float current;
} SCRCMathAverageValue;

typedef struct SCRCFingerState {
	unsigned identifier;
	int xDirection;
	int yDirection;
	SCRCMathAverageValue velocity;
	SCRCMathAverageValue slopeRise;
	SCRCMathAverageValue slopeRun;
	SCRCMathAverageValue distance;
	float velocityDistance;
	char dragStalled;
	CGPoint startPoint;
	CGPoint lastPoint;
	CGPoint lastDownPoint;
} SCRCFingerState;

typedef struct {
	id track;
	id tap;
	id gutterUp;
	id splitTap;
	id canSplitTap;
} SCD_Struct_SC10;

typedef struct {
	char down;
	char dead;
	char gutter;
	unsigned current;
	unsigned digits;
	unsigned count;
	CGRect frame;
	CGPoint location[8];
	CGPoint locationPerTap[8];
	unsigned digitsPerTap;
	double thisTime;
	double lastTime;
} SCD_Struct_SC11;

typedef struct {
	SCRCGestureFactory* factory;
	char isSplitting;
	char isTapping;
	char fastTrack;
	char tapDead;
	char timedOut;
	char active;
	unsigned fingerIdentifier;
	double fingerDownTime;
	CGPoint startTapLocation;
	CGPoint lastTapLocation;
	CGPoint primaryFingerLocation;
	float tapDistance;
	int state;
} SCD_Struct_SC12;

typedef struct URegularExpression* URegularExpressionRef;

typedef struct CGImage* CGImageRef;

