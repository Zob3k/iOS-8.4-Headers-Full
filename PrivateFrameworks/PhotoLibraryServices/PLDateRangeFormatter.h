/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:03 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
@class NSDateFormatter, NSLocale;

@interface PLDateRangeFormatter : NSObject {

	char _autoUpdateOnChanges;
	char _includeDayNumbers;
	char _includeDayNumbersWhenMonthsDiffer;
	char _useRelativeDayFormatting;
	char _useShortMonths;
	char _useShortDaysInRanges;
	char _useTime;
	char _yearOnly;
	char _timeOnly;
	NSDateFormatter* __sameDayDateFormatter;
	NSDateFormatter* __sameDayNoYearDateFormatter;
	NSDateFormatter* __dayOfTheWeekDateFormatter;
	NSDateFormatter* __relativeDateFormatterDay;
	NSDateFormatter* __yearDateFormatter;
	UDateIntervalFormatRef __monthDayIntervalFormat;
	UDateIntervalFormatRef __monthDayNoYearIntervalFormat;
	UDateIntervalFormatRef __differentMonthDayIntervalFormat;
	UDateIntervalFormatRef __differentMonthDayNoYearIntervalFormat;
	UDateIntervalFormatRef __dayOfTheWeekIntervalFormat;
	UDateIntervalFormatRef __timeIntervalFormat;
	UDateIntervalFormatRef __yearIntervalFormat;
	NSLocale* __currentLocale;

}

@property (assign,nonatomic) char includeDayNumbers;                                                       //@synthesize includeDayNumbers=_includeDayNumbers - In the implementation block
@property (assign,nonatomic) char includeDayNumbersWhenMonthsDiffer;                                       //@synthesize includeDayNumbersWhenMonthsDiffer=_includeDayNumbersWhenMonthsDiffer - In the implementation block
@property (assign,nonatomic) char useRelativeDayFormatting;                                                //@synthesize useRelativeDayFormatting=_useRelativeDayFormatting - In the implementation block
@property (assign,nonatomic) char useShortMonths;                                                          //@synthesize useShortMonths=_useShortMonths - In the implementation block
@property (assign,nonatomic) char useShortDaysInRanges;                                                    //@synthesize useShortDaysInRanges=_useShortDaysInRanges - In the implementation block
@property (assign,nonatomic) char useTime;                                                                 //@synthesize useTime=_useTime - In the implementation block
@property (assign,nonatomic) char yearOnly;                                                                //@synthesize yearOnly=_yearOnly - In the implementation block
@property (assign,nonatomic) char timeOnly;                                                                //@synthesize timeOnly=_timeOnly - In the implementation block
@property (assign,nonatomic) char autoUpdateOnChanges; 
@property (setter=_setCurrentLocale:,nonatomic,retain) NSLocale * _currentLocale;                          //@synthesize _currentLocale=__currentLocale - In the implementation block
@property (nonatomic,retain,readonly) NSDateFormatter * _sameDayDateFormatter;                             //@synthesize _sameDayDateFormatter=__sameDayDateFormatter - In the implementation block
@property (nonatomic,retain,readonly) NSDateFormatter * _sameDayNoYearDateFormatter;                       //@synthesize _sameDayNoYearDateFormatter=__sameDayNoYearDateFormatter - In the implementation block
@property (nonatomic,retain,readonly) NSDateFormatter * _dayOfTheWeekDateFormatter;                        //@synthesize _dayOfTheWeekDateFormatter=__dayOfTheWeekDateFormatter - In the implementation block
@property (nonatomic,retain,readonly) NSDateFormatter * _yearDateFormatter;                                //@synthesize _yearDateFormatter=__yearDateFormatter - In the implementation block
@property (nonatomic,retain,readonly) NSDateFormatter * _relativeDateFormatterDay;                         //@synthesize _relativeDateFormatterDay=__relativeDateFormatterDay - In the implementation block
@property (nonatomic,readonly) UDateIntervalFormatRef _monthDayIntervalFormat;                             //@synthesize _monthDayIntervalFormat=__monthDayIntervalFormat - In the implementation block
@property (nonatomic,readonly) UDateIntervalFormatRef _monthDayNoYearIntervalFormat;                       //@synthesize _monthDayNoYearIntervalFormat=__monthDayNoYearIntervalFormat - In the implementation block
@property (nonatomic,readonly) UDateIntervalFormatRef _differentMonthDayIntervalFormat;                    //@synthesize _differentMonthDayIntervalFormat=__differentMonthDayIntervalFormat - In the implementation block
@property (nonatomic,readonly) UDateIntervalFormatRef _differentMonthDayNoYearIntervalFormat;              //@synthesize _differentMonthDayNoYearIntervalFormat=__differentMonthDayNoYearIntervalFormat - In the implementation block
@property (nonatomic,readonly) UDateIntervalFormatRef _dayOfTheWeekIntervalFormat;                         //@synthesize _dayOfTheWeekIntervalFormat=__dayOfTheWeekIntervalFormat - In the implementation block
@property (nonatomic,readonly) UDateIntervalFormatRef _timeIntervalFormat;                                 //@synthesize _timeIntervalFormat=__timeIntervalFormat - In the implementation block
@property (nonatomic,readonly) UDateIntervalFormatRef _yearIntervalFormat;                                 //@synthesize _yearIntervalFormat=__yearIntervalFormat - In the implementation block
+(void)_dumpAllDateCombinationsWithFormatters;
-(void)dealloc;
-(id)init;
-(NSDateFormatter *)_dayOfTheWeekDateFormatter;
-(void)configureForFormatPreset:(unsigned)arg1 ;
-(void)_setCurrentLocale:(id)arg1 ;
-(void)_releaseUDateFormatter:(UDateIntervalFormatRef)arg1 ;
-(char)useShortMonths;
-(char)includeDayNumbers;
-(char)includeDayNumbersWhenMonthsDiffer;
-(id)_sameMonthTemplate;
-(id)_dayTemplate;
-(char)useRelativeDayFormatting;
-(UDateIntervalFormatRef)_newUDateFormatterForLocale:(id)arg1 template:(id)arg2 ;
-(id)_dayDifferentMonthsTemplate;
-(char)useShortDaysInRanges;
-(char)_date:(id)arg1 isWithinDaysInThePast:(int)arg2 fromCurrentDate:(id)arg3 ;
-(char)_date:(id)arg1 isWithinDaysInThePast:(int)arg2 ;
-(UDateIntervalFormatRef)_dayOfTheWeekIntervalFormat;
-(id)_formattedDateWithUDateFormatter:(UDateIntervalFormatRef)arg1 startDate:(id)arg2 endDate:(id)arg3 ;
-(NSDateFormatter *)_relativeDateFormatterDay;
-(char)yearOnly;
-(UDateIntervalFormatRef)_yearIntervalFormat;
-(UDateIntervalFormatRef)_differentMonthDayNoYearIntervalFormat;
-(UDateIntervalFormatRef)_differentMonthDayIntervalFormat;
-(UDateIntervalFormatRef)_monthDayNoYearIntervalFormat;
-(UDateIntervalFormatRef)_monthDayIntervalFormat;
-(NSDateFormatter *)_yearDateFormatter;
-(UDateIntervalFormatRef)_timeIntervalFormat;
-(char)timeOnly;
-(NSDateFormatter *)_sameDayNoYearDateFormatter;
-(NSDateFormatter *)_sameDayDateFormatter;
-(id)formattedDateRangeWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 ;
-(id)formattedDateRangeWithStartDate:(id)arg1 endDate:(id)arg2 ;
-(void)_significantTimeChange:(id)arg1 ;
-(void)_invalidateFormats;
-(void)_postChangeNotification;
-(void)setIncludeDayNumbers:(char)arg1 ;
-(void)setIncludeDayNumbersWhenMonthsDiffer:(char)arg1 ;
-(void)setUseRelativeDayFormatting:(char)arg1 ;
-(void)setUseShortMonths:(char)arg1 ;
-(void)setUseShortDaysInRanges:(char)arg1 ;
-(void)setUseTime:(char)arg1 ;
-(void)setYearOnly:(char)arg1 ;
-(void)setTimeOnly:(char)arg1 ;
-(id)_dateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 ;
-(void)_updateDateComponents:(id)arg1 withValueValue:(int)arg2 forCalendarUnit:(unsigned)arg3 ;
-(id)_dateCombinationAfterUpdatingCurrentDateWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned)arg5 value:(int)arg6 ;
-(id)_dateCombinationAfterUpdatingStartAndEndDatesWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned)arg5 value:(int)arg6 ;
-(id)_relativeCombinationsForDate:(id)arg1 ;
-(void)_dumpDateCombinations;
-(id)formattedDate:(id)arg1 ;
-(void)setAutoUpdateOnChanges:(char)arg1 ;
-(char)autoUpdateOnChanges;
-(void)_dumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 ;
-(void)_updateCurrentDateAndDumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned)arg5 value:(int)arg6 ;
-(void)_updateStartAndEndDatesAndDumpDateCombinationWithStartDate:(id)arg1 endDate:(id)arg2 currentDate:(id)arg3 dateFormatter:(id)arg4 calendarUnit:(unsigned)arg5 value:(int)arg6 ;
-(char)useTime;
-(NSLocale *)_currentLocale;
-(void)_localeChanged:(id)arg1 ;
@end

