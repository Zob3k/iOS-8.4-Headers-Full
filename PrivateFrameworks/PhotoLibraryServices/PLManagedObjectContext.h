/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:41:59 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreData/NSManagedObjectContext.h>

@protocol PLManagedObjectContextPTPNotificationDelegate, OS_xpc_object;
@class PLMergePolicy, PLDelayedFiledSystemDeletions, NSMutableArray, NSMapTable, NSMutableSet, NSMutableDictionary, PLPhotoLibrary, NSObject;

@interface PLManagedObjectContext : NSManagedObjectContext {

	char _hasMetadataChanges;
	char _isConnectedToChangeHub;
	char _mergingChanges;
	char _savingDuringMerge;
	char _isInitializingSingletons;
	char _isLoadingPhotoLibrary;
	char _isBackingALAssetsLibrary;
	char _suspendClientServerTransactions;
	char _isObservingChangesForPTPNotificationDelegate;
	PLMergePolicy* _mergePolicy;
	PLDelayedFiledSystemDeletions* _delayedDeletions;
	NSMutableArray* _delayedMomentAssetUpdates;
	NSMapTable* _delayedMomentAssetDeletions;
	NSMutableSet* _delayedCloudFeedDeletionEntries;
	NSMutableArray* _delayedCloudFeedAlbumUpdates;
	NSMutableArray* _delayedCloudFeedAssetInserts;
	NSMutableArray* _delayedCloudFeedAssetUpdates;
	NSMutableArray* _delayedCloudFeedCommentInserts;
	NSMutableArray* _delayedCloudFeedInvitationRecordUpdates;
	NSMutableArray* _delayedDupeAnalysisNormalInserts;
	NSMutableArray* _delayedDupeAnalysisCloudInserts;
	NSMutableSet* _delayedAssetsForFileSystemPersistency;
	NSMutableDictionary* _delayedSearchIndexUpdateUUIDs;
	NSMutableSet* _avalancheUUIDsForUpdate;
	NSMutableArray* _uuidForCloudDeletion;
	NSMutableArray* _albumUuidForCloudDeletion;
	NSMutableSet* _delayedAlbumCountUpdates;
	NSMutableDictionary* _updatedObjectsAttributes;
	NSMutableDictionary* _updatedObjectsRelationships;
	PLPhotoLibrary* _photoLibrary;
	id<PLManagedObjectContextPTPNotificationDelegate> _ptpNotificationDelegate;
	char _regenerateVideoThumbnails;
	NSObject*<OS_xpc_object> changeHubConnection;
	int _changeSource;

}

@property (assign,nonatomic) PLPhotoLibrary * photoLibrary; 
@property (nonatomic,readonly) char isUserInterfaceContext; 
@property (assign,nonatomic) char regenerateVideoThumbnails;                                                         //@synthesize regenerateVideoThumbnails=_regenerateVideoThumbnails - In the implementation block
@property (assign,nonatomic) char hasMetadataChanges;                                                                //@synthesize hasMetadataChanges=_hasMetadataChanges - In the implementation block
@property (assign,nonatomic) char suspendClientServerTransactions;                                                   //@synthesize suspendClientServerTransactions=_suspendClientServerTransactions - In the implementation block
@property (assign,nonatomic) int changeSource;                                                                       //@synthesize changeSource=_changeSource - In the implementation block
@property (nonatomic,readonly) char mergingChanges;                                                                  //@synthesize mergingChanges=_mergingChanges - In the implementation block
@property (nonatomic,readonly) char savingDuringMerge;                                                               //@synthesize savingDuringMerge=_savingDuringMerge - In the implementation block
@property (assign,nonatomic) char isInitializingSingletons;                                                          //@synthesize isInitializingSingletons=_isInitializingSingletons - In the implementation block
@property (assign,nonatomic) char isLoadingPhotoLibrary;                                                             //@synthesize isLoadingPhotoLibrary=_isLoadingPhotoLibrary - In the implementation block
@property (assign,nonatomic) NSObject*<OS_xpc_object> changeHubConnection; 
@property (nonatomic,retain) PLDelayedFiledSystemDeletions * delayedDeletions;                                       //@synthesize delayedDeletions=_delayedDeletions - In the implementation block
@property (assign,nonatomic) id<PLManagedObjectContextPTPNotificationDelegate> ptpNotificationDelegate;              //@synthesize ptpNotificationDelegate=_ptpNotificationDelegate - In the implementation block
@property (assign,nonatomic) char isBackingALAssetsLibrary;                                                          //@synthesize isBackingALAssetsLibrary=_isBackingALAssetsLibrary - In the implementation block
+(id)managedObjectModel;
+(char)storeIsOldEnough;
+(char)databaseIsMissing;
+(id)contextForPhotoLibrary:(id)arg1 name:(const char*)arg2 ;
+(id)sharedPersistentStoreCoordinator;
+(void)configurePersistentStoreCoordinator:(id)arg1 ;
+(void)_getStoreURL:(id*)arg1 options:(id*)arg2 forFileURL:(id)arg3 enableNotifications:(char)arg4 ;
+(id)databasePath;
+(char)moveStoreFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3 ;
+(void)recordVersion:(int)arg1 forStore:(id)arg2 extraMetadata:(id)arg3 ;
+(char)useModelMigratorToCreateDatabase;
+(void)_getStoreURL:(id*)arg1 options:(id*)arg2 enableNotifications:(char)arg3 ;
+(char)_openAndMigrateStoreWithURL:(id)arg1 options:(id)arg2 coordinator:(id)arg3 forceSourceModelVersion:(id)arg4 ;
+(char)_rebuildAndRetryPersistentStoreWithURL:(id)arg1 options:(id)arg2 coordinator:(id)arg3 forced:(char)arg4 ;
+(id)managedObjectModelURL;
+(char)canMergeRemoteChanges;
+(void)__prepareEntityPropertyLookups;
+(id)_indexesByAttributeNamesByEntityNames;
+(unsigned long long)_indexValueForPropertyNames:(id)arg1 entityName:(id)arg2 indexesByPropertyNamesByEntityNames:(id)arg3 ;
+(id)_attributeNamesByIndexByEntityNames;
+(id)_propertyNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2 propertyNamesByIndexByEntityNames:(id)arg3 ;
+(id)_indexesByRelationshipNamesByEntityNames;
+(id)_relationshipNamesByIndexByEntityNames;
+(unsigned long long)indexValueForAttributeNames:(id)arg1 entity:(id)arg2 ;
+(unsigned long long)indexValueForRelationshipNames:(id)arg1 entity:(id)arg2 ;
+(void)mergeChangesFromRemoteContextSave:(id)arg1 intoAllContextsNotIdenticalTo:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(id)allContextsNotIdenticalTo:(void*)arg1 ;
+(char)_isAssetLibraryFetchingAlbum:(id)arg1 ;
+(char)assetsLibraryLoggingEnabled;
+(id)contextForDatabaseCreation:(const char*)arg1 ;
+(void)moveOldStoreAside;
+(char)hasAtLeastOneAsset;
+(char)hasConfiguredPhotoLibrary;
+(void)getStoreURL:(id*)arg1 ;
+(id)attributeNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2 ;
+(id)relationshipNamesForIndexValues:(unsigned long long)arg1 entity:(id)arg2 ;
+(void)delayedMomentDataFromChangeHubEvent:(id)arg1 insertsAndUpdates:(id*)arg2 deletes:(id*)arg3 ;
+(void)delayedCloudFeedDataFromChangeHubEvent:(id)arg1 albumUpdates:(id*)arg2 assetInserts:(id*)arg3 assetUpdates:(id*)arg4 commentInserts:(id*)arg5 invitationRecordUpdates:(id*)arg6 deletionEntries:(id*)arg7 ;
+(void)delayedDupeAnalysisDataFromChangeHubEvent:(id)arg1 normalInserts:(id*)arg2 cloudInserts:(id*)arg3 ;
+(void)delayedAssetsForFileSystemPersistencyUpdatesFromChangeHubEvent:(id)arg1 assetUpdates:(id*)arg2 ;
+(void)delayedSearchIndexUpdatesFromChangeHubEvent:(id)arg1 updates:(id*)arg2 ;
+(void)delayedAlbumCountUpdatesFromChangeHubEvent:(id)arg1 countUpdates:(id*)arg2 ;
+(void)mergeIntoAllContextsChangesFromRemoteContextSave:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
+(void)handleUnknownMergeEvent;
-(void)dealloc;
-(char)save:(id*)arg1 ;
-(id)executeFetchRequest:(id)arg1 error:(id*)arg2 ;
-(unsigned)countForFetchRequest:(id)arg1 error:(id*)arg2 ;
-(char)hasMetadataChanges;
-(void)setHasMetadataChanges:(char)arg1 ;
-(char)isUserInterfaceContext;
-(id)existingObjectWithID:(id)arg1 error:(id*)arg2 ;
-(PLPhotoLibrary *)photoLibrary;
-(id)globalValueForKey:(id)arg1 ;
-(void)setGlobalValue:(id)arg1 forKey:(id)arg2 ;
-(void)setIsLoadingPhotoLibrary:(char)arg1 ;
-(void)withDispatchGroup:(id)arg1 performBlock:(/*^block*/id)arg2 ;
-(char)isReadOnly;
-(char)obtainPermanentIDsForObjects:(id)arg1 error:(id*)arg2 ;
-(void)setPhotoLibrary:(PLPhotoLibrary *)arg1 ;
-(void)setChangeSource:(int)arg1 ;
-(char)mergingChanges;
-(void)recordAlbumForCloudDeletion:(id)arg1 ;
-(void)recordAlbumCountUpdate:(id)arg1 ;
-(void)recordAlbumForSearchIndexUpdate:(id)arg1 ;
-(void)recordAssetForMomentUpdate:(id)arg1 ;
-(void)recordAssetForCloudFeedUpdate:(id)arg1 ;
-(void)recordAssetForDupeAnalysis:(id)arg1 ;
-(void)recordAvalancheUUIDForUpdate:(id)arg1 ;
-(void)recordAssetForSearchIndexUpdate:(id)arg1 ;
-(void)recordAssetForCloudDeletion:(id)arg1 ;
-(void)registerFilesystemDeletionInfo:(id)arg1 ;
-(void)recordAssetForAlbumCountUpdate:(id)arg1 ;
-(id)initWithConcurrencyType:(unsigned)arg1 useSharedPersistentStoreCoordinator:(char)arg2 ;
-(void)connectToChangeHub;
-(void)setupLocalChangeNotifications;
-(void)tearDownLocalChangeNotifications;
-(void)setPtpNotificationDelegate:(id<PLManagedObjectContextPTPNotificationDelegate>)arg1 ;
-(void)setDelayedDeletions:(PLDelayedFiledSystemDeletions *)arg1 ;
-(void)disconnectFromChangeHub;
-(void)_informPTPDelegateAboutChangesFromRemoteContextSaveNotification:(id)arg1 ;
-(char)suspendClientServerTransactions;
-(PLDelayedFiledSystemDeletions *)delayedDeletions;
-(char)_isValidDelete:(id)arg1 ;
-(void)_recordStreamAssetForDupeAnalyzis:(id)arg1 ;
-(void)_recordNormalAssetForDupeAnalyzis:(id)arg1 ;
-(void)_recordManagedObjectUUID:(id)arg1 forSearchIndexUpdateKey:(id)arg2 ;
-(void)_recordAssetUUIDForSearchIndexUpdate:(id)arg1 isInsert:(char)arg2 ;
-(void)_recordAlbumUUIDForSearchIndexUpdate:(id)arg1 isInsert:(char)arg2 ;
-(char)isBackingALAssetsLibrary;
-(char)_tooManyAssetChangesToHandle:(unsigned)arg1 ;
-(id)pl_fetchObjectsWithIDs:(id)arg1 ;
-(void)_mergeChangesFromDidSaveDictionary:(id)arg1 usingObjectIDs:(char)arg2 ;
-(id<PLManagedObjectContextPTPNotificationDelegate>)ptpNotificationDelegate;
-(void)_notifyALAssetsLibraryWithChanges:(id)arg1 usingObjectIDs:(char)arg2 ;
-(void)_getInsertedIDs:(id)arg1 deletedIDs:(id)arg2 changedIDs:(id)arg3 ofEntityKind:(id)arg4 fromRemoteContextDidSaveNotification:(id)arg5 ;
-(void)_contextObjectsDidChange:(id)arg1 ;
-(int)context:(id)arg1 shouldHandleInaccessibleFault:(id)arg2 forObjectID:(id)arg3 andTrigger:(id)arg4 ;
-(void)recordManagedObjectWillSave:(id)arg1 ;
-(void)getAndClearUpdatedObjectsAttributes:(id*)arg1 relationships:(id*)arg2 ;
-(void)getDelayedMomentInsertsAndUpdates:(id*)arg1 deletes:(id*)arg2 ;
-(void)appendDelayedMomentDataToXPCMessage:(id)arg1 ;
-(void)recordAlbumForCloudFeedUpdate:(id)arg1 ;
-(void)recordCommentForCloudFeedUpdate:(id)arg1 ;
-(void)recordInvitationRecordForCloudFeedUpdate:(id)arg1 ;
-(void)getDelayedCloudFeedAlbumUpdates:(id*)arg1 assetInserts:(id*)arg2 assetUpdates:(id*)arg3 commentInserts:(id*)arg4 invitationRecordUpdates:(id*)arg5 deletionEntries:(id*)arg6 ;
-(void)appendDelayedCloudFeedDataToXPCMessage:(id)arg1 ;
-(void)getDelayedDupeAnalysisNormalInserts:(id*)arg1 cloudInserts:(id*)arg2 ;
-(void)appendDelayedDupeAnalysisToXPCMessage:(id)arg1 ;
-(void)recordAssetForFileSystemPersistencyUpdate:(id)arg1 ;
-(void)appendDelayedAssetsForFileSystemPersistencyUpdate:(id)arg1 ;
-(void)getDelayedAssetsForFilesystemPersistencyUpdates:(id*)arg1 ;
-(void)recordPersonForSearchIndexUpdate:(id)arg1 ;
-(void)recordPersonReferenceForSearchIndexUpdate:(id)arg1 ;
-(void)recordAdditionalAssetAttributesForSearchIndexUpdate:(id)arg1 ;
-(void)appendDelayedSearchIndexUpdatesToXPCMessage:(id)arg1 ;
-(void)getDelayedSearchIndexUpdates:(id*)arg1 ;
-(id)getAndClearRecordedAvalancheUUIDsForUpdate;
-(id)getAndClearRecordedAssetForCloudDeletion;
-(id)getAndClearRecordedAlbumForCloudDeletion;
-(void)getDelayedAlbumCountUpdates:(id*)arg1 ;
-(void)appendDelayedAlbumCountUpdatesToXPCMessage:(id)arg1 ;
-(id)pl_fetchObjectsWithIDs:(id)arg1 rootEntity:(id)arg2 ;
-(NSObject*<OS_xpc_object>)changeHubConnection;
-(void)setChangeHubConnection:(NSObject*<OS_xpc_object>)arg1 ;
-(char)savingDuringMerge;
-(void)setSuspendClientServerTransactions:(char)arg1 ;
-(int)changeSource;
-(char)regenerateVideoThumbnails;
-(void)setRegenerateVideoThumbnails:(char)arg1 ;
-(char)isInitializingSingletons;
-(void)setIsInitializingSingletons:(char)arg1 ;
-(char)isLoadingPhotoLibrary;
-(void)setIsBackingALAssetsLibrary:(char)arg1 ;
@end

