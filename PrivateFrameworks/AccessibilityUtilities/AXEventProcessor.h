/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:39:21 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSString, NSThread, NSMutableArray, NSArray;

@interface AXEventProcessor : NSObject {

	char _shouldRunHIDReceiveThreadRunloop;
	char _shouldNotifyUserEventOccurred;
	char _ignoreAllHIDEvents;
	char _ignoreAllSystemEvents;
	char _handlingHIDEvents;
	char _handlingSystemEvents;
	NSString* _HIDEventTapIdentifier;
	int _HIDEventTapPriority;
	NSThread* _HIDEventReceiveThread;
	/*^block*/id _HIDEventHandler;
	NSString* _systemEventTapIdentifier;
	int _systemEventTapPriority;
	/*^block*/id _systemEventHandler;
	NSMutableArray* _hidActualEventTapEnabledReasons;
	NSMutableArray* _systemActualEventTapEnabledReasons;

}

@property (assign,nonatomic) char shouldNotifyUserEventOccurred;                                   //@synthesize shouldNotifyUserEventOccurred=_shouldNotifyUserEventOccurred - In the implementation block
@property (nonatomic,retain) NSString * HIDEventTapIdentifier;                                     //@synthesize HIDEventTapIdentifier=_HIDEventTapIdentifier - In the implementation block
@property (assign,nonatomic) int HIDEventTapPriority;                                              //@synthesize HIDEventTapPriority=_HIDEventTapPriority - In the implementation block
@property (nonatomic,retain) NSThread * HIDEventReceiveThread;                                     //@synthesize HIDEventReceiveThread=_HIDEventReceiveThread - In the implementation block
@property (nonatomic,copy) id HIDEventHandler;                                                     //@synthesize HIDEventHandler=_HIDEventHandler - In the implementation block
@property (assign,nonatomic) char ignoreAllHIDEvents;                                              //@synthesize ignoreAllHIDEvents=_ignoreAllHIDEvents - In the implementation block
@property (nonatomic,readonly) NSArray * hidEventTapEnabledReasons; 
@property (nonatomic,retain) NSString * systemEventTapIdentifier;                                  //@synthesize systemEventTapIdentifier=_systemEventTapIdentifier - In the implementation block
@property (assign,nonatomic) int systemEventTapPriority;                                           //@synthesize systemEventTapPriority=_systemEventTapPriority - In the implementation block
@property (nonatomic,copy) id systemEventHandler;                                                  //@synthesize systemEventHandler=_systemEventHandler - In the implementation block
@property (assign,nonatomic) char ignoreAllSystemEvents;                                           //@synthesize ignoreAllSystemEvents=_ignoreAllSystemEvents - In the implementation block
@property (nonatomic,readonly) NSArray * systemEventTapEnabledReasons; 
@property (assign,getter=isHandlingHIDEvents,nonatomic) char handlingHIDEvents;                    //@synthesize handlingHIDEvents=_handlingHIDEvents - In the implementation block
@property (nonatomic,retain) NSMutableArray * hidActualEventTapEnabledReasons;                     //@synthesize hidActualEventTapEnabledReasons=_hidActualEventTapEnabledReasons - In the implementation block
@property (assign,getter=isHandlingSystemEvents,nonatomic) char handlingSystemEvents;              //@synthesize handlingSystemEvents=_handlingSystemEvents - In the implementation block
@property (nonatomic,retain) NSMutableArray * systemActualEventTapEnabledReasons;                  //@synthesize systemActualEventTapEnabledReasons=_systemActualEventTapEnabledReasons - In the implementation block
-(void)dealloc;
-(void)setHIDEventTapIdentifier:(NSString *)arg1 ;
-(void)setHIDEventTapPriority:(int)arg1 ;
-(void)setSystemEventTapIdentifier:(NSString *)arg1 ;
-(void)setSystemEventTapPriority:(int)arg1 ;
-(void)setHidActualEventTapEnabledReasons:(NSMutableArray *)arg1 ;
-(void)setSystemActualEventTapEnabledReasons:(NSMutableArray *)arg1 ;
-(void)_runHIDEventReceiveThread;
-(void)setHIDEventHandler:(id)arg1 ;
-(void)setSystemEventHandler:(id)arg1 ;
-(void)setHIDEventReceiveThread:(NSThread *)arg1 ;
-(NSMutableArray *)hidActualEventTapEnabledReasons;
-(NSString *)HIDEventTapIdentifier;
-(char)isHandlingHIDEvents;
-(void)setHandlingHIDEvents:(char)arg1 ;
-(void)_installHIDEventFilter;
-(void)_uninstallHIDEventFilter;
-(int)HIDEventTapPriority;
-(NSMutableArray *)systemActualEventTapEnabledReasons;
-(NSString *)systemEventTapIdentifier;
-(char)isHandlingSystemEvents;
-(void)setHandlingSystemEvents:(char)arg1 ;
-(void)_installSystemEventFilter;
-(void)_uninstallSystemEventFilter;
-(int)systemEventTapPriority;
-(char)shouldNotifyUserEventOccurred;
-(id)HIDEventHandler;
-(id)systemEventHandler;
-(id)initWithHIDTapIdentifier:(id)arg1 HIDEventTapPriority:(int)arg2 systemEventTapIdentifier:(id)arg3 systemEventTapPriority:(int)arg4 ;
-(NSArray *)hidEventTapEnabledReasons;
-(void)beginHandlingHIDEventsForReason:(id)arg1 ;
-(void)endHandlingHIDEventsForReason:(id)arg1 ;
-(void)raiseHIDEventTapPriorityToMaximum;
-(void)restoreHIDEventTapPriorityToDefault;
-(NSArray *)systemEventTapEnabledReasons;
-(void)beginHandlingSystemEventsForReason:(id)arg1 ;
-(void)endHandlingSystemEventsForReason:(id)arg1 ;
-(void)raiseSystemEventTapPriorityToMaximum;
-(void)restoreSystemEventTapPriorityToDefault;
-(void)setShouldNotifyUserEventOccurred:(char)arg1 ;
-(NSThread *)HIDEventReceiveThread;
-(char)ignoreAllHIDEvents;
-(void)setIgnoreAllHIDEvents:(char)arg1 ;
-(char)ignoreAllSystemEvents;
-(void)setIgnoreAllSystemEvents:(char)arg1 ;
@end

