/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:20 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/RemoteUI.framework/RemoteUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <RemoteUI/RUILoaderDelegate.h>
#import <RemoteUI/RUIObjectModelDelegate.h>
#import <RemoteUI/RUIParserDelegate.h>

@protocol RemoteUIControllerDelegate;
@class UINavigationController, NSMutableArray, NSMutableDictionary, RUIPage, RUILoader, NSString;

@interface RemoteUIController : NSObject <RUILoaderDelegate, RUIObjectModelDelegate, RUIParserDelegate> {

	UINavigationController* _modalNavigationController;
	NSMutableArray* _objectModels;
	NSMutableArray* _modalObjectModels;
	NSMutableDictionary* _elementChangeHandlers;
	RUIPage* _pageOriginatingLoad;
	UINavigationController* _navigationController;
	RUILoader* _loader;
	NSString* _userAgentString;
	id<RemoteUIControllerDelegate> _delegate;
	/*^block*/id _loadCompletion;

}

@property (assign,nonatomic,__weak) UINavigationController * navigationController;              //@synthesize navigationController=_navigationController - In the implementation block
@property (nonatomic,retain) RUILoader * loader;                                                //@synthesize loader=_loader - In the implementation block
@property (nonatomic,copy) NSString * userAgentString;                                          //@synthesize userAgentString=_userAgentString - In the implementation block
@property (assign,nonatomic,__weak) id<RemoteUIControllerDelegate> delegate;                    //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) id loadCompletion;                                                   //@synthesize loadCompletion=_loadCompletion - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setHandlerForElementName:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)loadURL:(id)arg1 postBody:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)dealloc;
-(void)setDelegate:(id<RemoteUIControllerDelegate>)arg1 ;
-(id)init;
-(id<RemoteUIControllerDelegate>)delegate;
-(UINavigationController *)navigationController;
-(void)loadRequest:(id)arg1 ;
-(void)setNavigationController:(UINavigationController *)arg1 ;
-(void)removeHandlerForKey:(id)arg1 ;
-(void)loadRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setLoader:(RUILoader *)arg1 ;
-(void)pushObjectModel:(id)arg1 animated:(char)arg2 ;
-(void)loadURL:(id)arg1 postBody:(id)arg2 ;
-(id)popObjectModelAnimated:(char)arg1 ;
-(void)loader:(id)arg1 didFailWithError:(id)arg2 ;
-(void)loader:(id)arg1 receivedObjectModel:(id)arg2 actionSignal:(int)arg3 ;
-(void)loader:(id)arg1 didReceiveHTTPResponse:(id)arg2 ;
-(id)loader:(id)arg1 connection:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 ;
-(id)parentViewControllerForObjectModel:(id)arg1 ;
-(id)viewControllerForAlertPresentation;
-(void)objectModel:(id)arg1 didNavigateBackFromController:(id)arg2 withGesture:(char)arg3 ;
-(void)objectModel:(id)arg1 elementDidChange:(id)arg2 ;
-(void)objectModel:(id)arg1 pressedLink:(id)arg2 httpMethod:(id)arg3 completion:(/*^block*/id)arg4 ;
-(unsigned)supportedInterfaceOrientationsForObjectModel:(id)arg1 page:(id)arg2 ;
-(NSString *)userAgentString;
-(void)setUserAgentString:(NSString *)arg1 ;
-(void)setLoadCompletion:(id)arg1 ;
-(void)_willPresentObjectModel:(id)arg1 modally:(char)arg2 ;
-(void)_didRemoveObjectModel:(id)arg1 ;
-(void)_setHandlerWithKey:(id)arg1 forElementsMatching:(/*^block*/id)arg2 handler:(/*^block*/id)arg3 ;
-(id)setHandlerForElementsMatching:(/*^block*/id)arg1 handler:(/*^block*/id)arg2 ;
-(id)loadCompletion;
-(id)parser:(id)arg1 createPageWithName:(id)arg2 attributes:(id)arg3 ;
-(void)loadData:(id)arg1 baseURL:(id)arg2 ;
-(id)dismissObjectModelsAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(void)setHandlerForButtonsMatching:(/*^block*/id)arg1 handler:(/*^block*/id)arg2 ;
-(void)setHandlerForButtonName:(id)arg1 handler:(/*^block*/id)arg2 ;
-(RUILoader *)loader;
@end

