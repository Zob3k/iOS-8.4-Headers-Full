/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:05 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <PowerlogCore/PowerlogCore-Structs.h>
@class PLSQLiteConnection, PLKQueue, PLNSTimerOperatorComposition, PLNSNotificationOperatorComposition, PLCFNotificationOperatorComposition, PLXPCResponderOperatorComposition, PLStorageOperator, NSMutableSet, PLStorageCache, NSMutableDictionary, NSString;

@interface PLCoreStorage : NSObject {

	char _storageLocked;
	char _storageReady;
	PLSQLiteConnection* _connection;
	PLKQueue* _profileDefaultsKQueue;
	PLKQueue* _crashReporterKQueue;
	PLNSTimerOperatorComposition* _periodicCheckpointTimer;
	PLNSTimerOperatorComposition* _dailyTaskTimer;
	PLNSNotificationOperatorComposition* _dailyTaskNotification;
	PLCFNotificationOperatorComposition* _keybagFirstUnlockNotification;
	PLXPCResponderOperatorComposition* _safeFileResponder;
	PLStorageOperator* _storageOperator;
	NSMutableSet* _safeCopyInProgress;
	PLStorageCache* _lastEntryCache;
	NSMutableDictionary* _processIDCache;
	NSString* _mainDBInCRFolderUUIDString;

}

@property (assign,nonatomic) char storageLocked;                                                     //@synthesize storageLocked=_storageLocked - In the implementation block
@property (retain) PLSQLiteConnection * connection;                                                  //@synthesize connection=_connection - In the implementation block
@property (assign) char storageReady;                                                                //@synthesize storageReady=_storageReady - In the implementation block
@property (retain) PLKQueue * profileDefaultsKQueue;                                                 //@synthesize profileDefaultsKQueue=_profileDefaultsKQueue - In the implementation block
@property (retain) PLKQueue * crashReporterKQueue;                                                   //@synthesize crashReporterKQueue=_crashReporterKQueue - In the implementation block
@property (retain) PLNSTimerOperatorComposition * periodicCheckpointTimer;                           //@synthesize periodicCheckpointTimer=_periodicCheckpointTimer - In the implementation block
@property (retain) PLNSTimerOperatorComposition * dailyTaskTimer;                                    //@synthesize dailyTaskTimer=_dailyTaskTimer - In the implementation block
@property (retain) PLNSNotificationOperatorComposition * dailyTaskNotification;                      //@synthesize dailyTaskNotification=_dailyTaskNotification - In the implementation block
@property (retain) PLCFNotificationOperatorComposition * keybagFirstUnlockNotification;              //@synthesize keybagFirstUnlockNotification=_keybagFirstUnlockNotification - In the implementation block
@property (retain) PLXPCResponderOperatorComposition * safeFileResponder;                            //@synthesize safeFileResponder=_safeFileResponder - In the implementation block
@property (retain) PLStorageOperator * storageOperator;                                              //@synthesize storageOperator=_storageOperator - In the implementation block
@property (retain) NSMutableSet * safeCopyInProgress;                                                //@synthesize safeCopyInProgress=_safeCopyInProgress - In the implementation block
@property (retain) PLStorageCache * lastEntryCache;                                                  //@synthesize lastEntryCache=_lastEntryCache - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * processIDCache;                                   //@synthesize processIDCache=_processIDCache - In the implementation block
@property (nonatomic,retain) NSString * mainDBInCRFolderUUIDString;                                  //@synthesize mainDBInCRFolderUUIDString=_mainDBInCRFolderUUIDString - In the implementation block
+(id)storageQueueNameForClass:(id)arg1 ;
+(id)mainDBinCRFolderPath;
+(id)allOperatorTableFiltersForRolloverDate:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(PLSQLiteConnection *)connection;
-(void)setConnection:(PLSQLiteConnection *)arg1 ;
-(void)startStorage;
-(void)mergeTempDBFile;
-(void)stopStorage;
-(id)entryIntervalsForEntryKey:(id)arg1 inTimeRange:(PLTimeIntervalRange)arg2 withIntervalStartKey:(id)arg3 withIntervalEndKey:(id)arg4 withFilters:(id)arg5 ;
-(void)setupStorageForOperator:(id)arg1 ;
-(PLStorageCache *)lastEntryCache;
-(void)setLastEntryCache:(PLStorageCache *)arg1 ;
-(PLStorageOperator *)storageOperator;
-(void)setStorageOperator:(PLStorageOperator *)arg1 ;
-(char)createAndChownDirectory:(id)arg1 ;
-(char)setFileProtectionForPath:(id)arg1 withLevel:(id)arg2 ;
-(void)cleanupTmp;
-(void)removeOldPowerlogFiles;
-(short)verifySchemaVersionOfTable:(id)arg1 matchesExpectedVersion:(double)arg2 ;
-(void)handleSchemaMismatchForTable:(id)arg1 expectedVersion:(double)arg2 schemaMatch:(short)arg3 ;
-(PLKQueue *)crashReporterKQueue;
-(void)resetLinksInCRFolder;
-(void)setCrashReporterKQueue:(PLKQueue *)arg1 ;
-(void)deleteOldCRPowerlogLink;
-(void)deleteAllLinksInCRFolder;
-(void)moveOldAnonFilesToCR;
-(void)setProfileDefaultsKQueue:(PLKQueue *)arg1 ;
-(PLKQueue *)profileDefaultsKQueue;
-(void)setPeriodicCheckpointTimer:(PLNSTimerOperatorComposition *)arg1 ;
-(void)setStorageReady:(char)arg1 ;
-(void)setMainDBInCRFolderUUIDString:(NSString *)arg1 ;
-(void)setSafeFileResponder:(PLXPCResponderOperatorComposition *)arg1 ;
-(NSString *)mainDBInCRFolderUUIDString;
-(void)linkMainDBToCRFolderWithUUID:(id)arg1 ;
-(NSMutableSet *)safeCopyInProgress;
-(void)setupStorageForEntryKey:(id)arg1 ;
-(void)setupCoveringIndexOnTable:(id)arg1 withColumns:(id)arg2 ;
-(void)setupTableName:(id)arg1 withEntryKeyConfig:(id)arg2 withKeyOrder:(id)arg3 isDynamic:(char)arg4 ;
-(void)setupArrayForTableName:(id)arg1 forColumnNamed:(id)arg2 withValueType:(short)arg3 ;
-(void)dispatchAsyncForEntrykey:(id)arg1 withBlock:(/*^block*/id)arg2 ;
-(void)dispatchSyncForEntrykey:(id)arg1 withBlock:(/*^block*/id)arg2 ;
-(void)writeAggregateEntry:(id)arg1 ;
-(void)setAllNullValuesForEntryKey:(id)arg1 forKey:(id)arg2 toValue:(id)arg3 withFilters:(id)arg4 ;
-(void)deleteEntryForKey:(id)arg1 WithRowID:(long long)arg2 ;
-(void)deleteAllEntriesForKey:(id)arg1 withFilters:(id)arg2 ;
-(NSMutableDictionary *)processIDCache;
-(void)removeProcessIDCacheForPidNumber:(id)arg1 ;
-(void)setupStorageForOperatorName:(id)arg1 ;
-(void)setupStorageForOperatorClass:(Class)arg1 ;
-(void)removeStorageForEntryKey:(id)arg1 ;
-(void)maintainAggregateStorageForEntryKey:(id)arg1 ;
-(void)writeEntries:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)writeEntry:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(long long)blockingWriteEntry:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)updateEntry:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(id)entriesForKey:(id)arg1 withIDs:(id)arg2 ;
-(void)removeProcessIDCacheForPid:(int)arg1 ;
-(id)whiteBlackListForOperatorName:(id)arg1 ;
-(void)setStorageLocked:(char)arg1 ;
-(char)storageReady;
-(PLNSTimerOperatorComposition *)periodicCheckpointTimer;
-(PLCFNotificationOperatorComposition *)keybagFirstUnlockNotification;
-(void)setKeybagFirstUnlockNotification:(PLCFNotificationOperatorComposition *)arg1 ;
-(PLXPCResponderOperatorComposition *)safeFileResponder;
-(void)setSafeCopyInProgress:(NSMutableSet *)arg1 ;
-(id)powerModelForOperatorName:(id)arg1 ;
-(id)lastEntryForKey:(id)arg1 ;
-(void)initOperatorDependancies;
-(id)aggregateEntriesForKey:(id)arg1 withBucketLength:(double)arg2 inTimeIntervalRange:(PLTimeIntervalRange)arg3 ;
-(id)lastEntriesForKey:(id)arg1 count:(long long)arg2 withFilters:(id)arg3 ;
-(id)entryForKey:(id)arg1 withID:(long long)arg2 ;
-(id)portMappingEntryForPort:(id)arg1 ;
-(id)entriesForKey:(id)arg1 withProperties:(id)arg2 ;
-(id)processIDEntryForPid:(int)arg1 ;
-(id)lastEntryForKey:(id)arg1 withFilters:(id)arg2 ;
-(id)lookupValueForEntryKey:(id)arg1 forKey:(id)arg2 forNumberValue:(long)arg3 ;
-(void)setLookupValueForEntryKey:(id)arg1 forKey:(id)arg2 forNumberValue:(long)arg3 withStringValue:(id)arg4 ;
-(char)storageLocked;
-(void)deleteAllEntriesForKey:(id)arg1 ;
-(id)entriesForKey:(id)arg1 startingFromRowID:(long long)arg2 count:(long long)arg3 withFilters:(id)arg4 ;
-(void)cacheProcessIDEntry:(id)arg1 ;
-(void)setProcessIDCache:(NSMutableDictionary *)arg1 ;
-(void)enumerateProcessIDCacheWithBlock:(/*^block*/id)arg1 ;
-(id)entriesForKey:(id)arg1 inTimeRange:(PLTimeIntervalRange)arg2 withFilters:(id)arg3 ;
-(PLNSNotificationOperatorComposition *)dailyTaskNotification;
-(void)setDailyTaskNotification:(PLNSNotificationOperatorComposition *)arg1 ;
-(void)deleteAllEntriesForKey:(id)arg1 beforeTimestamp:(id)arg2 ;
-(id)entriesForKey:(id)arg1 before:(char)arg2 timeInterval:(double)arg3 count:(long long)arg4 withFilters:(id)arg5 ;
-(void)deleteAllEntriesForKey:(id)arg1 beforeTimestamp:(id)arg2 withFilters:(id)arg3 ;
-(id)accountingBoundariesInTimeRange:(PLTimeIntervalRange)arg1 forAccountingGroups:(id)arg2 ;
-(id)entriesForKey:(id)arg1 inTimeRange:(PLTimeIntervalRange)arg2 withCountOfEntriesBefore:(long long)arg3 withCountOfEntriesAfter:(long long)arg4 withFilters:(id)arg5 ;
-(void)dailyTasks;
-(void)loadDynamicValuesIntoEntry:(id)arg1 ;
-(void)loadLookupTableValuesIntoEntry:(id)arg1 ;
-(void)deleteEntry:(id)arg1 ;
-(id)entriesForKey:(id)arg1 startingFromRowID:(long long)arg2 endingWithRowID:(long long)arg3 withFilters:(id)arg4 ;
-(void)releaseMemory;
-(void)setDailyTaskTimer:(PLNSTimerOperatorComposition *)arg1 ;
-(PLNSTimerOperatorComposition *)dailyTaskTimer;
@end

