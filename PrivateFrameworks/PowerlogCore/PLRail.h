/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:06 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PowerlogCore/PowerlogCore-Structs.h>
#import <PowerlogCore/PLOperator.h>

@class NSString, NSArray, PLEntry;

@interface PLRail : PLOperator {

	char _isNegativePowerSupported;
	char _logRail;
	char _cacheOn;
	short _railDirection;
	NSString* _railName;
	NSArray* _cacheResults;
	PLEntry* _lastSnapshot;
	double _selfAdjustedSafeTimeForModeling;
	PLTimeIntervalRange _cacheTimeRange;

}

@property (retain,readonly) NSString * railName;                          //@synthesize railName=_railName - In the implementation block
@property (readonly) short railDirection;                                 //@synthesize railDirection=_railDirection - In the implementation block
@property (readonly) double selfAdjustedSafeTimeForModeling;              //@synthesize selfAdjustedSafeTimeForModeling=_selfAdjustedSafeTimeForModeling - In the implementation block
@property (readonly) char isNegativePowerSupported;                       //@synthesize isNegativePowerSupported=_isNegativePowerSupported - In the implementation block
@property (assign) char logRail;                                          //@synthesize logRail=_logRail - In the implementation block
@property (assign) char cacheOn;                                          //@synthesize cacheOn=_cacheOn - In the implementation block
@property (retain) NSArray * cacheResults;                                //@synthesize cacheResults=_cacheResults - In the implementation block
@property (assign) PLTimeIntervalRange cacheTimeRange;                    //@synthesize cacheTimeRange=_cacheTimeRange - In the implementation block
@property (nonatomic,retain) PLEntry * lastSnapshot;                      //@synthesize lastSnapshot=_lastSnapshot - In the implementation block
+(id)entryEventNoneDefinitionRail;
+(char)isSnapRail:(id)arg1 ;
+(id)getSnappedRailName:(id)arg1 ;
+(double)getEnergyInRail:(id)arg1 inTimeRange:(PLTimeIntervalRange)arg2 ;
+(id)railFromRailName:(id)arg1 ;
+(id)entryEventNoneDefinitions;
+(id)snapRailFromRailName:(id)arg1 ;
+(void)safeGuardAllRails;
-(void)setLastSnapshot:(PLEntry *)arg1 ;
-(PLEntry *)lastSnapshot;
-(void)clearCache;
-(double)timeOfLastSnapshot;
-(short)railDirection;
-(char)logRail;
-(id)trimBatchSnapShots:(id)arg1 ;
-(char)isRailPowerEqual:(double)arg1 withOtherPower:(double)arg2 ;
-(char)isNegativePowerSupported;
-(id)generateSnapshotEntry:(id)arg1 withPower:(double)arg2 ;
-(char)useCachedDataForTimeInterval:(PLTimeIntervalRange)arg1 ;
-(NSArray *)cacheResults;
-(id)getSnapshotsInRange:(PLTimeIntervalRange)arg1 ;
-(char)cacheOn;
-(PLTimeIntervalRange)cacheTimeRange;
-(void)logCacheStats:(id)arg1 ;
-(void)setCacheResults:(NSArray *)arg1 ;
-(void)setCacheTimeRange:(PLTimeIntervalRange)arg1 ;
-(void)setCacheOn:(char)arg1 ;
-(id)initWithName:(id)arg1 withRailDirection:(short)arg2 withNegativePowerSupport:(char)arg3 isLoggingOnByDefault:(char)arg4 ;
-(void)batchAddSnapshots:(id)arg1 ;
-(id)getSnapshotTimeInRange:(PLTimeIntervalRange)arg1 ;
-(void)cacheRailDataForTimeInterval:(PLTimeIntervalRange)arg1 ;
-(double)selfAdjustedSafeTimeForModeling;
-(void)setLogRail:(char)arg1 ;
-(void)addSnapshot:(id)arg1 withPower:(double)arg2 ;
-(void)initOperatorDependancies;
-(id)trimmingConditionsForRolloverAtDate:(id)arg1 ;
-(NSString *)railName;
-(double)safeTimeForModeling;
-(double)getEnergyInRange:(PLTimeIntervalRange)arg1 ;
@end

