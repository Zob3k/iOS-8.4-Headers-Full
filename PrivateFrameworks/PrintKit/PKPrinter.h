/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:12 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PrintKit.framework/PrintKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <PrintKit/PrintKit-Structs.h>
@class NSString, NSDictionary, NSMutableDictionary, NSArray, PKPaperList, NSNumber, NSURL;

@interface PKPrinter : NSObject {

	NSString* name;
	int type;
	int accessState;
	NSDictionary* printInfoSupported;
	http_s* job_http;
	NSMutableDictionary* privateData;
	NSMutableDictionary* specialFeedOrientation;
	NSArray* printScalingSupported;
	NSArray* mandatoryJobAttributes;
	NSString* quotaManagementURL;
	int maxPDFKBytes;
	int maxJPEGKBytes;
	int maxJPEGXDimension;
	int maxJPEGYDimension;
	int maxCopies;
	int preferred_landscape;
	int printerStateReasons;
	char isLocal;
	char hasIdentifyPrinterOp;
	char connectionShouldNotBeTrusted;
	char isFromMCProfile;
	int kind;
	PKPaperList* _paperList;

}

@property (assign) int accessState; 
@property (retain) NSDictionary * TXTRecord; 
@property (retain) NSString * hostname; 
@property (retain) NSNumber * port; 
@property (retain,readonly) NSString * scheme; 
@property (readonly) NSString * name; 
@property (readonly) NSURL * printerURL; 
@property (readonly) int kind; 
@property (readonly) int jobTypesSupported; 
@property (readonly) int type; 
@property (readonly) int accessState; 
@property (readonly) char hasPrintInfoSupported; 
@property (readonly) NSDictionary * printInfoSupported; 
@property (readonly) char isAdobeRGBSupported; 
@property (assign) char isLocal; 
@property (assign) char isFromMCProfile; 
@property (readonly) char isIPPS; 
@property (readonly) NSString * uuid; 
@property (readonly) char hasIdentifyPrinterOp; 
@property (readonly) char needsSetup; 
@property (readonly) char setupSupportsPasswordScope; 
@property (retain) PKPaperList * paperList;                          //@synthesize paperList=_paperList - In the implementation block
+(id)printerWithName:(id)arg1 discoveryTimeout:(double)arg2 ;
+(char)printerLookupWithName:(id)arg1 andTimeout:(double)arg2 ;
+(id)printerWithName:(id)arg1 ;
+(char)urfIsOptional;
+(id)requiredPDL;
+(id)hardcodedURIs;
+(id)nameForHardcodedURI:(id)arg1 ;
+(ipp_s*)getAttributes:(const char**)arg1 count:(int)arg2 fromURI:(id)arg3 ;
-(char)resolveWithTimeout:(int)arg1 ;
-(void)resolve;
-(char)isLocal;
-(void)setIsLocal:(char)arg1 ;
-(void)dealloc;
-(id)description;
-(NSString *)name;
-(NSString *)scheme;
-(int)type;
-(id)location;
-(NSURL *)printerURL;
-(id)displayName;
-(int)jobTypesSupported;
-(id)makeAndModel;
-(NSDictionary *)printInfoSupported;
-(char)hasPrintInfoSupported;
-(id)papersForPhotoWithSize:(CGSize)arg1 ;
-(id)papersForDocumentWithSize:(CGSize)arg1 andDuplex:(char)arg2 ;
-(char)knowsReadyPaperList;
-(PKPaperList *)paperList;
-(id)localizedPrinterWarnings;
-(void)cancelUnlock;
-(int)kind;
-(NSString *)uuid;
-(int)accessState;
-(char)needsSetup;
-(void)unlockWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)availableRollPapersPreferBorderless:(char)arg1 ;
-(char)isPaperReady:(id)arg1 ;
-(id)matchedPaper:(id)arg1 preferBorderless:(char)arg2 withDuplexMode:(id)arg3 didMatch:(char*)arg4 ;
-(int)startJob:(id)arg1 ofType:(id)arg2 ;
-(int)finishJob;
-(int)abortJob;
-(int)printURL:(id)arg1 ofType:(id)arg2 printSettings:(id)arg3 ;
-(int)sendData:(const char*)arg1 ofLength:(int)arg2 ;
-(NSNumber *)port;
-(void)validatePassCode:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(char)setupSupportsPasswordScope;
-(void)setupWithOptions:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)showPassCodeForSetupWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)localName;
-(void)setPort:(NSNumber *)arg1 ;
-(void)setHostname:(NSString *)arg1 ;
-(id)initWithName:(id)arg1 TXT:(id)arg2 ;
-(id)initWithName:(id)arg1 TXTRecord:(id)arg2 ;
-(char)isIPPS;
-(char)isBonjour;
-(void)setIsFromMCProfile:(char)arg1 ;
-(NSDictionary *)TXTRecord;
-(void)setAccessStateFromTXT;
-(id)TXTRecordWithTimeout:(int)arg1 ;
-(id)txtRecordObjectForKey:(id)arg1 ;
-(void)reconfirmWithForce:(char)arg1 ;
-(ipp_s*)getAttributes:(const char**)arg1 count:(int)arg2 ;
-(void)handlePrinterStateReasonsFromResponse:(ipp_s*)arg1 ;
-(ipp_s*)getPrinterAttributes;
-(void)doMedia2:(ipp_s*)arg1 ;
-(id)rollReadyPaperListWithContentSize:(CGSize)arg1 forPhoto:(char)arg2 ;
-(id)paperListForDuplexMode:(id)arg1 ;
-(void)setPaperList:(PKPaperList *)arg1 ;
-(int)finalizeJob:(int)arg1 ;
-(void)aggdAppsAndPrinters;
-(ipp_s*)createRequest:(id)arg1 ofType:(id)arg2 url:(id)arg3 ;
-(void)setPrivateObject:(id)arg1 forKey:(id)arg2 ;
-(id)privateObjectForKey:(id)arg1 ;
-(void)checkOperations:(ipp_s*)arg1 ;
-(int)feedOrientation:(id)arg1 ;
-(void)identifySelf;
-(char)isAdobeRGBSupported;
-(id)rollReadyPaperListWithContentSize:(CGSize)arg1 ;
-(char)isFromMCProfile;
-(char)hasIdentifyPrinterOp;
-(void)setAccessState:(int)arg1 ;
-(void)setTXTRecord:(NSDictionary *)arg1 ;
-(void)updateType;
-(NSString *)hostname;
@end

