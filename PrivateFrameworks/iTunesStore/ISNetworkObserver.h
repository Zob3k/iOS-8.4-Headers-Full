/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:43:26 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iTunesStore/iTunesStore-Structs.h>
#import <iTunesStore/SSDownloadQueueObserver.h>

@protocol OS_dispatch_queue;
@class NSString, NSObject, NSMutableSet;

@interface ISNetworkObserver : NSObject <SSDownloadQueueObserver> {

	NSString* _dataStatusIndicator;
	NSObject*<OS_dispatch_queue> _dispatchQueue;
	char _isCellularRestricted;
	double _lastNetworkTypeChangeTime;
	int _networkUsageCount;
	int _networkType;
	NSObject*<OS_dispatch_queue> _notificationQueue;
	NSMutableSet* _observedDownloadQueues;
	NSString* _operatorName;
	SCNetworkReachabilityRef _reachability;
	NSString* _registrationStatus;
	CTServerConnectionRef _telephonyServer;

}

@property (assign) int networkType; 
@property (readonly) double lastNetworkTypeChangeTime; 
@property (getter=isUsingNetwork,readonly) char usingNetwork; 
@property (readonly) char shouldShowCellularAutomaticDownloadsSwitch; 
@property (readonly) NSString * connectionTypeHeader; 
@property (getter=isWiFiEnabled,readonly) char wifiEnabled; 
@property (readonly) NSString * dataStatusIndicator; 
@property (readonly) NSString * mobileSubscriberCountryCode; 
@property (readonly) NSString * mobileSubscriberNetworkCode; 
@property (readonly) NSString * modemRegistrationStatus; 
@property (readonly) NSString * operatorName; 
@property (readonly) NSString * phoneNumber; 
@property (readonly) NSString * providerName; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
+(void)set3GEnabled:(char)arg1 ;
+(void)setAirplaneModeEnabled:(char)arg1 ;
+(void)setWiFiEnabled:(char)arg1 ;
-(char)isWiFiEnabled;
-(void)_applicationWillEnterForegroundNotification:(id)arg1 ;
-(int)networkType;
-(char)shouldShowCellularAutomaticDownloadsSwitch;
-(void)beginUsingNetwork;
-(void)endUsingNetwork;
-(char)isUsingNetwork;
-(void)dealloc;
-(id)init;
-(NSString *)phoneNumber;
-(NSString *)providerName;
-(void)_handleTelephonyNotificationWithName:(CFStringRef)arg1 userInfo:(CFDictionaryRef)arg2 ;
-(NSString *)connectionTypeHeader;
-(NSString *)operatorName;
-(void)downloadQueueNetworkUsageChanged:(id)arg1 ;
-(void)downloadQueue:(id)arg1 changedWithRemovals:(id)arg2 ;
-(double)lastNetworkTypeChangeTime;
-(int)_currentNetworkType;
-(char)_ntsIsUsingNetwork;
-(void)_postUsageChangedToValue:(char)arg1 ;
-(id)copyValueForCarrierBundleKey:(id)arg1 ;
-(id)_dataStatusIndicator;
-(void)_reloadNetworkType;
-(int)_setNetworkType:(int)arg1 ;
-(void)_postTypeChangedNotificationFromValue:(int)arg1 toValue:(int)arg2 ;
-(int)_networkTypeForReachabilityFlags:(unsigned)arg1 ;
-(int)_networkTypeFromDataIndicator:(id)arg1 ;
-(void)beginObservingDownloadQueue:(id)arg1 ;
-(void)endObservingDownloadQueue:(id)arg1 ;
-(NSString *)dataStatusIndicator;
-(char)isCellularDataEnabledForBundleIdentifier:(id)arg1 ;
-(NSString *)mobileSubscriberCountryCode;
-(NSString *)mobileSubscriberNetworkCode;
-(NSString *)modemRegistrationStatus;
-(void)_reloadCellularRestriction;
-(void)_reloadNetworkTypeWithReachabilityFlags:(unsigned)arg1 ;
-(void)reloadNetworkType;
-(void)setNetworkType:(int)arg1 ;
@end

