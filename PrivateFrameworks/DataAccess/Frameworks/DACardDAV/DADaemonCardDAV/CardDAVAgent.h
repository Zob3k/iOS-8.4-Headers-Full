/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:40:22 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACardDAV.framework/DADaemonCardDAV.bundle/DADaemonCardDAV
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <DADaemonSupport/DACoreDAVAgent.h>
#import <DADaemonCardDAV/CardDAVAddressBookURLsConsumer.h>
#import <DADaemonCardDAV/DAContactsUpdateConsumer.h>
#import <DADaemonCardDAV/DADataclassLockWatcher.h>
#import <DADaemonCardDAV/DAActionConsumer.h>
#import <DADaemonCardDAV/DAValidityCheckConsumer.h>
#import <DADaemonCardDAV/ABPredicateDelegate.h>
#import <DADaemonCardDAV/DARefreshManagerDelegate.h>
#import <DADaemonCardDAV/CardDAVFinishInitialSyncConsumer.h>
#import <DADaemonCardDAV/CardDAVMeCardUpdateConsumer.h>
#import <DADaemonCardDAV/DABabysittable.h>

@class DATrustHandler, NSMutableSet, NSMutableArray, NSLock, NSMutableDictionary, NSURL, NSString;

@interface CardDAVAgent : DACoreDAVAgent <CardDAVAddressBookURLsConsumer, DAContactsUpdateConsumer, DADataclassLockWatcher, DAActionConsumer, DAValidityCheckConsumer, ABPredicateDelegate, DARefreshManagerDelegate, CardDAVFinishInitialSyncConsumer, CardDAVMeCardUpdateConsumer, DABabysittable> {

	NSMutableSet* _currentlySyncingFolderURLs;
	NSMutableArray* _outstandingFolderRequests;
	NSLock* _folderItemSyncRequestLock;
	char _isSyncingHierarchy;
	NSMutableDictionary* _folderURLToHeldAsideGroups;
	int _matchMode;
	void* _testRecord;
	void* _matchedRecord;
	NSURL* _serverTokenRegistrationURL;
	NSMutableSet* _containerPushKeys;
	NSMutableDictionary* _folderURLToSyncInfo;
	NSMutableSet* _bulkUploadUUIDBlacklist;
	NSMutableSet* _bulkUploadHREFBlacklist;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) DATrustHandler * trustHandler; 
-(char)predicateShouldContinue:(id)arg1 ;
-(char)predicateShouldContinue:(id)arg1 afterFindingRecord:(void*)arg2 ;
-(void)startMonitoring;
-(id)initWithAccount:(id)arg1 ;
-(id)password;
-(id)waiterID;
-(id)scheduleIdentifier;
-(void)_validateAndSync:(char)arg1 ;
-(char)APSTopicHasValidPrefix:(id)arg1 ;
-(void)_appendSyncRequestsForFolders:(id)arg1 remoteChanges:(char)arg2 ;
-(int)_localIdForExternalURL:(id)arg1 inContainer:(void*)arg2 withFolderURL:(id)arg3 ;
-(void*)_copyExistingABRecordForContact:(id)arg1 inStore:(void*)arg2 ;
-(void)_handlePotential503Error:(id)arg1 ;
-(char)_updateMeCard;
-(char)_fillOutExternalUUIDForRecordType:(unsigned)arg1 localId:(int)arg2 changeType:(int)arg3 outTouchedDB:(char*)arg4 ;
-(void)_successfullyFinishedInitialSyncForFolderWithID:(id)arg1 ;
-(void)_pushInitialSyncActionsForFolderWithURL:(id)arg1 ;
-(char)_clearChangeHistoriesWithChangeIdContext:(id)arg1 pushedActions:(id)arg2 inStore:(void*)arg3 ;
-(char)_handleAction:(id)arg1 inStore:(void*)arg2 withFolderURL:(id)arg3 isInitialSync:(char)arg4 arePartialResults:(char)arg5 ;
-(void)_finishInitialSyncForFolderWithURL:(id)arg1 ;
-(char)_syncResultForFolderWithURL:(id)arg1 newTag:(id)arg2 newSyncToken:(id)arg3 actions:(id)arg4 changeIdContext:(id)arg5 isInitialSync:(char)arg6 arePartialResults:(char)arg7 ;
-(void)_addressBookSyncTask:(id)arg1 failedWithErrorCode:(int)arg2 ;
-(void)_addChangeForType:(int)arg1 changedItemId:(id)arg2 changeId:(id)arg3 addedIdsToChangeId:(id)arg4 modifiedIdsToChangeId:(id)arg5 deletedIdsToChangeId:(id)arg6 changeIdsToClear:(id)arg7 ;
-(id)_copyABActionsOfType:(unsigned)arg1 inContainer:(void*)arg2 existingActions:(id)arg3 maxImageSize:(int)arg4 maxResourceSize:(int)arg5 outHighestChangeId:(int*)arg6 outTouchedDB:(char*)arg7 ;
-(id)_copyCoalescedChangesInContainer:(void*)arg1 existingActions:(id)arg2 maxImageSize:(int)arg3 maxResourceSize:(int)arg4 changeContext:(id)arg5 outTouchedDB:(char*)arg6 ;
-(void)successfullyRetrievedAddressBookURLs;
-(void)failedToRetrieveAddressBookURLsWithError:(id)arg1 ;
-(void)successfullyFinishedInitalUploadForFolderWithID:(id)arg1 blacklistedUUIDs:(id)arg2 blacklistedHREFs:(id)arg3 ;
-(void)failedToFinishInitialSync:(id)arg1 error:(id)arg2 ;
-(void)successfullyUpdatedServerMeCardWithURL:(id)arg1 ;
-(void)failedToUpdateServerMeCardWithError:(id)arg1 ;
-(id)watchedCollections;
-(void)refreshCollections:(id)arg1 withReason:(int)arg2 ;
-(id)serverTokenRegistrationURL;
-(void)_tearDownABNotifications;
-(void)_syncAllContactFoldersWithRemoteChanges:(char)arg1 ;
-(void)refreshFolderListRequireChangedFolders:(char)arg1 isUserRequested:(char)arg2 ;
-(void)_setUpABNotifications;
-(void)syncFolderIDs:(id)arg1 forDataclasses:(int)arg2 isUserRequested:(char)arg3 ;
-(void)requestAgentStopMonitoringWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_appendSyncRequest:(id)arg1 ;
-(void)_fireWaitingFolderItemSyncRequests;
-(void)_reallySyncRequest:(id)arg1 ;
-(void)_syncRequest:(id)arg1 ;
-(void)contactsFolderWithId:(id)arg1 successfullyPushedActions:(id)arg2 ;
-(void)account:(id)arg1 isValid:(char)arg2 validationError:(id)arg3 ;
-(void)syncResultForContactsFolder:(id)arg1 newTag:(id)arg2 previousTag:(id)arg3 newSyncToken:(id)arg4 actions:(id)arg5 results:(id)arg6 changeIdContext:(id)arg7 isInitialSync:(char)arg8 moreAvailable:(char)arg9 moreLocalChangesAvailable:(char)arg10 pushedActions:(id)arg11 ;
-(id)onBehalfOfBundleIdentifier;
-(void)actionFailed:(int)arg1 forTask:(id)arg2 error:(id)arg3 ;
-(id)username;
@end

