/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:39:25 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/AppLaunchStats.framework/AppLaunchStats
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AppLaunchStats/AppLaunchStats-Structs.h>
#import <AppLaunchStats/DuetLoggerProtocol.h>
#import <AppLaunchStats/DuetSaveAndRestore.h>
#import <AppLaunchStats/PCInterfaceMonitorDelegate.h>

@protocol OS_dispatch_queue;
@class NSObject, AppLaunchStatsSaveAndRestore, NSDate, NSMutableDictionary, NSMutableArray, NSString;

@interface AppLaunchStatsState : NSObject <DuetLoggerProtocol, DuetSaveAndRestore, PCInterfaceMonitorDelegate> {

	BOOL isDeviceInCall;
	BOOL isDeviceUnderThermalPressure;
	BOOL isDeviceInGoodCellularCondition;
	BOOL isDataResourceAvailable;
	BOOL isFetchPowerResourceAvailable;
	BOOL isFetchPushPowerResourceAvailable;
	BOOL isDevicePhoneType;
	BOOL doUniformBudget;
	BOOL isWIFIConnected;
	BOOL isBatteryChargerConnected;
	BOOL hasCellConnected;
	BOOL hasWifiConnected;
	NSObject*<OS_dispatch_queue> stateQueue;
	int thermalStatusToken;
	long long globalDataBudgetCap;
	long long globalPowerBudgetCap;
	long long BGDataBudgetCap;
	AppLaunchStatsSaveAndRestore* saveAndRestoreContext;
	NSDate* startTimeStamp;
	NSDate* startTimeStampOOB;
	NSMutableDictionary* appsAliveInLSTDict;
	NSMutableArray* fireDates;
	NSMutableArray* cacheAppsforFullDebug;
	NSMutableArray* dailyLaunchArrays;
	NSMutableArray* recentLaunchArrays;
	NSMutableArray* weeklyLaunchArrays;
	NSMutableArray* appForecastArray;
	NSMutableArray* dataForecastArray;
	unsigned long long appForecastQuality;
	unsigned long long dataForecastQuality;
	NSMutableArray* powerFetchForecastArray;
	NSMutableArray* powerPushForecastArray;
	NSMutableArray* dailyAppForecastSlots;
	NSMutableArray* dailyDataBudgetSlots;
	NSMutableArray* dailyDataBGBudgetSlots;
	NSMutableArray* dailyDataNDISCBudgetSlots;
	NSMutableArray* dailyPowerFetchBudgetSlots;
	NSMutableArray* dailyPowerPushBudgetSlots;
	NSMutableArray* dailyPowerNDISCBudgetSlots;
	long long endofdayDataBudget;
	long long endofdayBGDataBudget;
	long long endofdayNDISCDataBudget;
	/*^block*/id clientCallBack;
	BOOL hasTransitionedToCoreDuet;
	char _enableLiveListCheck;
	char _enableBlackListCheck;
	char _enableOpportunisticFetchCheck;
	char _enableForeGroundAppCheck;
	char _enableBudgetCheck;
	float _globalNonactivePWPC;
	float _globalFetchPWPC;
	float _globalPushPWPC;
	float _dataWifiMultiplier;
	float _dataCellMultiplier;
	long long globalDataCarryCap;
	long long BGDataCarryCap;
	long long _globalMinSlotData;
	long long _BGMinSlotData;
	long long _globalTimeThreshold;

}

@property (assign) BOOL isDeviceInCall; 
@property (assign) BOOL isDeviceUnderThermalPressure; 
@property (readonly) BOOL isDeviceInGoodCellularCondition; 
@property (assign) BOOL isDataResourceAvailable; 
@property (assign) BOOL isFetchPowerResourceAvailable; 
@property (assign) BOOL isFetchPushPowerResourceAvailable; 
@property (assign) BOOL doUniformBudget; 
@property (readonly) BOOL isWIFIConnected; 
@property (assign) BOOL isBatteryChargerConnected; 
@property (readonly) BOOL hasCellConnected; 
@property (readonly) BOOL hasWifiConnected; 
@property (assign) BOOL hasTransitionedToCoreDuet; 
@property (retain) NSMutableDictionary * appsAliveInLSTDict; 
@property (retain) NSMutableArray * fireDates; 
@property (nonatomic,readonly) NSMutableArray * cacheAppsforFullDebug; 
@property (nonatomic,retain) NSMutableArray * dailyLaunchArrays; 
@property (nonatomic,retain) NSMutableArray * recentLaunchArrays; 
@property (nonatomic,retain) NSMutableArray * weeklyLaunchArrays; 
@property (nonatomic,retain) NSMutableArray * appForecastArray; 
@property (nonatomic,retain) NSMutableArray * dataForecastArray; 
@property (assign,nonatomic) unsigned long long appForecastQuality; 
@property (assign,nonatomic) unsigned long long dataForecastQuality; 
@property (nonatomic,retain) NSMutableArray * powerFetchForecastArray; 
@property (nonatomic,retain) NSMutableArray * powerPushForecastArray; 
@property (nonatomic,retain) NSMutableArray * dailyAppForecastSlots; 
@property (nonatomic,retain) NSMutableArray * dailyDataBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyDataBGBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyDataNDISCBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyPowerFetchBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyPowerPushBudgetSlots; 
@property (nonatomic,retain) NSMutableArray * dailyPowerNDISCBudgetSlots; 
@property (nonatomic,readonly) long long globalMinSlotData;                            //@synthesize globalMinSlotData=_globalMinSlotData - In the implementation block
@property (nonatomic,readonly) long long globalDataCarryCap; 
@property (nonatomic,readonly) long long globalDataBudgetCap; 
@property (nonatomic,readonly) long long BGDataBudgetCap; 
@property (nonatomic,readonly) long long BGMinSlotData;                                //@synthesize BGMinSlotData=_BGMinSlotData - In the implementation block
@property (nonatomic,readonly) long long BGDataCarryCap; 
@property (nonatomic,readonly) long long globalTimeThreshold;                          //@synthesize globalTimeThreshold=_globalTimeThreshold - In the implementation block
@property (nonatomic,readonly) float globalNonactivePWPC;                              //@synthesize globalNonactivePWPC=_globalNonactivePWPC - In the implementation block
@property (nonatomic,readonly) float globalFetchPWPC;                                  //@synthesize globalFetchPWPC=_globalFetchPWPC - In the implementation block
@property (nonatomic,readonly) float globalPushPWPC;                                   //@synthesize globalPushPWPC=_globalPushPWPC - In the implementation block
@property (nonatomic,readonly) float dataWifiMultiplier;                               //@synthesize dataWifiMultiplier=_dataWifiMultiplier - In the implementation block
@property (nonatomic,readonly) float dataCellMultiplier;                               //@synthesize dataCellMultiplier=_dataCellMultiplier - In the implementation block
@property (nonatomic,readonly) char enableLiveListCheck;                               //@synthesize enableLiveListCheck=_enableLiveListCheck - In the implementation block
@property (assign,nonatomic) char enableBlackListCheck;                                //@synthesize enableBlackListCheck=_enableBlackListCheck - In the implementation block
@property (nonatomic,readonly) char enableOpportunisticFetchCheck;                     //@synthesize enableOpportunisticFetchCheck=_enableOpportunisticFetchCheck - In the implementation block
@property (nonatomic,readonly) char enableForeGroundAppCheck;                          //@synthesize enableForeGroundAppCheck=_enableForeGroundAppCheck - In the implementation block
@property (nonatomic,readonly) char enableBudgetCheck;                                 //@synthesize enableBudgetCheck=_enableBudgetCheck - In the implementation block
@property (assign) long long endofdayDataBudget; 
@property (assign) long long endofdayBGDataBudget; 
@property (assign) long long endofdayNDISCDataBudget; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)restore:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(void)save:(id)arg1 ;
-(void)logAll:(asl_object_sRef)arg1 withMsg:(asl_object_sRef)arg2 withLevel:(int)arg3 ;
-(void)logLight:(asl_object_sRef)arg1 withMsg:(asl_object_sRef)arg2 withLevel:(int)arg3 ;
-(int)reloadConfiguration;
-(void)saveContext:(id)arg1 ;
-(NSMutableArray *)recentLaunchArrays;
-(NSMutableArray *)dailyLaunchArrays;
-(NSMutableArray *)weeklyLaunchArrays;
-(void)setDataForecastQuality:(unsigned long long)arg1 ;
-(NSMutableArray *)dataForecastArray;
-(unsigned long long)dataForecastQuality;
-(NSMutableArray *)appForecastArray;
-(void)setAppForecastQuality:(unsigned long long)arg1 ;
-(unsigned long long)appForecastQuality;
-(NSMutableArray *)powerFetchForecastArray;
-(NSMutableArray *)powerPushForecastArray;
-(void)resetAppsAliveInLSTList;
-(void)updateAppsAliveInLSTList:(id)arg1 ;
-(void)setIsDataResourceAvailable:(BOOL)arg1 ;
-(void)setIsFetchPowerResourceAvailable:(BOOL)arg1 ;
-(void)setIsFetchPushPowerResourceAvailable:(BOOL)arg1 ;
-(NSMutableArray *)fireDates;
-(void)setFireDates:(NSMutableArray *)arg1 ;
-(NSMutableArray *)dailyAppForecastSlots;
-(BOOL)hasTransitionedToCoreDuet;
-(void)setHasTransitionedToCoreDuet:(BOOL)arg1 ;
-(void)addPredictedSlotsToDailyOutOfBandQueue:(id)arg1 ;
-(long long)calculateSlotMinDataBudget:(const char*)arg1 ;
-(long long)calculateDailyDataBudgetFor:(const char*)arg1 ;
-(void)convertPCdistributionToInt:(id)arg1 fetchOver:(float)arg2 array:(id)arg3 dailyInt:(int)arg4 ;
-(int)addToOutOfBandAppList:(int)arg1 withCacheDict:(id)arg2 withAppList:(id)arg3 ;
-(char)getInCallStatus;
-(id)popFirstSlotInDailyBudgetQueue:(id)arg1 ;
-(void)interfaceLinkQualityChanged:(id)arg1 previousLinkQuality:(int)arg2 ;
-(void)interfaceReachabilityChanged:(id)arg1 ;
-(void)setClientblock:(/*^block*/id)arg1 ;
-(void)addPredictedSlotsToDailyAppForecastQueue:(id)arg1 ;
-(void)addPredictedSlotsToDailyDataBudgetQueue:(id)arg1 forcastquality:(long long)arg2 ;
-(void)addPredictedSlotsToDailyPowerBudgetQueue:(id)arg1 forcastquality:(long long)arg2 batteryCapacity:(id)arg3 ;
-(BOOL)getAppsAliveInLSTList:(id)arg1 ;
-(BOOL)isOutOfBand;
-(id)getOutOfBandAppList;
-(BOOL)hasResourcesAvailable:(BOOL)arg1 forTriggerType:(int)arg2 ;
-(id)deniedReasonForPush;
-(BOOL)isChargeOnWifiOrCellOn;
-(BOOL)isDeviceInCall;
-(void)setIsDeviceInCall:(BOOL)arg1 ;
-(BOOL)isDeviceUnderThermalPressure;
-(void)setIsDeviceUnderThermalPressure:(BOOL)arg1 ;
-(BOOL)isDeviceInGoodCellularCondition;
-(BOOL)isDataResourceAvailable;
-(BOOL)isFetchPowerResourceAvailable;
-(BOOL)isFetchPushPowerResourceAvailable;
-(BOOL)doUniformBudget;
-(void)setDoUniformBudget:(BOOL)arg1 ;
-(BOOL)isWIFIConnected;
-(BOOL)isBatteryChargerConnected;
-(void)setIsBatteryChargerConnected:(BOOL)arg1 ;
-(BOOL)hasCellConnected;
-(BOOL)hasWifiConnected;
-(NSMutableDictionary *)appsAliveInLSTDict;
-(void)setAppsAliveInLSTDict:(NSMutableDictionary *)arg1 ;
-(NSMutableArray *)cacheAppsforFullDebug;
-(void)setDailyLaunchArrays:(NSMutableArray *)arg1 ;
-(void)setRecentLaunchArrays:(NSMutableArray *)arg1 ;
-(void)setWeeklyLaunchArrays:(NSMutableArray *)arg1 ;
-(void)setAppForecastArray:(NSMutableArray *)arg1 ;
-(void)setDataForecastArray:(NSMutableArray *)arg1 ;
-(void)setPowerFetchForecastArray:(NSMutableArray *)arg1 ;
-(void)setPowerPushForecastArray:(NSMutableArray *)arg1 ;
-(void)setDailyAppForecastSlots:(NSMutableArray *)arg1 ;
-(NSMutableArray *)dailyDataBudgetSlots;
-(void)setDailyDataBudgetSlots:(NSMutableArray *)arg1 ;
-(NSMutableArray *)dailyDataBGBudgetSlots;
-(void)setDailyDataBGBudgetSlots:(NSMutableArray *)arg1 ;
-(NSMutableArray *)dailyPowerFetchBudgetSlots;
-(void)setDailyPowerFetchBudgetSlots:(NSMutableArray *)arg1 ;
-(NSMutableArray *)dailyPowerPushBudgetSlots;
-(void)setDailyPowerPushBudgetSlots:(NSMutableArray *)arg1 ;
-(NSMutableArray *)dailyPowerNDISCBudgetSlots;
-(void)setDailyPowerNDISCBudgetSlots:(NSMutableArray *)arg1 ;
-(NSMutableArray *)dailyDataNDISCBudgetSlots;
-(void)setDailyDataNDISCBudgetSlots:(NSMutableArray *)arg1 ;
-(long long)globalDataCarryCap;
-(long long)globalDataBudgetCap;
-(long long)BGDataBudgetCap;
-(long long)BGDataCarryCap;
-(long long)endofdayDataBudget;
-(void)setEndofdayDataBudget:(long long)arg1 ;
-(long long)endofdayBGDataBudget;
-(void)setEndofdayBGDataBudget:(long long)arg1 ;
-(long long)endofdayNDISCDataBudget;
-(void)setEndofdayNDISCDataBudget:(long long)arg1 ;
-(long long)globalMinSlotData;
-(long long)BGMinSlotData;
-(long long)globalTimeThreshold;
-(float)globalNonactivePWPC;
-(float)globalFetchPWPC;
-(float)globalPushPWPC;
-(float)dataWifiMultiplier;
-(float)dataCellMultiplier;
-(char)enableLiveListCheck;
-(char)enableBlackListCheck;
-(void)setEnableBlackListCheck:(char)arg1 ;
-(char)enableOpportunisticFetchCheck;
-(char)enableForeGroundAppCheck;
-(char)enableBudgetCheck;
@end

