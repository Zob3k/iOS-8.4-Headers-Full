/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:59 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomEvaluator.framework/SymptomEvaluator
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SymptomEvaluator/SymptomEvaluator-Structs.h>
#import <SymptomEvaluator/AnalyticsEngineCore.h>

@protocol OS_dispatch_source;
@class UsageAnalytics, ProcessAnalytics, AppAnalytics, ObjectAnalytics, NSMutableDictionary, NSMutableSet, NSDate, NSObject;

@interface FlowAnalyticsEngine : AnalyticsEngineCore {

	UsageAnalytics* uspace;
	ProcessAnalytics* pspace;
	AppAnalytics* aspace;
	ObjectAnalytics* calspace;
	NSMutableDictionary* processCache;
	NSMutableDictionary* appState;
	NSMutableDictionary* appCompactState;
	NSMutableDictionary* appUUIDState;
	NSMutableDictionary* uuidProcessNameMap;
	NSMutableDictionary* pluginToBundleCache;
	NSMutableDictionary* uuidToBundleIDMap;
	NSMutableSet* pendingUnregisteredAppBundleIDs;
	NSMutableSet* pendingRegisteredAppBundleIDs;
	NStatManagerRef nstatManager;
	NStatManagerRef nstatInterfaceManager;
	NStatSourceRef nstatWifiSource;
	NStatSourceRef nstatCellSource;
	/*^block*/id nstatEventBlock;
	int cellularInterface;
	/*^block*/id dataUsageRefreshCompletionBlock;
	NSDate* lastRefreshTimes[2];
	id tetherObserver;
	BOOL isTetherActive;
	NSMutableDictionary* flowCache;
	NSMutableDictionary* flowInstant;
	id flowObserver;
	ObjectAnalytics* fspace;
	ObjectAnalytics* lfpspace;
	NSObject*<OS_dispatch_source> flushOldFlowRecordsTimer;
	int screenStateToken;
	BOOL isScreenDark;
	BOOL _haveCalendar;
	BOOL _haveTypicalUsage;
	NSMutableDictionary* _flowWatchers;

}

@property (assign) BOOL haveCalendar;                                         //@synthesize haveCalendar=_haveCalendar - In the implementation block
@property (assign) BOOL haveTypicalUsage;                                     //@synthesize haveTypicalUsage=_haveTypicalUsage - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * flowWatchers;              //@synthesize flowWatchers=_flowWatchers - In the implementation block
+(id)queue;
+(BOOL)hasForegroundApp;
+(id)foregroundAppKeys;
+(BOOL)refreshDataUsageWithCallback:(/*^block*/id)arg1 ;
-(void)dealloc;
-(int)performQueryOnEntityFromCache:(id)arg1 pred:(id)arg2 altpred:(id*)arg3 actions:(id)arg4 found:(id*)arg5 ;
-(void)performQueryPostProcessing:(id)arg1 actions:(id)arg2 processOutcome:(id)arg3 ;
-(id)initWithWorkspace:(id)arg1 params:(id)arg2 queue:(id)arg3 ;
-(BOOL)handlesEntity:(id)arg1 ;
-(void)performQueryOnEntity:(id)arg1 pred:(id)arg2 sort:(id)arg3 actions:(id)arg4 service:(id)arg5 connection:(id)arg6 reply:(/*^block*/id)arg7 ;
-(void)createSnapshotFor:(id)arg1 pred:(id)arg2 actions:(id)arg3 reply:(/*^block*/id)arg4 ;
-(id)setOption:(id)arg1 ;
-(void)resetDataFor:(id)arg1 nameKind:(id)arg2 ;
-(BOOL)_initializeLocalCache;
-(void)_handleNetworkStatisticsData:(NStatSourceRef)arg1 socketClosed:(BOOL)arg2 ;
-(BOOL)_shouldAcceptNStatSource:(NStatSourceRef)arg1 withDescription:(id)arg2 ;
-(void)_uuidBundleIDMapCleanup;
-(void)_updateTetheringUsage:(BOOL)arg1 ;
-(void)_newFlowData:(id)arg1 ;
-(void)_removeOldFlowRecords;
-(void)_trimForegroundAppState;
-(void)_refreshDataUsageWithTriggerType:(int)arg1 ;
-(void)_refreshDataUsageWithCallbackOnQueue:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)_refreshDataUsageComplete;
-(BOOL)_properties:(id)arg1 toBundleID:(id*)arg2 procName:(id*)arg3 delegateName:(id*)arg4 ;
-(id)_processFetchForName:(id)arg1 bundle:(id)arg2 shouldFillMiss:(BOOL)arg3 ;
-(id)_liveUsageFetchForProcess:(id)arg1 ;
-(void)_updateLiveUsage:(id)arg1 wifiIn:(long long)arg2 wifiOut:(long long)arg3 cellIn:(long long)arg4 cellOut:(long long)arg5 wiredIn:(long long)arg6 wiredOut:(long long)arg7 ;
-(void)_stopMonitoringNetworkInterfaceSource:(NStatSourceRef)arg1 ;
-(NStatSourceRef)_startMonitoringNetworkInterface:(int)arg1 usingThreshold:(unsigned long)arg2 ;
-(double)_usageFingerprintForBundleName:(id)arg1 ;
-(void)_saveAndUnloadSelectState;
-(BOOL)haveCalendar;
-(void)_calendarUsageForApp:(id)arg1 givenLastRun:(id)arg2 ;
-(void)_compactUsageForApp:(id)arg1 intervalType:(int)arg2 givenLastRun:(id)arg3 ;
-(void)_handleApplicationNotificationStateChangedForDisplayName:(id)arg1 UUID:(id)arg2 pid:(int)arg3 edgeMode:(BOOL)arg4 ;
-(id)_uuidBundleIDMapLookup:(id)arg1 ;
-(BOOL)_appUUIDStateContainsBundleName:(id)arg1 ;
-(void)_handleApplicationNotificationStateChangedForBundleName:(id)arg1 edgeMode:(BOOL)arg2 intervalType:(int)arg3 ;
-(void)_handleApplicationNotificationCompactForBundleName:(id)arg1 edgeMode:(BOOL)arg2 ;
-(void)_removeInfoFromWorkspaceForProcess:(id)arg1 ;
-(void)_uuidProcessNameMapRemove:(id)arg1 ;
-(BOOL)_processNameIsValid:(id)arg1 ;
-(id)_uuidProcessNameMapLookup:(id)arg1 timestamp:(id)arg2 ;
-(id)_has1stPartyImpliedBundleNameBehavior:(id)arg1 ;
-(void)_uuidProcessNameMapAddUUID:(id)arg1 processName:(id)arg2 ;
-(void)_uuidProcessNameMapPrune;
-(void)_uuidBundleIDMapAddUUIDsForBundleID:(id)arg1 ;
-(void)_removeAllInfoForProcess:(id)arg1 withUUID:(id)arg2 ;
-(void)_foregroundAppStateInit;
-(void)_uuidBundleIDMapInit;
-(BOOL)_hasForegroundApp;
-(id)_foregroundAppKeys;
-(BOOL)_refreshDataUsageWithCallback:(/*^block*/id)arg1 ;
-(id)_trafficEnvelopeToTier:(double)arg1 ;
-(id)_flowFetchForName:(id)arg1 ;
-(BOOL)_isLiveFlowPerfinScope:(id)arg1 forTime:(id)arg2 andTag:(id)arg3 ;
-(id)_parseEvent:(id)arg1 withGeneration:(id*)arg2 ;
-(void)_pruneFlowHistory;
-(NSMutableDictionary *)flowWatchers;
-(void)_archiveRecord:(id)arg1 ;
-(BOOL)_handlesProcEntity:(id)arg1 ;
-(BOOL)_handlesFlowEntity:(id)arg1 ;
-(void)performThresholdingOn:(id)arg1 forKey:(id)arg2 andValue:(id)arg3 connection:(id)arg4 createdBlock:(/*^block*/id*)arg5 hitBlock:(/*^block*/id)arg6 errorBlock:(/*^block*/id)arg7 ;
-(id)_safePredFrom:(id)arg1 forEntity:(id)arg2 ;
-(int)_performQueryOnEntityFromProcCache:(id)arg1 target:(id)arg2 pred:(id)arg3 found:(id*)arg4 ;
-(id)_attemptConvertingPluginNameToContainingAppName:(id)arg1 ;
-(int)_performQueryOnEntityFromInstantFlowCache:(id)arg1 target:(id)arg2 pred:(id)arg3 found:(id*)arg4 ;
-(id)_fetchFromProcCacheWithName:(id)arg1 ;
-(void)setHaveCalendar:(BOOL)arg1 ;
-(BOOL)haveTypicalUsage;
-(void)setHaveTypicalUsage:(BOOL)arg1 ;
-(void)_handleNetworkStatisticsSourceAdd:(NStatSourceRef)arg1 ;
-(unsigned)_dumpMemoryStats;
-(void)handleLaunchServicesApplicationRegistration:(id)arg1 ;
-(void)handleLaunchServicesApplicationUnregistration:(id)arg1 ;
-(id)_fetchFromFlowCacheWithName:(id)arg1 ;
-(void)setFlowWatchers:(NSMutableDictionary *)arg1 ;
@end

