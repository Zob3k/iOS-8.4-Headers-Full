/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:39 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <StoreKitUI/StoreKitUI-Structs.h>
#import <StoreKitUI/SKUIStorePageSection.h>
#import <StoreKitUI/SKUIArtworkRequestDelegate.h>
#import <StoreKitUI/SKUIItemStateCenterObserver.h>
#import <StoreKitUI/SKUIObservableScrollViewDelegate.h>
#import <StoreKitUI/SKUIShelfPageSectionConfigurationDataSource.h>
#import <UIKit/UICollectionViewDataSource.h>
#import <UIKit/UICollectionViewDelegate.h>
#import <StoreKitUI/SKUIShelfPageSection.h>

@protocol SKUIDynamicShelfViewElement, SKUIEntityProviding, SKUIScrollViewDelegateObserver;
@class SKUIShelfPageSectionConfiguration, SKUIShelfPageComponent, SKUIViewElementLayoutContext, SKUIDynamicPageSectionIndexMapper, SKUIShelfViewElement, SKUIViewElementTextLayoutCache, NSString;

@interface SKUIDynamicShelfPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIItemStateCenterObserver, SKUIObservableScrollViewDelegate, SKUIShelfPageSectionConfigurationDataSource, UICollectionViewDataSource, UICollectionViewDelegate, SKUIShelfPageSection> {

	SKUIViewElementLayoutContext* _cellLayoutContext;
	SKUIShelfPageSectionConfiguration* _configuration;
	SKUIDynamicPageSectionIndexMapper* _dynamicPageSectionIndexMapper;
	SKUIShelfViewElement*<SKUIDynamicShelfViewElement> _dynamicShelfViewElement;
	id<SKUIEntityProviding> _entityProvider;
	SKUIViewElementTextLayoutCache* _labelLayoutCache;
	id<SKUIScrollViewDelegateObserver> _scrollViewDelegateObserver;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<SKUIScrollViewDelegateObserver> scrollViewDelegateObserver;              //@synthesize scrollViewDelegateObserver=_scrollViewDelegateObserver - In the implementation block
@property (nonatomic,readonly) SKUIShelfPageSectionConfiguration * configuration;                               //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,readonly) SKUIShelfPageComponent * pageComponent; 
-(UIEdgeInsets)sectionContentInset;
-(void)dealloc;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewWillEndDragging:(id)arg1 withVelocity:(CGPoint)arg2 targetContentOffset:(inout CGPoint*)arg3 ;
-(void)scrollViewWillBeginDecelerating:(id)arg1 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(char)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2 ;
-(void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2 ;
-(SKUIShelfPageSectionConfiguration *)configuration;
-(void)_setContext:(id)arg1 ;
-(void)setSectionIndex:(int)arg1 ;
-(void)itemStateCenter:(id)arg1 itemStatesChanged:(id)arg2 ;
-(void)artworkRequest:(id)arg1 didLoadImage:(id)arg2 ;
-(id)initWithPageComponent:(id)arg1 configuration:(id)arg2 ;
-(id)initWithPageComponent:(id)arg1 ;
-(void)_reloadViewElementProperties;
-(int)applyUpdateType:(int)arg1 ;
-(id)backgroundColorForIndexPath:(id)arg1 ;
-(void)collectionViewWillApplyLayoutAttributes:(id)arg1 ;
-(void)deselectItemsAnimated:(char)arg1 ;
-(void)invalidateCachedLayoutInformation;
-(id)relevantEntityProviders;
-(void)setTopSection:(char)arg1 ;
-(void)willAppearInContext:(id)arg1 ;
-(void)willHideInContext:(id)arg1 ;
-(id)_viewElementForEntityAtGlobalIndex:(int)arg1 ;
-(id)_normalizedShelfItemIndexPathFromActualIndexPath:(id)arg1 ;
-(id<SKUIScrollViewDelegateObserver>)scrollViewDelegateObserver;
-(void)setScrollViewDelegateObserver:(id<SKUIScrollViewDelegateObserver>)arg1 ;
-(id)shelfPageSectionConfiguration:(id)arg1 viewElementAtIndex:(int)arg2 ;
-(id)cellForIndexPath:(id)arg1 ;
-(CGSize)cellSizeForIndexPath:(id)arg1 ;
-(void)entityProvider:(id)arg1 didInvalidateWithContext:(id)arg2 ;
-(int)numberOfCells;
-(void)collectionView:(id)arg1 didConfirmButtonElement:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(void)collectionView:(id)arg1 layout:(id)arg2 willApplyLayoutAttributes:(id)arg3 ;
@end

