/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:44 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <StoreKitUI/StoreKitUI-Structs.h>
#import <StoreKitUI/SKUIViewReuseCollectionViewCell.h>
#import <StoreKitUI/SKUIPerspectiveView.h>
#import <StoreKitUI/SKUIViewElementView.h>

@protocol SKUIPerspectiveView;
@class SKUISizeValue, NSHashTable, SKUIBackgroundImageWrapperForHorizontalLockup, SKUICardViewElement, NSMapTable, SKUICardLayout, UIView, SKUIViewElement, NSString;

@interface SKUICardViewElementCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIPerspectiveView, SKUIViewElementView> {

	SKUISizeValue* _artworkBoundingSize;
	NSHashTable* _artworkRelatedChildViewElementViews;
	id<SKUIPerspectiveView> _backgroundViewWithParallax;
	SKUIBackgroundImageWrapperForHorizontalLockup* _backgroundWrapper;
	SKUICardViewElement* _cardElement;
	char _hasBottomAlignedItems;
	NSMapTable* _imageViewToImageResourceCacheKey;
	char _isActivityCard;
	SKUICardLayout* _layout;
	UIView* _programmedCardBackgroundView;
	SKUIViewElement* _productImageElement;
	NSMapTable* _viewElements;

}

@property (nonatomic,copy) SKUISizeValue * artworkBoundingSize;              //@synthesize artworkBoundingSize=_artworkBoundingSize - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)prefetchResourcesForViewElement:(id)arg1 reason:(int)arg2 context:(id)arg3 ;
+(CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2 ;
+(void)requestLayoutForViewElement:(id)arg1 width:(float)arg2 context:(id)arg3 ;
+(CGSize)sizeThatFitsWidth:(float)arg1 viewElement:(id)arg2 context:(id)arg3 ;
+(float)maximumPerspectiveHeightForSize:(CGSize)arg1 ;
+(float)_defaultWidthForLockupWithContext:(id)arg1 ;
+(CGSize)artworkBoundingSizeWithViewElement:(id)arg1 width:(float)arg2 context:(id)arg3 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setBackgroundColor:(id)arg1 ;
-(void)layoutSubviews;
-(void)reloadWithViewElement:(id)arg1 width:(float)arg2 context:(id)arg3 ;
-(char)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3 ;
-(char)updateWithItemState:(id)arg1 context:(id)arg2 animated:(char)arg3 ;
-(id)viewForElementIdentifier:(id)arg1 ;
-(void)_buttonAction:(id)arg1 ;
-(void)setPerspectiveTargetView:(id)arg1 ;
-(void)setVanishingPoint:(CGPoint)arg1 ;
-(void)updateForChangedDistanceFromVanishingPoint;
-(void)_imageTapAction:(id)arg1 ;
-(void)setArtworkBoundingSize:(SKUISizeValue *)arg1 ;
-(float)_dividerHeight:(id)arg1 ;
-(void)_performDefaultActionForViewElement:(id)arg1 ;
-(SKUISizeValue *)artworkBoundingSize;
@end

