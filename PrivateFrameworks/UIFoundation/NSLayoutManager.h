/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:43:07 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIFoundation/UIFoundation-Structs.h>
#import <UIFoundation/NSCoding.h>

@class NSTextStorage, NSGlyphGenerator, NSTypesetter, NSMutableArray, NSStorage, NSRunStorage, NSTextContainer, NSFont, NSArray;

@interface NSLayoutManager : NSObject <NSCoding> {

	NSTextStorage* _textStorage;
	NSGlyphGenerator* _glyphGenerator;
	NSTypesetter* _typesetter;
	NSMutableArray* _textContainers;
	NSStorage* _containerUsedRects;
	NSRunStorage* _containerRuns;
	NSTextContainer* _extraLineFragmentContainer;
	struct {
		unsigned containersAreFull : 1;
		unsigned glyphsMightDrawOutsideLines : 1;
		unsigned backgroundLayoutEnabled : 1;
		unsigned resizingInProgress : 1;
		unsigned allowScreenFonts : 1;
		unsigned cachedRectArrayInUse : 1;
		unsigned displayInvalidationInProgress : 1;
		unsigned insertionPointNeedsUpdate : 1;
		unsigned layoutManagerInDirtyList : 1;
		unsigned originalFontOverride : 1;
		unsigned showInvisibleCharacters : 1;
		unsigned showControlCharacters : 1;
		unsigned delegateRespondsToDidInvalidate : 1;
		unsigned delegateRespondsToDidComplete : 1;
		unsigned glyphFormat : 2;
		unsigned textStorageRespondsToIsEditing : 1;
		unsigned notifyEditedInProgress : 1;
		unsigned containersChanged : 1;
		unsigned isGeneratingGlyphs : 1;
		unsigned hasNonGeneratedGlyphData : 1;
		unsigned syncAlignmentToDirection : 1;
		unsigned defaultAttachmentScaling : 2;
		unsigned usesFontLeading : 1;
		unsigned seenRightToLeft : 1;
		unsigned ignoresViewTransformations : 1;
		unsigned needToFlushGlyph : 1;
		unsigned flipsIfNeeded : 1;
		unsigned allowNonContig : 1;
		unsigned useNonContig : 1;
		unsigned inBackgroundLayout : 1;
	}  _lmFlags;
	id _delegate;
	unsigned short _textViewResizeDisableStack;
	unsigned short _displayInvalidationDisableStack;
	NSRange _deferredDisplayCharRange;
	id _firstTextView;
	CGRect* _cachedRectArray;
	unsigned _cachedRectArrayCapacity;
	char* _glyphBuffer;
	unsigned _glyphBufferSize;
	NSRange _cachedLocationNominalGlyphRange;
	unsigned _cachedLocationGlyphIndex;
	CGPoint _cachedLocation;
	NSRange _cachedFontCharRange;
	NSFont* _cachedFont;
	unsigned _firstUnlaidGlyphIndex;
	unsigned _firstUnlaidCharIndex;
	NSRange _newlyFilledGlyphRange;
	id _extraData;

}

@property (assign) char allowsOriginalFontMetricsOverride; 
@property (assign,nonatomic) NSTextStorage * textStorage; 
@property (nonatomic,readonly) NSArray * textContainers; 
@property (assign,nonatomic) id<NSLayoutManagerDelegate> delegate; 
@property (assign,nonatomic) char showsInvisibleCharacters; 
@property (assign,nonatomic) char showsControlCharacters; 
@property (assign,nonatomic) float hyphenationFactor; 
@property (assign,nonatomic) char usesFontLeading; 
@property (assign,nonatomic) char allowsNonContiguousLayout; 
@property (nonatomic,readonly) char hasNonContiguousLayout; 
@property (nonatomic,readonly) unsigned numberOfGlyphs; 
@property (nonatomic,readonly) CGRect extraLineFragmentRect; 
@property (nonatomic,readonly) CGRect extraLineFragmentUsedRect; 
@property (nonatomic,readonly) NSTextContainer * extraLineFragmentTextContainer; 
+(void)initialize;
+(id)_defaultLinkAttributes;
+(char)_usesScreenFonts;
+(char)_ignoresViewTransformations;
+(char)_showsInvisibleCharacters;
+(char)_showsControlCharacters;
-(id)_commonTextViewController;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id<NSLayoutManagerDelegate>)arg1 ;
-(id)init;
-(id)description;
-(id<NSLayoutManagerDelegate>)delegate;
-(void)_commonInit;
-(void)showCGGlyphs:(const unsigned short*)arg1 positions:(const CGPoint*)arg2 count:(unsigned)arg3 font:(id)arg4 matrix:(CGAffineTransform)arg5 attributes:(id)arg6 inContext:(CGContextRef)arg7 ;
-(void)addTextContainer:(id)arg1 ;
-(void)setUsesFontLeading:(char)arg1 ;
-(NSTextStorage *)textStorage;
-(void)ensureLayoutForTextContainer:(id)arg1 ;
-(void)invalidateGlyphsForCharacterRange:(NSRange)arg1 changeInLength:(int)arg2 actualCharacterRange:(NSRange*)arg3 ;
-(void)invalidateLayoutForCharacterRange:(NSRange)arg1 actualCharacterRange:(NSRange*)arg2 ;
-(void)coordinateAccess:(/*^block*/id)arg1 ;
-(void)addTemporaryAttribute:(id)arg1 value:(id)arg2 forCharacterRange:(NSRange)arg3 ;
-(void)invalidateDisplayForCharacterRange:(NSRange)arg1 ;
-(id)textContainerForGlyphAtIndex:(unsigned)arg1 effectiveRange:(NSRange*)arg2 ;
-(CGRect)boundingRectForGlyphRange:(NSRange)arg1 inTextContainer:(id)arg2 ;
-(void)ensureLayoutForCharacterRange:(NSRange)arg1 ;
-(void)ensureLayoutForBoundingRect:(CGRect)arg1 inTextContainer:(id)arg2 ;
-(NSRange)glyphRangeForBoundingRect:(CGRect)arg1 inTextContainer:(id)arg2 ;
-(CGRect)usedRectForTextContainer:(id)arg1 ;
-(NSRange)glyphRangeForCharacterRange:(NSRange)arg1 actualCharacterRange:(NSRange*)arg2 ;
-(void)drawGlyphsForGlyphRange:(NSRange)arg1 atPoint:(CGPoint)arg2 ;
-(void)drawBackgroundForGlyphRange:(NSRange)arg1 atPoint:(CGPoint)arg2 ;
-(void)setGlyphs:(const unsigned short*)arg1 properties:(const int*)arg2 characterIndexes:(const unsigned*)arg3 font:(id)arg4 forGlyphRange:(NSRange)arg5 ;
-(NSRange)glyphRangeForTextContainer:(id)arg1 ;
-(unsigned)getGlyphsInRange:(NSRange)arg1 glyphs:(unsigned short*)arg2 properties:(int*)arg3 characterIndexes:(unsigned*)arg4 bidiLevels:(char*)arg5 ;
-(void)setNotShownAttribute:(char)arg1 forGlyphAtIndex:(unsigned)arg2 ;
-(unsigned)numberOfGlyphs;
-(float)baselineOffsetForGlyphAtIndex:(unsigned)arg1 ;
-(id)attributedString;
-(void)_setDrawsDebugBaselines:(char)arg1 ;
-(char)_drawsDebugBaselines;
-(char)allowsNonContiguousLayout;
-(CGRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned)arg1 effectiveRange:(NSRange*)arg2 ;
-(void)setTextStorage:(NSTextStorage *)arg1 ;
-(void)setAllowsNonContiguousLayout:(char)arg1 ;
-(float)defaultLineHeightForFont:(id)arg1 ;
-(void)_setGlyphsPerLineEstimate:(unsigned)arg1 offsetPerLineEstimate:(float)arg2 ;
-(NSArray *)textContainers;
-(CGRect)extraLineFragmentRect;
-(void)enumerateLineFragmentsForGlyphRange:(NSRange)arg1 usingBlock:(/*^block*/id)arg2 ;
-(NSRange)glyphRangeForBoundingRectWithoutAdditionalLayout:(CGRect)arg1 inTextContainer:(id)arg2 ;
-(NSRange)characterRangeForGlyphRange:(NSRange)arg1 actualGlyphRange:(NSRange*)arg2 ;
-(void)enumerateEnclosingRectsForGlyphRange:(NSRange)arg1 withinSelectedGlyphRange:(NSRange)arg2 inTextContainer:(id)arg3 usingBlock:(/*^block*/id)arg4 ;
-(char)hasNonContiguousLayout;
-(unsigned)firstUnlaidGlyphIndex;
-(CGRect*)rectArrayForCharacterRange:(NSRange)arg1 withinSelectedCharacterRange:(NSRange)arg2 inTextContainer:(id)arg3 rectCount:(unsigned*)arg4 ;
-(void)ensureLayoutForGlyphRange:(NSRange)arg1 ;
-(CGRect)lineFragmentRectForGlyphAtIndex:(unsigned)arg1 effectiveRange:(NSRange*)arg2 ;
-(void)removeTemporaryAttribute:(id)arg1 forCharacterRange:(NSRange)arg2 ;
-(NSRange)rangeOfCharacterClusterAtIndex:(unsigned)arg1 type:(long)arg2 ;
-(id)temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned)arg2 longestEffectiveRange:(NSRange*)arg3 inRange:(NSRange)arg4 ;
-(NSTextContainer *)extraLineFragmentTextContainer;
-(void)enumerateEnclosingRectsForCharacterRange:(NSRange)arg1 withinSelectedCharacterRange:(NSRange)arg2 inTextContainer:(id)arg3 usingBlock:(/*^block*/id)arg4 ;
-(unsigned)glyphIndexForPoint:(CGPoint)arg1 inTextContainer:(id)arg2 fractionOfDistanceThroughGlyph:(float*)arg3 ;
-(unsigned)characterIndexForPoint:(CGPoint)arg1 inTextContainer:(id)arg2 fractionOfDistanceBetweenInsertionPoints:(float*)arg3 ;
-(int)propertyForGlyphAtIndex:(unsigned)arg1 ;
-(unsigned)glyphIndexForCharacterAtIndex:(unsigned)arg1 ;
-(unsigned)getLineFragmentInsertionPointsForCharacterAtIndex:(unsigned)arg1 alternatePositions:(char)arg2 inDisplayOrder:(char)arg3 positions:(float*)arg4 characterIndexes:(unsigned*)arg5 ;
-(unsigned)layoutOptions;
-(CGRect)extraLineFragmentUsedRect;
-(void)setBackgroundLayoutEnabled:(char)arg1 ;
-(void)setSynchronizesAlignmentToDirection:(char)arg1 ;
-(void)processEditingForTextStorage:(id)arg1 edited:(unsigned)arg2 range:(NSRange)arg3 changeInLength:(int)arg4 invalidatedRange:(NSRange)arg5 ;
-(void)ensureGlyphsForGlyphRange:(NSRange)arg1 ;
-(char)isValidGlyphIndex:(unsigned)arg1 ;
-(NSRange)truncatedGlyphRangeInLineFragmentForGlyphAtIndex:(unsigned)arg1 ;
-(unsigned)glyphIndexForPoint:(CGPoint)arg1 inTextContainer:(id)arg2 ;
-(unsigned)characterIndexForGlyphAtIndex:(unsigned)arg1 ;
-(id)typesetter;
-(id)circleImageWithSize:(CGSize)arg1 bufferWidth:(float)arg2 usingColor:(id)arg3 ;
-(CGPoint)locationForGlyphAtIndex:(unsigned)arg1 ;
-(int)intAttribute:(int)arg1 forGlyphAtIndex:(unsigned)arg2 ;
-(CGRect*)rectArrayForGlyphRange:(NSRange)arg1 withinSelectedGlyphRange:(NSRange)arg2 inTextContainer:(id)arg3 rectCount:(unsigned*)arg4 ;
-(unsigned short)glyphAtIndex:(unsigned)arg1 ;
-(char)_drawsUnderlinesLikeWebKit;
-(char)notShownAttributeForGlyphAtIndex:(unsigned)arg1 ;
-(void)_drawLineForGlyphRange:(NSRange)arg1 inContext:(CGContextRef)arg2 from:(float)arg3 to:(float)arg4 at:(float)arg5 thickness:(float)arg6 lineOrigin:(CGPoint)arg7 breakForDescenders:(char)arg8 flipped:(char)arg9 ;
-(id)temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned)arg2 effectiveRange:(NSRange*)arg3 ;
-(float)defaultBaselineOffsetForFont:(id)arg1 ;
-(void)drawUnderlineForGlyphRange:(NSRange)arg1 underlineType:(int)arg2 baselineOffset:(float)arg3 lineFragmentRect:(CGRect)arg4 lineFragmentGlyphRange:(NSRange)arg5 containerOrigin:(CGPoint)arg6 ;
-(void)drawStrikethroughForGlyphRange:(NSRange)arg1 strikethroughType:(int)arg2 baselineOffset:(float)arg3 lineFragmentRect:(CGRect)arg4 lineFragmentGlyphRange:(NSRange)arg5 containerOrigin:(CGPoint)arg6 ;
-(void)_showCGGlyphs:(const unsigned short*)arg1 positions:(const CGPoint*)arg2 count:(unsigned)arg3 font:(id)arg4 matrix:(CGAffineTransform)arg5 attributes:(id)arg6 inContext:(CGContextRef)arg7 ;
-(void)showAttachmentCell:(id)arg1 inRect:(CGRect)arg2 characterIndex:(unsigned)arg3 ;
-(void)drawSpellingUnderlineForGlyphRange:(NSRange)arg1 spellingState:(int)arg2 inGlyphRange:(NSRange)arg3 lineFragmentRect:(CGRect)arg4 lineFragmentGlyphRange:(NSRange)arg5 containerOrigin:(CGPoint)arg6 ;
-(void)_drawLineForGlyphRange:(NSRange)arg1 inContext:(CGContextRef)arg2 from:(float)arg3 to:(float)arg4 at:(float)arg5 thickness:(float)arg6 lineOrigin:(CGPoint)arg7 breakForDescenders:(char)arg8 ;
-(void)_drawLineForGlyphRange:(NSRange)arg1 type:(int)arg2 baselineOffset:(float)arg3 lineFragmentRect:(CGRect)arg4 lineFragmentGlyphRange:(NSRange)arg5 containerOrigin:(CGPoint)arg6 isStrikethrough:(char)arg7 ;
-(void)_lineGlyphRange:(NSRange)arg1 type:(int)arg2 lineFragmentRect:(CGRect)arg3 lineFragmentGlyphRange:(NSRange)arg4 containerOrigin:(CGPoint)arg5 isStrikethrough:(char)arg6 ;
-(NSRange)_primitiveCharacterRangeForGlyphRange:(NSRange)arg1 ;
-(NSRange)_blockRangeForCharRange:(NSRange)arg1 ;
-(NSRange)_primitiveGlyphRangeForCharacterRange:(NSRange)arg1 ;
-(NSRange)_blockRowRangeForCharRange:(NSRange)arg1 completeRows:(char*)arg2 ;
-(NSRange)_blockRowRangeForCharRange:(NSRange)arg1 ;
-(unsigned)_glyphIndexForCharacterIndex:(unsigned)arg1 startOfRange:(char)arg2 okToFillHoles:(char)arg3 considerNulls:(char)arg4 ;
-(void)_fillGlyphHoleForCharacterRange:(NSRange)arg1 startGlyphIndex:(unsigned)arg2 desiredNumberOfCharacters:(unsigned)arg3 ;
-(id)glyphGenerator;
-(void)setExtraLineFragmentRect:(CGRect)arg1 usedRect:(CGRect)arg2 textContainer:(id)arg3 ;
-(void)setTextContainer:(id)arg1 forGlyphRange:(NSRange)arg2 ;
-(void)setLineFragmentRect:(CGRect)arg1 forGlyphRange:(NSRange)arg2 usedRect:(CGRect)arg3 ;
-(void)setLocation:(CGPoint)arg1 forStartOfGlyphRange:(NSRange)arg2 ;
-(char)_doOptimizedLayoutStartingAtGlyphIndex:(unsigned)arg1 forCharacterRange:(NSRange)arg2 inTextContainer:(id)arg3 lineLimit:(unsigned)arg4 nextGlyphIndex:(unsigned*)arg5 ;
-(void)_invalidateGlyphsForExtendedCharacterRange:(NSRange)arg1 changeInLength:(int)arg2 includeBlocks:(char)arg3 ;
-(CGRect)layoutRectForTextBlock:(id)arg1 atIndex:(unsigned)arg2 effectiveRange:(NSRange*)arg3 ;
-(void)_doLayoutWithFullContainerStartingAtGlyphIndex:(unsigned)arg1 nextGlyphIndex:(unsigned*)arg2 ;
-(void)_invalidateLayoutForExtendedCharacterRange:(NSRange)arg1 isSoft:(char)arg2 invalidateUsage:(char)arg3 ;
-(void)_invalidateUsageForTextContainersInRange:(NSRange)arg1 ;
-(void)_resizeTextViewForTextContainer:(id)arg1 ;
-(void)_invalidateInsertionPoint;
-(void)invalidateDisplayForGlyphRange:(NSRange)arg1 ;
-(void)_invalidateDisplayIfNeeded;
-(void)_invalidateLayoutForExtendedCharacterRange:(NSRange)arg1 isSoft:(char)arg2 ;
-(void)_fillLayoutHoleForCharacterRange:(NSRange)arg1 desiredNumberOfLines:(unsigned)arg2 isSoft:(char)arg3 ;
-(unsigned)_smallEncodingGlyphIndexForCharacterIndex:(unsigned)arg1 startOfRange:(char)arg2 okToFillHoles:(char)arg3 considerNulls:(char)arg4 ;
-(void)_mergeLayoutHoles;
-(void)_fillLayoutHoleAtIndex:(unsigned)arg1 desiredNumberOfLines:(unsigned)arg2 ;
-(id)_lineFragmentDescriptionForGlyphRange:(NSRange)arg1 includeGlyphLocations:(char)arg2 ;
-(id)_lineFragmentDescription:(char)arg1 ;
-(id)_glyphDescriptionForGlyphRange:(NSRange)arg1 ;
-(unsigned)_indexOfFirstGlyphInTextContainer:(id)arg1 okToFillHoles:(char)arg2 ;
-(void)_recalculateUsageForTextContainerAtIndex:(unsigned)arg1 ;
-(void)_growCachedRectArrayToSize:(unsigned)arg1 ;
-(CGRect*)_rectArrayForRange:(NSRange)arg1 withinSelectionRange:(NSRange)arg2 rangeIsCharRange:(char)arg3 singleRectOnly:(char)arg4 fullLineRectsOnly:(char)arg5 inTextContainer:(id)arg6 rectCount:(unsigned*)arg7 rangeWithinContainer:(NSRange*)arg8 glyphsDrawOutsideLines:(char*)arg9 rectArray:(CGRect*)arg10 rectArrayCapacity:(unsigned)arg11 ;
-(CGRect*)_rectArrayForRange:(NSRange)arg1 withinSelectionRange:(NSRange)arg2 rangeIsCharRange:(char)arg3 singleRectOnly:(char)arg4 fullLineRectsOnly:(char)arg5 inTextContainer:(id)arg6 rectCount:(unsigned*)arg7 rangeWithinContainer:(NSRange*)arg8 glyphsDrawOutsideLines:(char*)arg9 ;
-(id)substituteFontForFont:(id)arg1 ;
-(CGSize)attachmentSizeForGlyphAtIndex:(unsigned)arg1 ;
-(NSRange)_glyphRangeForCharacterRange:(NSRange)arg1 actualCharacterRange:(NSRange*)arg2 okToFillHoles:(char)arg3 ;
-(NSRange)_firstPassGlyphRangeForBoundingRect:(CGRect)arg1 inTextContainer:(id)arg2 hintGlyphRange:(NSRange)arg3 okToFillHoles:(char)arg4 ;
-(NSRange)_firstPassGlyphRangeForBoundingRect:(CGRect)arg1 inTextContainer:(id)arg2 okToFillHoles:(char)arg3 ;
-(void)_noteFirstTextViewVisibleCharacterRangeIfAfterIndex:(unsigned)arg1 ;
-(void)_setRowArrayCache:(id)arg1 ;
-(void)_markSelfAsDirtyForBackgroundLayout:(id)arg1 ;
-(CGRect)boundsRectForTextBlock:(id)arg1 atIndex:(unsigned)arg2 effectiveRange:(NSRange*)arg3 ;
-(id)temporaryAttributesAtCharacterIndex:(unsigned)arg1 longestEffectiveRange:(NSRange*)arg2 inRange:(NSRange)arg3 ;
-(void)fillBackgroundRectArray:(const CGRect*)arg1 count:(unsigned)arg2 forCharacterRange:(NSRange)arg3 color:(id)arg4 ;
-(char)_hasSeenRightToLeft;
-(void)showAttachment:(id)arg1 inRect:(CGRect)arg2 textContainer:(id)arg3 characterIndex:(unsigned)arg4 ;
-(void)underlineGlyphRange:(NSRange)arg1 underlineType:(int)arg2 lineFragmentRect:(CGRect)arg3 lineFragmentGlyphRange:(NSRange)arg4 containerOrigin:(CGPoint)arg5 ;
-(void)strikethroughGlyphRange:(NSRange)arg1 strikethroughType:(int)arg2 lineFragmentRect:(CGRect)arg3 lineFragmentGlyphRange:(NSRange)arg4 containerOrigin:(CGPoint)arg5 ;
-(void)setBaselineOffset:(float)arg1 forGlyphAtIndex:(unsigned)arg2 ;
-(void)_invalidateGlyphsForExtendedCharacterRange:(NSRange)arg1 changeInLength:(int)arg2 ;
-(void)_mergeGlyphHoles;
-(NSRange)_blockRangeForGlyphRange:(NSRange)arg1 ;
-(NSRange)_blockRowRangeForGlyphRange:(NSRange)arg1 completeRows:(char*)arg2 ;
-(NSRange)_blockRowRangeForGlyphRange:(NSRange)arg1 ;
-(id)_rowArrayCache;
-(NSRange)_extendedCharRangeForInvalidation:(NSRange)arg1 editedCharRange:(NSRange)arg2 ;
-(void)_adjustCharacterIndicesForRawGlyphRange:(NSRange)arg1 byDelta:(int)arg2 ;
-(char)_canDoLayout;
-(void)_fillGlyphHoleAtIndex:(unsigned)arg1 desiredNumberOfCharacters:(unsigned)arg2 ;
-(unsigned)_smallEncodingGlyphIndexForCharacterIndex:(unsigned)arg1 startOfRange:(char)arg2 okToFillHoles:(char)arg3 ;
-(unsigned)_glyphIndexForCharacterIndex:(unsigned)arg1 startOfRange:(char)arg2 okToFillHoles:(char)arg3 ;
-(id)_containerDescription;
-(id)_lineFragmentDescription;
-(id)_glyphLocationDescription;
-(id)_glyphDescription;
-(id)_glyphHoleDescription;
-(id)_layoutHoleDescription;
-(id)_glyphTreeDescription;
-(id)_layoutTreeDescription;
-(id)_blockDescription;
-(void)_updateUsageForTextContainer:(id)arg1 addingUsedRect:(CGRect)arg2 ;
-(NSStoredContainerUsage*)_validatedStoredUsageForTextContainerAtIndex:(unsigned)arg1 ;
-(id)_selectedRanges;
-(void)_fixSelectionAfterChangeInCharacterRange:(NSRange)arg1 changeInLength:(int)arg2 ;
-(CGRect)_boundingRectForGlyphRange:(NSRange)arg1 inTextContainer:(id)arg2 fast:(char)arg3 fullLineRectsOnly:(char)arg4 ;
-(NSRange)_glyphRangeForBoundingRect:(CGRect)arg1 inTextContainer:(id)arg2 fast:(char)arg3 okToFillHoles:(char)arg4 ;
-(void)_firstTextViewChanged;
-(void)_drawBackgroundForGlyphRange:(NSRange)arg1 atPoint:(CGPoint)arg2 ;
-(id)selectedTextAttributesForCharacterAtIndex:(unsigned)arg1 effectiveRange:(NSRange*)arg2 ;
-(char*)_packedGlyphs:(unsigned)arg1 range:(NSRange)arg2 length:(unsigned*)arg3 ;
-(void)_drawGlyphsForGlyphRange:(NSRange)arg1 atPoint:(CGPoint)arg2 ;
-(unsigned)_glyphAtIndex:(unsigned)arg1 characterIndex:(unsigned*)arg2 glyphInscription:(unsigned*)arg3 isValidIndex:(char*)arg4 ;
-(char)_needToFlushGlyph;
-(void)_setNeedToFlushGlyph:(char)arg1 ;
-(void)_simpleInsertGlyph:(unsigned)arg1 atGlyphIndex:(unsigned)arg2 characterIndex:(unsigned)arg3 elastic:(char)arg4 ;
-(void)_simpleDeleteGlyphsInRange:(NSRange)arg1 ;
-(void)_insertGlyphs:(unsigned*)arg1 elasticAttributes:(char*)arg2 count:(unsigned)arg3 atGlyphIndex:(unsigned)arg4 characterIndex:(unsigned)arg5 ;
-(void)_promoteGlyphStoreToFormat:(unsigned)arg1 ;
-(id)_attachmentSizesRun;
-(CGRect)_currentAttachmentRect;
-(unsigned)_currentAttachmentIndex;
-(void)_setCurrentAttachmentRect:(CGRect)arg1 index:(unsigned)arg2 ;
-(void)_clearCurrentAttachmentSettings;
-(void)_clearTemporaryAttributes;
-(void)_clearTemporaryAttributesForCharacterRange:(NSRange)arg1 changeInLength:(int)arg2 ;
-(void)setAllowsOriginalFontMetricsOverride:(char)arg1 ;
-(char)allowsOriginalFontMetricsOverride;
-(void)_setHasSeenRightToLeft:(char)arg1 ;
-(char)flipsIfNeeded;
-(void)setFlipsIfNeeded:(char)arg1 ;
-(void)setLineFragmentRect:(CGRect)arg1 forGlyphRange:(NSRange)arg2 usedRect:(CGRect)arg3 baselineOffset:(float)arg4 ;
-(char)ignoresViewTransformations;
-(void)setIgnoresViewTransformations:(char)arg1 ;
-(char)ignoresAntialiasThreshold;
-(void)setIgnoresAntialiasThreshold:(char)arg1 ;
-(char)_alwaysDrawsActive;
-(void)_setAlwaysDrawsActive:(char)arg1 ;
-(id)_insertionPointHelperForGlyphAtIndex:(unsigned)arg1 ;
-(int)getLineFragmentInsertionPointArraysForCharacterAtIndex:(unsigned)arg1 inDisplayOrder:(char)arg2 positions:(float*)arg3 characterIndexes:(unsigned*)arg4 count:(unsigned*)arg5 alternatePositions:(float*)arg6 characterIndexes:(unsigned*)arg7 count:(unsigned*)arg8 ;
-(id)_selectionRangesForInsertionPointRange:(NSRange)arg1 ;
-(void)_setDrawsUnderlinesLikeWebKit:(char)arg1 ;
-(void)getFirstUnlaidCharacterIndex:(unsigned*)arg1 glyphIndex:(unsigned*)arg2 ;
-(char)synchronizesAlignmentToDirection;
-(int)typesetterBehavior;
-(float)hyphenationFactor;
-(char)usesFontLeading;
-(void)insertGlyph:(unsigned)arg1 atGlyphIndex:(unsigned)arg2 characterIndex:(unsigned)arg3 ;
-(void)setEllipsisGlyphAttribute:(char)arg1 forGlyphAtIndex:(unsigned)arg2 ;
-(void)setAttachmentSize:(CGSize)arg1 forGlyphRange:(NSRange)arg2 ;
-(void)setTypesetterBehavior:(int)arg1 ;
-(void)insertGlyphs:(const unsigned*)arg1 length:(unsigned)arg2 forStartingGlyphAtIndex:(unsigned)arg3 characterIndex:(unsigned)arg4 ;
-(void)setIntAttribute:(int)arg1 value:(int)arg2 forGlyphAtIndex:(unsigned)arg3 ;
-(void)deleteGlyphsInRange:(NSRange)arg1 ;
-(void)setGlyphGenerator:(id)arg1 ;
-(void)insertTextContainer:(id)arg1 atIndex:(unsigned)arg2 ;
-(NSRange)_characterRangeCurrentlyInAndAfterContainer:(id)arg1 ;
-(void)textContainerChangedTextView:(id)arg1 ;
-(void)invalidateLayoutForCharacterRange:(NSRange)arg1 isSoft:(char)arg2 actualCharacterRange:(NSRange*)arg3 ;
-(void)_invalidateGlyphsForCharacterRange:(NSRange)arg1 editedCharacterRange:(NSRange)arg2 changeInLength:(int)arg3 actualCharacterRange:(NSRange*)arg4 ;
-(void)_primitiveInvalidateDisplayForGlyphRange:(NSRange)arg1 ;
-(void)_forceDisplayToBeCorrectForViewsWithUnlaidGlyphs;
-(void)textStorage:(id)arg1 edited:(unsigned)arg2 range:(NSRange)arg3 changeInLength:(int)arg4 invalidatedRange:(NSRange)arg5 ;
-(void)ensureGlyphsForCharacterRange:(NSRange)arg1 ;
-(void)_primitiveDeleteGlyphsInRange:(NSRange)arg1 ;
-(unsigned short)glyphAtIndex:(unsigned)arg1 isValidIndex:(char*)arg2 ;
-(unsigned)getGlyphsInRange:(NSRange)arg1 glyphs:(unsigned*)arg2 characterIndexes:(unsigned*)arg3 glyphInscriptions:(unsigned*)arg4 elasticBits:(char*)arg5 bidiLevels:(char*)arg6 ;
-(unsigned)firstUnlaidCharacterIndex;
-(CGRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned)arg1 effectiveRange:(NSRange*)arg2 withoutAdditionalLayout:(char)arg3 ;
-(float)fractionOfDistanceThroughGlyphForPoint:(CGPoint)arg1 inTextContainer:(id)arg2 ;
-(id)temporaryAttributesAtCharacterIndex:(unsigned)arg1 effectiveRange:(NSRange*)arg2 ;
-(char)usesScreenFonts;
-(void)replaceTextStorage:(id)arg1 ;
-(id)_glyphGenerator;
-(void)_setGlyphGenerator:(id)arg1 ;
-(void)setTypesetter:(id)arg1 ;
-(void)removeTextContainerAtIndex:(unsigned)arg1 ;
-(void)textContainerChangedGeometry:(id)arg1 ;
-(void)textContainerChangedTextView:(id)arg1 fromTextView:(id)arg2 ;
-(void)_setGlyphsPerLineEstimate:(unsigned)arg1 integerOffsetPerLineEstimate:(unsigned)arg2 ;
-(char)backgroundLayoutEnabled;
-(void)setUsesScreenFonts:(char)arg1 ;
-(void)setShowsInvisibleCharacters:(char)arg1 ;
-(char)showsInvisibleCharacters;
-(void)setShowsControlCharacters:(char)arg1 ;
-(char)showsControlCharacters;
-(char)backgroundColorProvidesOpaqueSurface;
-(void)replaceGlyphAtIndex:(unsigned)arg1 withGlyph:(unsigned)arg2 ;
-(void)setCharacterIndex:(unsigned)arg1 forGlyphAtIndex:(unsigned)arg2 ;
-(void)invalidateGlyphsOnLayoutInvalidationForGlyphRange:(NSRange)arg1 ;
-(unsigned)getGlyphsInRange:(NSRange)arg1 glyphs:(unsigned*)arg2 characterIndexes:(unsigned*)arg3 glyphInscriptions:(unsigned*)arg4 elasticBits:(char*)arg5 ;
-(unsigned)getGlyphs:(unsigned*)arg1 range:(NSRange)arg2 ;
-(void)setLocation:(CGPoint)arg1 forStartOfGlyphRange:(NSRange)arg2 coalesceRuns:(char)arg3 ;
-(void)setLocations:(CGPoint*)arg1 startingGlyphIndexes:(unsigned*)arg2 count:(unsigned)arg3 forGlyphRange:(NSRange)arg4 ;
-(void)setDrawsOutsideLineFragment:(char)arg1 forGlyphAtIndex:(unsigned)arg2 ;
-(id)textContainerForGlyphAtIndex:(unsigned)arg1 effectiveRange:(NSRange*)arg2 withoutAdditionalLayout:(char)arg3 ;
-(CGRect)lineFragmentRectForGlyphAtIndex:(unsigned)arg1 effectiveRange:(NSRange*)arg2 withoutAdditionalLayout:(char)arg3 ;
-(CGRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned)arg1 effectiveRange:(NSRange*)arg2 allowLayout:(char)arg3 ;
-(char)drawsOutsideLineFragmentForGlyphAtIndex:(unsigned)arg1 ;
-(void)setLayoutRect:(CGRect)arg1 forTextBlock:(id)arg2 glyphRange:(NSRange)arg3 ;
-(void)setBoundsRect:(CGRect)arg1 forTextBlock:(id)arg2 glyphRange:(NSRange)arg3 ;
-(CGRect)layoutRectForTextBlock:(id)arg1 glyphRange:(NSRange)arg2 ;
-(CGRect)boundsRectForTextBlock:(id)arg1 glyphRange:(NSRange)arg2 ;
-(NSRange)rangeOfNominallySpacedGlyphsContainingIndex:(unsigned)arg1 ;
-(void)setTemporaryAttributes:(id)arg1 forCharacterRange:(NSRange)arg2 ;
-(void)addTemporaryAttributes:(id)arg1 forCharacterRange:(NSRange)arg2 ;
-(id)_temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned)arg2 effectiveRange:(NSRange*)arg3 ;
-(id)_temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned)arg2 longestEffectiveRange:(NSRange*)arg3 inRange:(NSRange)arg4 ;
-(id)_temporaryAttributesAtCharacterIndex:(unsigned)arg1 longestEffectiveRange:(NSRange*)arg2 inRange:(NSRange)arg3 ;
-(void)finalize;
-(void)setHyphenationFactor:(float)arg1 ;
@end

