/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:40:09 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreHAP/CoreHAP-Structs.h>
#import <CoreHAP/HAPAccessoryServer.h>
#import <CoreHAP/HAPHTTPClientDelegate.h>
#import <CoreHAP/HAPHTTPClientDebugDelegate.h>

@protocol OS_dispatch_queue, HAPAccessoryServerIPDelegatePrivate;
@class NSString, NSObject, NSDictionary, NSArray, NSMutableArray, HAPAccessory, HAPHTTPClient;

@interface HAPAccessoryServerIP : HAPAccessoryServer <HAPHTTPClientDelegate, HAPHTTPClientDebugDelegate> {

	MFiSAPRef _mfiSAP;
	PairingSessionPrivateRef _pairingSession;
	unsigned long long _featureFlags;
	char _establishingSecureConnection;
	NSString* _deviceID;
	NSString* _model;
	NSString* _protocolVersion;
	NSString* _sourceVersion;
	unsigned _configNumber;
	unsigned _stateNumber;
	unsigned _statusFlags;
	NSObject*<OS_dispatch_queue> _workQueue;
	NSDictionary* _bonjourDeviceInfo;
	id<HAPAccessoryServerIPDelegatePrivate> _delegate;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	NSString* _accessoryServerName;
	NSArray* _ipServices;
	NSMutableArray* _queuedOperations;
	HAPAccessory* _primaryAccessoryForServer;
	HAPHTTPClient* _httpClient;
	/*^block*/id _pairVerifyCompletionBlock;
	NSString* _controllerUsername;
	/*^block*/id _netServiceResolveCompletionBlock;

}

@property (nonatomic,copy) NSString * deviceID;                                                    //@synthesize deviceID=_deviceID - In the implementation block
@property (nonatomic,copy) NSString * model;                                                       //@synthesize model=_model - In the implementation block
@property (nonatomic,copy) NSString * protocolVersion;                                             //@synthesize protocolVersion=_protocolVersion - In the implementation block
@property (nonatomic,copy) NSString * sourceVersion;                                               //@synthesize sourceVersion=_sourceVersion - In the implementation block
@property (assign,nonatomic) unsigned configNumber;                                                //@synthesize configNumber=_configNumber - In the implementation block
@property (assign,nonatomic) unsigned stateNumber;                                                 //@synthesize stateNumber=_stateNumber - In the implementation block
@property (assign,nonatomic) unsigned statusFlags;                                                 //@synthesize statusFlags=_statusFlags - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> workQueue;                               //@synthesize workQueue=_workQueue - In the implementation block
@property (nonatomic,retain) NSDictionary * bonjourDeviceInfo;                                     //@synthesize bonjourDeviceInfo=_bonjourDeviceInfo - In the implementation block
@property (assign,nonatomic,__weak) id<HAPAccessoryServerIPDelegatePrivate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> delegateQueue;                           //@synthesize delegateQueue=_delegateQueue - In the implementation block
@property (nonatomic,copy) NSString * accessoryServerName;                                         //@synthesize accessoryServerName=_accessoryServerName - In the implementation block
@property (nonatomic,retain) NSArray * ipServices;                                                 //@synthesize ipServices=_ipServices - In the implementation block
@property (nonatomic,retain) NSMutableArray * queuedOperations;                                    //@synthesize queuedOperations=_queuedOperations - In the implementation block
@property (nonatomic,retain) HAPAccessory * primaryAccessoryForServer;                             //@synthesize primaryAccessoryForServer=_primaryAccessoryForServer - In the implementation block
@property (nonatomic,retain) HAPHTTPClient * httpClient;                                           //@synthesize httpClient=_httpClient - In the implementation block
@property (nonatomic,copy) id pairVerifyCompletionBlock;                                           //@synthesize pairVerifyCompletionBlock=_pairVerifyCompletionBlock - In the implementation block
@property (nonatomic,retain) NSString * controllerUsername;                                        //@synthesize controllerUsername=_controllerUsername - In the implementation block
@property (nonatomic,copy) id netServiceResolveCompletionBlock;                                    //@synthesize netServiceResolveCompletionBlock=_netServiceResolveCompletionBlock - In the implementation block
@property (assign) char establishingSecureConnection;                                              //@synthesize establishingSecureConnection=_establishingSecureConnection - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)setDelegate:(id<HAPAccessoryServerIPDelegatePrivate>)arg1 ;
-(NSString *)description;
-(id<HAPAccessoryServerIPDelegatePrivate>)delegate;
-(id)name;
-(void)invalidate;
-(id)identifier;
-(NSString *)model;
-(void)setModel:(NSString *)arg1 ;
-(NSString *)deviceID;
-(NSString *)protocolVersion;
-(void)setDeviceID:(NSString *)arg1 ;
-(NSObject*<OS_dispatch_queue>)delegateQueue;
-(void)setDelegateQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setProtocolVersion:(NSString *)arg1 ;
-(void)setQueuedOperations:(NSMutableArray *)arg1 ;
-(void)setEstablishingSecureConnection:(char)arg1 ;
-(char)_parseAndValidateTXTRecord;
-(id)_deviceID;
-(HAPHTTPClient *)httpClient;
-(void)setHttpClient:(HAPHTTPClient *)arg1 ;
-(NSString *)sourceVersion;
-(unsigned)configNumber;
-(unsigned)stateNumber;
-(unsigned)statusFlags;
-(NSString *)accessoryServerName;
-(char)_checkPairedState;
-(void)_updateWithBonjourDeviceInfo:(id)arg1 ;
-(void)setBonjourDeviceInfo:(NSDictionary *)arg1 ;
-(char)hasPairings;
-(char)isPaired;
-(char)_delegateRespondsToSelector:(SEL)arg1 ;
-(char)_isSessionEstablished;
-(void)_getAttributeDatabase;
-(void)_establishSecureConnectionAndFetchAttributeDatabase;
-(NSArray *)ipServices;
-(id)_serverIdentifier;
-(char)establishingSecureConnection;
-(void)setPairVerifyCompletionBlock:(id)arg1 ;
-(void)_establishSecureSession;
-(void)_isAccessoryPublicKeyPresent:(char*)arg1 registeredWithHomeKit:(char*)arg2 ;
-(long)_pairSetupStart;
-(long)_continuePairingAfterAuthPrompt;
-(long)_pairSetupTryPassword:(id)arg1 ;
-(void)_tearDownSession;
-(void)_error:(id)arg1 forReadCharacteristicValues:(id)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(NSMutableArray *)queuedOperations;
-(void)_error:(id)arg1 forWriteCharacteristicValues:(id)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_startAddPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(char)arg3 queue:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_enableEvents:(char)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 queue:(id)arg4 ;
-(void)_queueReadCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_handleReadResponseObject:(id)arg1 type:(unsigned)arg2 httpStatus:(int)arg3 error:(id)arg4 characteristics:(id)arg5 queue:(id)arg6 completion:(/*^block*/id)arg7 ;
-(void)_handleHTTPClientErrors;
-(void)_queueWriteCharacteristicValues:(id)arg1 queue:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)_handleWriteResponseObject:(id)arg1 type:(unsigned)arg2 httpStatus:(int)arg3 error:(id)arg4 requestTuples:(id)arg5 queue:(id)arg6 completion:(/*^block*/id)arg7 ;
-(void)_queueEnableEvents:(char)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 queue:(id)arg4 ;
-(void)_handleEventResponseObject:(id)arg1 type:(unsigned)arg2 httpStatus:(int)arg3 error:(id)arg4 characteristics:(id)arg5 requestedEventState:(char)arg6 completion:(/*^block*/id)arg7 queue:(id)arg8 ;
-(char)_processEvent:(id)arg1 matchedCharacteristic:(id*)arg2 ;
-(NSDictionary *)bonjourDeviceInfo;
-(char)_parseTXTRecordDictionary:(id)arg1 ;
-(void)_setDeviceIDWithString:(id)arg1 ;
-(void)setSourceVersion:(NSString *)arg1 ;
-(void)setConfigNumber:(unsigned)arg1 ;
-(void)setStateNumber:(unsigned)arg1 ;
-(void)setStatusFlags:(unsigned)arg1 ;
-(void)_processQueuedOperationsWithError:(id)arg1 ;
-(void)_parseAttributeDatabase:(id)arg1 ;
-(HAPAccessory *)primaryAccessoryForServer;
-(id)_parseSerializedAccessory:(id)arg1 ;
-(void)_copyPropertiesForPrimaryAccessoryFromAccessory:(id)arg1 ;
-(void)setPrimaryAccessoryForServer:(HAPAccessory *)arg1 ;
-(char)_updateAccessories:(id)arg1 ;
-(char)_mergeExistingAccessory:(id)arg1 withNewAccessory:(id)arg2 ;
-(char)_mergeExistingService:(id)arg1 withNewService:(id)arg2 ;
-(long)_pairVerifyStart;
-(long)_ensureHTTPClientSetUp;
-(id)pairVerifyCompletionBlock;
-(NSString *)controllerUsername;
-(long)_handlePairSetupCompletionWithData:(id)arg1 ;
-(long)_ensurePairingSessionIsInitializedWithType:(unsigned)arg1 ;
-(long)_handlePairVerifyCompletionWithData:(id)arg1 ;
-(void)_queueAddPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(char)arg3 queue:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_handlePairingsResponseObject:(id)arg1 type:(unsigned)arg2 httpStatus:(int)arg3 httpError:(id)arg4 removeRequest:(char)arg5 completionQueue:(id)arg6 completionBlock:(/*^block*/id)arg7 ;
-(void)_removePairingWithIdentifier:(id)arg1 publicKey:(id)arg2 queue:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)httpClient:(id)arg1 didReceiveEvent:(id)arg2 ;
-(void)httpClientDidCloseConnectionDueToServer:(id)arg1 ;
-(void)httpClient:(id)arg1 didReceiveHTTPMessageWithHeaders:(id)arg2 body:(id)arg3 ;
-(void)httpClient:(id)arg1 willSendHTTPMessageWithHeaders:(id)arg2 body:(id)arg3 ;
-(id)initWithBonjourDeviceInfo:(id)arg1 keyStore:(id)arg2 ;
-(id)briefDescription;
-(id)_serverName;
-(void)updateWithBonjourDeviceInfo:(id)arg1 ;
-(id)primaryAccessory;
-(int)linkType;
-(void)discoverAccessories;
-(void)startPairing;
-(void)continuePairingAfterAuthPrompt;
-(char)tryPairingPassword:(id)arg1 error:(id*)arg2 ;
-(char)stopPairingWithError:(id*)arg1 ;
-(void)readValueForCharacteristic:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)writeValue:(id)arg1 forCharacteristic:(id)arg2 authorizationData:(id)arg3 queue:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)enableEvents:(char)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 queue:(id)arg4 ;
-(char)addPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(char)arg3 queue:(id)arg4 completion:(/*^block*/id)arg5 ;
-(char)removePairingWithIdentifier:(id)arg1 publicKey:(id)arg2 queue:(id)arg3 completion:(/*^block*/id)arg4 ;
-(char)removePairingForCurrentControllerOnQueue:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)identifyWithCompletion:(/*^block*/id)arg1 ;
-(void)setWorkQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setAccessoryServerName:(NSString *)arg1 ;
-(void)setIpServices:(NSArray *)arg1 ;
-(void)setControllerUsername:(NSString *)arg1 ;
-(id)netServiceResolveCompletionBlock;
-(void)setNetServiceResolveCompletionBlock:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(id)services;
-(void)setDelegate:(id)arg1 queue:(id)arg2 ;
@end

