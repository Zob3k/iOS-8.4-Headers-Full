/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:42:34 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/SplashBoard.framework/SplashBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SplashBoard/SplashBoard-Structs.h>
#import <SplashBoard/BSXPCCoding.h>

@class NSString, NSArray;

@interface XBApplicationLaunchCompatibilityInfo : NSObject <BSXPCCoding> {

	char _alwaysLaunchesFullScreen;
	char _launchesOpaque;
	NSString* _bundleIdentifier;
	NSString* _bundlePath;
	NSString* _sandboxPath;
	NSString* _launchStoryboardName;
	NSString* _launchNibName;
	NSArray* _launchImageInfos;

}

@property (nonatomic,copy) NSString * bundleIdentifier;                    //@synthesize bundleIdentifier=_bundleIdentifier - In the implementation block
@property (nonatomic,copy) NSString * bundlePath;                          //@synthesize bundlePath=_bundlePath - In the implementation block
@property (nonatomic,copy) NSString * sandboxPath;                         //@synthesize sandboxPath=_sandboxPath - In the implementation block
@property (nonatomic,copy) NSString * launchStoryboardName;                //@synthesize launchStoryboardName=_launchStoryboardName - In the implementation block
@property (nonatomic,copy) NSString * launchNibName;                       //@synthesize launchNibName=_launchNibName - In the implementation block
@property (assign,nonatomic) char alwaysLaunchesFullScreen;                //@synthesize alwaysLaunchesFullScreen=_alwaysLaunchesFullScreen - In the implementation block
@property (assign,nonatomic) char launchesOpaque;                          //@synthesize launchesOpaque=_launchesOpaque - In the implementation block
@property (nonatomic,retain) NSArray * launchImageInfos;                   //@synthesize launchImageInfos=_launchImageInfos - In the implementation block
@property (nonatomic,readonly) char allowsSavingLaunchImages; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_compatibilityInfoForBundleIdentifier:(id)arg1 creatingIfNecessaryWithBundle:(id)arg2 andSandboxPath:(id)arg3 lazy:(char)arg4 ;
+(id)compatibilityInfoForBundleIdentifier:(id)arg1 ;
+(id)_compatibilityInfoForBundleIdentifier:(id)arg1 creatingIfNecessaryWithBundle:(id)arg2 andSandboxPath:(id)arg3 ;
+(void)removeCachedLaunchImagesInfoForBundleIdentifier:(id)arg1 forgetApp:(char)arg2 ;
+(void)removeCompatibilityInfoForBundleIdentifier:(id)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(NSString *)bundleIdentifier;
-(NSString *)bundlePath;
-(id)initWithBundle:(id)arg1 ;
-(id)initWithXPCDictionary:(id)arg1 ;
-(void)encodeWithXPCDictionary:(id)arg1 ;
-(void)setBundlePath:(NSString *)arg1 ;
-(void)setBundleIdentifier:(NSString *)arg1 ;
-(void)setSandboxPath:(NSString *)arg1 ;
-(void)purgeSavedImages;
-(id)appLaunchImagePathForSceneID:(id)arg1 downscaled:(char)arg2 ;
-(id)savedLaunchImagesDirectory;
-(void)_writeOutChanges;
-(id)_infoForLaunchImageWithRequest:(id)arg1 createIfNeeded:(char)arg2 launchingOrientation:(int*)arg3 ;
-(id)_pathForLaunchImageWithName:(id)arg1 sceneID:(id)arg2 scale:(float)arg3 size:(CGSize)arg4 downscaled:(char)arg5 interfaceOrientation:(int)arg6 ;
-(id)infoForLaunchImageWithRequest:(id)arg1 launchingOrientation:(int*)arg2 ;
-(NSString *)sandboxPath;
-(id)_snapshotContainerName;
-(id)_baseAppLaunchImagePath;
-(id)_snapshotSceneContainerNameForSceneID:(id)arg1 ;
-(char)allowsSavingLaunchImages;
-(id)pathForLaunchImageWithRequest:(id)arg1 launchingOrientation:(int*)arg2 ;
-(void)addLaunchImageForRequest:(id)arg1 finalOrientation:(int)arg2 ifCreatedAt:(/*^block*/id)arg3 ;
-(NSString *)launchStoryboardName;
-(void)setLaunchStoryboardName:(NSString *)arg1 ;
-(NSString *)launchNibName;
-(void)setLaunchNibName:(NSString *)arg1 ;
-(char)alwaysLaunchesFullScreen;
-(void)setAlwaysLaunchesFullScreen:(char)arg1 ;
-(char)launchesOpaque;
-(void)setLaunchesOpaque:(char)arg1 ;
-(NSArray *)launchImageInfos;
-(void)setLaunchImageInfos:(NSArray *)arg1 ;
@end

