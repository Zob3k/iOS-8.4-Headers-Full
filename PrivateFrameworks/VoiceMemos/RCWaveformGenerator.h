/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:43:13 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_semaphore, OS_dispatch_queue;
#import <VoiceMemos/VoiceMemos-Structs.h>
@class NSObject, NSHashTable, NSMutableArray, RCExtAudioFilePipe, NSOperationQueue, NSError;

@interface RCWaveformGenerator : NSObject {

	int _state;
	NSObject*<OS_dispatch_semaphore> _digestPausedSemaphore;
	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_dispatch_queue> _notificationQueue;
	double _totalDigestedTime;
	double _totalFlushedTime;
	NSHashTable* _weakObservers;
	NSMutableArray* _internalFinishedLoadingBlockUUIDs;
	NSMutableArray* _internalFinishedLoadingBlocks;
	RCExtAudioFilePipe* _activeExtAudioFile;
	NSOperationQueue* _loadingQueue;
	PowerMeter _samplePowerMeter;
	char _isSampleRateKnown;
	vector<float, std::__1::allocator<float> >* _powerLevelBuffer;
	float _powerLevelBufferLastPushedValue;
	unsigned _powerLevelsConsumedSinceLastFlush;
	unsigned _framesConsumedSinceLastFlush;
	int _framesNeededForNextDB;
	int _framesNeededForNextFlush;
	NSError* _loadingError;
	unsigned _pauseCount;
	char _canceled;
	int _overviewUnitsPerSecond;
	double _segmentFlushInterval;

}

@property (nonatomic,readonly) double segmentFlushInterval;              //@synthesize segmentFlushInterval=_segmentFlushInterval - In the implementation block
@property (assign,nonatomic) int overviewUnitsPerSecond;                 //@synthesize overviewUnitsPerSecond=_overviewUnitsPerSecond - In the implementation block
@property (nonatomic,readonly) int state;                                //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) char canceled;                            //@synthesize canceled=_canceled - In the implementation block
@property (nonatomic,readonly) char loadable; 
@property (nonatomic,readonly) char idle; 
@property (nonatomic,readonly) char finished; 
@property (assign,nonatomic) char paused; 
-(char)_isCanceled;
-(int)state;
-(void)setPaused:(char)arg1 ;
-(char)paused;
-(char)canceled;
-(char)finished;
-(void)flushPendingCapturedSampleBuffers;
-(void)beginLoading;
-(id)initWithSegmentFlushInterval:(double)arg1 ;
-(int)overviewUnitsPerSecond;
-(void)setOverviewUnitsPerSecond:(int)arg1 ;
-(void)_onLoadingQueue_flushRemainingData;
-(void)_appendPowerMeterValuesFromSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)_appendPowerMeterValuesFromDataInAudioFile:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(void)_appendAveragePowerLevelsByDigestingWaveformSegments:(id)arg1 ;
-(void)_appendAveragePowerLevel:(float)arg1 ;
-(void)_performObserversBlock:(/*^block*/id)arg1 ;
-(void)_finishLoadingByTerminating:(char)arg1 loadingFinishedBlockTimeoutDate:(id)arg2 loadingFinishedBlock:(/*^block*/id)arg3 ;
-(void)_performLoadingFinishedBlock:(/*^block*/id)arg1 internalBlockUUID:(id)arg2 isTimeout:(char)arg3 ;
-(void)_performInternalFinishedLoadingBlocksAndFinishObservers;
-(void)_onLoadingQueue_pushAveragePowerLevel:(float)arg1 ;
-(void)_onLoadingQueue_appendPowerMeterValuesFromRawAudioData:(void*)arg1 frameCount:(int)arg2 format:(const AudioStreamBasicDescription*)arg3 isPredigest:(char)arg4 ;
-(void)terminateLoadingImmediately;
-(void)_onQueue_appendAveragePowerLevelsByDigestingTimeRange:(SCD_Struct_RC4)arg1 inExtAudioFile:(id)arg2 sourceFormat:(AudioStreamBasicDescription*)arg3 outputFormat:(AudioStreamBasicDescription*)arg4 ;
-(id)initWithSamplingParametersFromGenerator:(id)arg1 ;
-(void)_appendAveragePowerLevelsByDigestingTimeRange:(SCD_Struct_RC4)arg1 inExtAudioFile:(id)arg2 sourceFormat:(AudioStreamBasicDescription*)arg3 outputFormat:(AudioStreamBasicDescription*)arg4 ;
-(void)_onLoadingQueue_appendSegment:(id)arg1 ;
-(void)_onLoadingQueue_flushWithNextSegmentWithEndTime:(double)arg1 isPredigest:(char)arg2 ;
-(void)_onLoadingQueue_digestAveragePowerLevel:(float)arg1 ;
-(void)_onLoadingQueue_flushWaveformSegment:(id)arg1 ;
-(void)addSegmentOutputObserver:(id)arg1 ;
-(void)removeSegmentOutputObserver:(id)arg1 ;
-(char)appendAveragePowerLevelsByDigestingSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(char)appendAveragePowerLevelsByDigestingContentsOfAudioFileURL:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(char)appendAveragePowerLevelsByDigestingWaveformSegments:(id)arg1 ;
-(char)appendAveragePowerLevel:(float)arg1 ;
-(char)appendAveragePowerLevelsByDigestingWaveform:(id)arg1 ;
-(char)loadable;
-(char)idle;
-(void)finishLoadingWithCompletionTimeoutDate:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(double)totalFlushedTime;
-(double)totalDigestedTime;
-(id)synchronouslyApproximateWaveformForAVContentURL:(id)arg1 byReadingCurrentFileAheadTimeRange:(SCD_Struct_RC4)arg2 ;
-(double)segmentFlushInterval;
@end

