/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:43:14 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

typedef struct opaqueCMSampleBuffer* opaqueCMSampleBufferRef;

typedef struct {
	double field1;
	double field2;
} SCD_Struct_RC1;

typedef struct OpaqueExtAudioFile* OpaqueExtAudioFileRef;

typedef struct AudioStreamBasicDescription {
	double mSampleRate;
	unsigned mFormatID;
	unsigned mFormatFlags;
	unsigned mBytesPerPacket;
	unsigned mFramesPerPacket;
	unsigned mBytesPerFrame;
	unsigned mChannelsPerFrame;
	unsigned mBitsPerChannel;
	unsigned mReserved;
} AudioStreamBasicDescription;

typedef struct {
	double beginTime;
	double endTime;
} SCD_Struct_RC4;

typedef struct AudioUnitMeterClipping {
	float peakValueSinceLastCall;
	unsigned char sawInfinity;
	unsigned char sawNotANumber;
} AudioUnitMeterClipping;

typedef struct PowerMeter {
	BOOL mInstantaneousMode;
	double mSampleRate;
	double mPeakDecay1;
	double mPeakDecay;
	double mDecay1;
	double mDecay;
	int mPrevBlockSize;
	int mPeakHoldCount;
	double mPeak;
	double mAveragePowerPeak;
	double mMaxPeak;
	AudioUnitMeterClipping mClipping;
	double mAveragePowerF;
	float m_vAvePower[16];
	int mAveragePowerI;
} PowerMeter;

typedef struct _compressed_pair<float *, std::__1::allocator<float> > {
	float __first_;
} compressed_pair<float *, std::__1::allocator<float> >;

typedef struct vector<float, std::__1::allocator<float> > {
	float __begin_;
	float __end_;
	compressed_pair<float *, std::__1::allocator<float> > __end_cap_;
} vector<float, std::__1::allocator<float> >;

typedef struct _NSZone* NSZoneRef;

typedef struct __CFArray* CFArrayRef;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct {
	long long value;
	int timescale;
	unsigned flags;
	long long epoch;
} SCD_Struct_RC14;

typedef struct {
	float scale;
	float vDeltaWaveformToTimeBaseline;
	float vDeltaTimeBaselineToTitleBaseline;
	float vDeltaTitleBaselineToDateBaseline;
	float vDeltaDateBaselineToControlsTop;
	float vDeltaControlsBottomToBottom;
	float vDeltaControlsTopToNavigationBottom;
	char hIsWaveformFlushToEdges;
	float hDeltaAdditionalInsetFromWaveformEdge;
	float hDeltaControlButtonsSpacing;
	float hDeltaTrimProgressInset;
	float hDeltaAcousticAnnotationLabelToWaveformRight;
	float hTrimModeInset;
	float hDetailNavigationBarInset;
	float hPresentedRecordMemoHeight;
	float vDeltaLockNotificationListTop;
	float vDeltaLockNotificationListTopToRecordingTextBaseline;
	float vDeltaLockAbsoluteTopToWaveformTop;
	float vDeltaLockNotificationListBottom;
	float vDeltaLockNotificationListBottomToRecordingTimeBaseline;
} SCD_Struct_RC15;

typedef struct UIEdgeInsets {
	float top;
	float left;
	float bottom;
	float right;
} UIEdgeInsets;

typedef struct CGContext* CGContextRef;

typedef struct CGGradient* CGGradientRef;

