/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:43:14 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VoiceMemos/VoiceMemos-Structs.h>
#import <VoiceMemos/NSSecureCoding.h>
#import <VoiceMemos/NSCopying.h>

@interface RCAVState : NSObject <NSSecureCoding, NSCopying> {

	int _AVCaptureState;
	int _AVPreviewState;

}

@property (assign,nonatomic) int AVCaptureState;                                        //@synthesize AVCaptureState=_AVCaptureState - In the implementation block
@property (nonatomic,readonly) char isCaptureInactive; 
@property (nonatomic,readonly) char isCapturePreparing; 
@property (nonatomic,readonly) char isCaptureActive; 
@property (nonatomic,readonly) char isCapturePaused; 
@property (nonatomic,readonly) char isCaptureActiveOrPreparing; 
@property (nonatomic,readonly) char isCaptureActiveOrPreparingOrResumable; 
@property (nonatomic,readonly) char isPreviewInactive; 
@property (nonatomic,readonly) char isPreviewPreparing; 
@property (nonatomic,readonly) char isPreviewActive; 
@property (assign,nonatomic) int AVPreviewState;                                        //@synthesize AVPreviewState=_AVPreviewState - In the implementation block
@property (nonatomic,readonly) char isPreviewActiveOrPreparing; 
+(char)supportsSecureCoding;
+(id)inactiveState;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isPreviewActive;
-(char)isCaptureActive;
-(char)isCapturePaused;
-(id)assetStateByChangingToCaptureState:(int)arg1 ;
-(id)assetStateByChangingToPreviewState:(int)arg1 ;
-(void)setAVCaptureState:(int)arg1 ;
-(int)AVCaptureState;
-(id)assetStateByChangingToPreviewRate:(float)arg1 ;
-(char)isPreviewActiveOrPreparing;
-(int)AVPreviewState;
-(char)isCaptureActiveOrPreparing;
-(void)setAVPreviewState:(int)arg1 ;
-(id)_assetStateByTransitioningItermediateStatesToGoalStates;
-(id)_assetStateByChangingToCaptureState:(int)arg1 previewState:(int)arg2 ;
-(char)isCapturePreparing;
-(char)isPreviewPreparing;
-(id)assetStateByCaptureState;
-(id)assetStateByTogglingPreview;
-(char)isCaptureInactive;
-(char)isPreviewInactive;
-(char)isCaptureActiveOrPreparingOrResumable;
@end

