/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:37:54 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/QuartzCore.framework/QuartzCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <QuartzCore/QuartzCore-Structs.h>
#import <QuartzCore/NSCopying.h>
#import <QuartzCore/NSCoding.h>

@class NSString;

@interface CALight : NSObject <NSCopying, NSCoding> {

	void* _attr;
	void* _priv;

}

@property (copy) NSString * type; 
@property (copy) NSString * name; 
@property (getter=isEnabled) char enabled; 
@property (assign) CGColorRef color; 
@property (assign) float intensity; 
@property (assign) float ambientIntensity; 
@property (assign) float diffuseIntensity; 
@property (assign) float specularIntensity; 
@property (assign) CAPoint3D direction; 
@property (retain) id image; 
@property (assign) float imageRotation; 
@property (copy) NSString * imageBlendMode; 
@property (assign) float imageNormalAngle; 
@property (assign) CAPoint3D position; 
@property (assign) float falloffDistance; 
@property (assign) float falloff; 
@property (assign) float coneAngle; 
@property (assign) float coneEdgeSoftness; 
+(id)defaultValueForKey:(id)arg1 ;
+(void)CAMLParserStartElement:(id)arg1 ;
+(id)lightWithType:(id)arg1 ;
+(id)CA_CAMLPropertyForKey:(id)arg1 ;
-(void)CAMLParser:(id)arg1 setValue:(id)arg2 forKey:(id)arg3 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLTypeForKey:(id)arg1 ;
-(Object*)CA_copyRenderValue;
-(char)shouldArchiveValueForKey:(id)arg1 ;
-(float)ambientIntensity;
-(void)setAmbientIntensity:(float)arg1 ;
-(float)diffuseIntensity;
-(void)setDiffuseIntensity:(float)arg1 ;
-(float)specularIntensity;
-(void)setSpecularIntensity:(float)arg1 ;
-(float)falloffDistance;
-(void)setFalloffDistance:(float)arg1 ;
-(float)falloff;
-(void)setFalloff:(float)arg1 ;
-(float)coneAngle;
-(void)setConeAngle:(float)arg1 ;
-(float)coneEdgeSoftness;
-(void)setConeEdgeSoftness:(float)arg1 ;
-(float)imageRotation;
-(void)setImageRotation:(float)arg1 ;
-(float)imageNormalAngle;
-(void)setImageNormalAngle:(float)arg1 ;
-(NSString *)imageBlendMode;
-(void)setImageBlendMode:(NSString *)arg1 ;
-(float)intensity;
-(void)setIntensity:(float)arg1 ;
-(id)valueForKey:(id)arg1 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(void)dealloc;
-(void)setImage:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(void)setType:(NSString *)arg1 ;
-(NSString *)type;
-(void)setEnabled:(char)arg1 ;
-(char)isEnabled;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)image;
-(void)setPosition:(CAPoint3D)arg1 ;
-(id)valueForKeyPath:(id)arg1 ;
-(id)initWithType:(id)arg1 ;
-(void)setValue:(id)arg1 forKeyPath:(id)arg2 ;
-(CAPoint3D)position;
-(void)setDirection:(CAPoint3D)arg1 ;
-(CAPoint3D)direction;
-(CGColorRef)color;
-(void)setColor:(CGColorRef)arg1 ;
@end

