/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:38:01 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/SpriteKit.framework/SpriteKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpriteKit/SpriteKit-Structs.h>
#import <SpriteKit/SKNode.h>

@class SKTexture, SKNode, SKKeyframeSequence, UIColor, SKAction, SKShader;

@interface SKEmitterNode : SKNode {

	SKTexture* _particleTexture;
	SKCEmitterSprite* _eSprite;
	SKNode* _target;
	SKKeyframeSequence* _colorSequence;
	SKKeyframeSequence* _colorBlendSequence;
	SKKeyframeSequence* _alphaSequence;
	SKKeyframeSequence* _scaleSequence;
	SKKeyframeSequence* _rotationSequence;
	SKKeyframeSequence* _fieldInfluenceSequence;

}

@property (nonatomic,retain) SKTexture * particleTexture; 
@property (assign,nonatomic) float particleZPosition; 
@property (assign,nonatomic) float particleZPositionRange; 
@property (assign,nonatomic) float particleZPositionSpeed; 
@property (assign,nonatomic) int particleBlendMode; 
@property (nonatomic,retain) UIColor * particleColor; 
@property (assign,nonatomic) float particleColorRedRange; 
@property (assign,nonatomic) float particleColorGreenRange; 
@property (assign,nonatomic) float particleColorBlueRange; 
@property (assign,nonatomic) float particleColorAlphaRange; 
@property (assign,nonatomic) float particleColorRedSpeed; 
@property (assign,nonatomic) float particleColorGreenSpeed; 
@property (assign,nonatomic) float particleColorBlueSpeed; 
@property (assign,nonatomic) float particleColorAlphaSpeed; 
@property (nonatomic,retain) SKKeyframeSequence * particleColorSequence; 
@property (assign,nonatomic) float particleColorBlendFactor; 
@property (assign,nonatomic) float particleColorBlendFactorRange; 
@property (assign,nonatomic) float particleColorBlendFactorSpeed; 
@property (nonatomic,retain) SKKeyframeSequence * particleColorBlendFactorSequence; 
@property (assign,nonatomic) CGPoint particlePosition; 
@property (assign,nonatomic) CGVector particlePositionRange; 
@property (assign,nonatomic) float particleSpeed; 
@property (assign,nonatomic) float particleSpeedRange; 
@property (assign,nonatomic) float emissionAngle; 
@property (assign,nonatomic) float emissionAngleRange; 
@property (assign,nonatomic) float xAcceleration; 
@property (assign,nonatomic) float yAcceleration; 
@property (assign,nonatomic) float particleBirthRate; 
@property (assign,nonatomic) unsigned numParticlesToEmit; 
@property (assign,nonatomic) float particleLifetime; 
@property (assign,nonatomic) float particleLifetimeRange; 
@property (assign,nonatomic) float particleRotation; 
@property (assign,nonatomic) float particleRotationRange; 
@property (assign,nonatomic) float particleRotationSpeed; 
@property (assign,nonatomic) CGSize particleSize; 
@property (assign,nonatomic) float particleScale; 
@property (assign,nonatomic) float particleScaleRange; 
@property (assign,nonatomic) float particleScaleSpeed; 
@property (nonatomic,retain) SKKeyframeSequence * particleScaleSequence; 
@property (assign,nonatomic) float particleAlpha; 
@property (assign,nonatomic) float particleAlphaRange; 
@property (assign,nonatomic) float particleAlphaSpeed; 
@property (nonatomic,retain) SKKeyframeSequence * particleAlphaSequence; 
@property (nonatomic,copy) SKAction * particleAction; 
@property (assign,nonatomic) unsigned fieldBitMask; 
@property (assign,nonatomic,__weak) SKNode * targetNode; 
@property (nonatomic,retain) SKShader * shader; 
-(float)xAcceleration;
-(float)yAcceleration;
-(void)setXAcceleration:(float)arg1 ;
-(void)setYAcceleration:(float)arg1 ;
-(id)physicsWorld;
-(void)setParticleColor:(UIColor *)arg1 ;
-(UIColor *)particleColor;
-(CGSize)particleSize;
-(void)setParticleSize:(CGSize)arg1 ;
-(char)isEqualToNode:(id)arg1 ;
-(float)particleBirthRate;
-(unsigned)numParticlesToEmit;
-(SKNode *)targetNode;
-(float)particleLifetime;
-(float)particleLifetimeRange;
-(CGPoint)particlePosition;
-(CGVector)particlePositionRange;
-(float)particleZPosition;
-(float)particleZPositionRange;
-(float)particleSpeed;
-(float)particleSpeedRange;
-(float)emissionAngle;
-(float)emissionAngleRange;
-(float)particleRotation;
-(float)particleRotationRange;
-(float)particleRotationSpeed;
-(SKTexture *)particleTexture;
-(SKKeyframeSequence *)particleColorSequence;
-(float)particleColorAlphaRange;
-(float)particleColorBlueRange;
-(float)particleColorGreenRange;
-(float)particleColorRedRange;
-(float)particleColorAlphaSpeed;
-(float)particleColorBlueSpeed;
-(float)particleColorGreenSpeed;
-(float)particleColorRedSpeed;
-(SKKeyframeSequence *)particleColorBlendFactorSequence;
-(float)particleColorBlendFactor;
-(float)particleColorBlendFactorRange;
-(float)particleColorBlendFactorSpeed;
-(int)particleBlendMode;
-(SKKeyframeSequence *)particleAlphaSequence;
-(float)particleAlpha;
-(float)particleAlphaRange;
-(float)particleAlphaSpeed;
-(void)setTargetNode:(SKNode *)arg1 ;
-(void)setParticleTexture:(SKTexture *)arg1 ;
-(void)setParticlePosition:(CGPoint)arg1 ;
-(void)setParticlePositionRange:(CGVector)arg1 ;
-(void)setParticleZPositionSpeed:(float)arg1 ;
-(void)setParticleBirthRate:(float)arg1 ;
-(void)setParticleAction:(SKAction *)arg1 ;
-(void)setNumParticlesToEmit:(unsigned)arg1 ;
-(void)setEmissionDistance:(float)arg1 ;
-(void)setEmissionDistanceRange:(float)arg1 ;
-(void)setFieldBitMask:(unsigned)arg1 ;
-(void)setParticleAlphaSequence:(SKKeyframeSequence *)arg1 ;
-(void)setParticleColorSequence:(SKKeyframeSequence *)arg1 ;
-(void)setParticleColorBlendFactorSequence:(SKKeyframeSequence *)arg1 ;
-(void)setParticleScaleSequence:(SKKeyframeSequence *)arg1 ;
-(void)setParticleRotationSequence:(id)arg1 ;
-(void)setFieldInfluenceSequence:(id)arg1 ;
-(void)setShader:(SKShader *)arg1 ;
-(SKAction *)particleAction;
-(float)emissionDistance;
-(float)emissionDistanceRange;
-(unsigned)fieldBitMask;
-(SKKeyframeSequence *)particleScaleSequence;
-(id)particleRotationSequence;
-(id)fieldInfluenceSequence;
-(SKShader *)shader;
-(void)setParticleColorRedRange:(float)arg1 ;
-(void)setParticleColorGreenRange:(float)arg1 ;
-(void)setParticleColorBlueRange:(float)arg1 ;
-(void)setParticleColorAlphaRange:(float)arg1 ;
-(void)setParticleColorRedSpeed:(float)arg1 ;
-(void)setParticleColorGreenSpeed:(float)arg1 ;
-(void)setParticleColorBlueSpeed:(float)arg1 ;
-(void)setParticleColorAlphaSpeed:(float)arg1 ;
-(void)setParticleColorBlendFactor:(float)arg1 ;
-(void)setParticleColorBlendFactorRange:(float)arg1 ;
-(void)setParticleColorBlendFactorSpeed:(float)arg1 ;
-(void)setParticleLifetime:(float)arg1 ;
-(void)setParticleLifetimeRange:(float)arg1 ;
-(void)setParticleRotation:(float)arg1 ;
-(void)setParticleRotationRange:(float)arg1 ;
-(void)setParticleRotationSpeed:(float)arg1 ;
-(float)particleScale;
-(void)setParticleScale:(float)arg1 ;
-(float)particleScaleRange;
-(void)setParticleScaleRange:(float)arg1 ;
-(float)particleScaleSpeed;
-(void)setParticleScaleSpeed:(float)arg1 ;
-(void)setParticleAlpha:(float)arg1 ;
-(void)setParticleAlphaRange:(float)arg1 ;
-(void)setParticleAlphaSpeed:(float)arg1 ;
-(void)setParticleBlendMode:(int)arg1 ;
-(void)setParticleSpeed:(float)arg1 ;
-(void)setParticleSpeedRange:(float)arg1 ;
-(void)setEmissionAngle:(float)arg1 ;
-(void)setEmissionAngleRange:(float)arg1 ;
-(void)setParticleZPosition:(float)arg1 ;
-(void)setParticleZPositionRange:(float)arg1 ;
-(char)densityBased;
-(void)setDensityBased:(char)arg1 ;
-(float)particleDensity;
-(void)setParticleDensity:(float)arg1 ;
-(void)setPhysicsWorld:(id)arg1 ;
-(float)particleZPositionSpeed;
-(void)resetSimulation;
-(void)advanceSimulationTime:(double)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)containsPoint:(CGPoint)arg1 ;
-(void)setPaused:(char)arg1 ;
@end

