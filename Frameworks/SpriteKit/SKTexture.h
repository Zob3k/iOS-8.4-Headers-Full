/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:38:01 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/SpriteKit.framework/SpriteKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpriteKit/SpriteKit-Structs.h>
#import <SpriteKit/NSCopying.h>
#import <SpriteKit/NSCoding.h>

@class NSString, NSArray, CIFilter, SKTextureCache;

@interface SKTexture : NSObject <NSCopying, NSCoding> {

	char _shouldGenerateMipmaps;
	char _didGenerateMipmaps;
	char _isPath;
	char _isData;
	NSString* _imgName;
	NSArray* _searchPaths;
	CGRect _textRect;
	CGRect _textCoords;
	char _disableAlpha;
	char _isRotated;
	CGPoint _cropScale;
	CGPoint _cropOffset;
	int _alignment;
	int _rowLength;
	char _isCompressed;
	int _compressedSize;
	unsigned _compressedFormat;
	CIFilter* _filter;
	SKTexture* _originalTexture;
	unsigned _textureTarget;
	NSString* _originalAtlasName;
	NSString* _subTextureName;
	SKTextureCache* _textureCache;
	unsigned* _alphaMap;
	CGSize _alphaMapSize;

}

@property (assign,nonatomic) unsigned textureTarget; 
@property (assign,nonatomic) char isRotated; 
@property (nonatomic,readonly) char hasAlpha; 
@property (assign,nonatomic) int wrapMode; 
@property (nonatomic,readonly) NSString * imageNameOrPath; 
@property (assign,nonatomic) int filteringMode; 
@property (assign,nonatomic) char usesMipmaps; 
@property (nonatomic,readonly) CGSize pixelSize; 
@property (nonatomic,readonly) char useAlpha; 
@property (assign,nonatomic) char disableAlpha; 
@property (nonatomic,readonly) char isRepeatable; 
@property (assign,nonatomic) CGPoint cropScale;                         //@synthesize cropScale=_cropScale - In the implementation block
@property (assign,nonatomic) CGPoint cropOffset;                        //@synthesize cropOffset=_cropOffset - In the implementation block
@property (nonatomic,copy) NSString * originalAtlasName;                //@synthesize originalAtlasName=_originalAtlasName - In the implementation block
@property (nonatomic,copy) NSString * subTextureName;                   //@synthesize subTextureName=_subTextureName - In the implementation block
@property (nonatomic,readonly) unsigned* alphaMap;                      //@synthesize alphaMap=_alphaMap - In the implementation block
@property (nonatomic,readonly) CGSize alphaMapSize;                     //@synthesize alphaMapSize=_alphaMapSize - In the implementation block
+(void)deleteUnusedTextures;
+(id)_textureWithImageNamed:(id)arg1 ;
+(id)textureWithImageNamed:(id)arg1 ;
+(id)textureWithRect:(CGRect)arg1 inTexture:(id)arg2 ;
+(void)registerTextureCache:(id)arg1 forName:(id)arg2 ;
+(void)preloadTextures:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
+(id)lookupTextureCacheForName:(id)arg1 ;
+(id)textureWithCGImage:(CGImageRef)arg1 pointSize:(CGSize)arg2 ;
+(id)textureWithData:(id)arg1 size:(CGSize)arg2 ;
+(void)_addTextureToPreloadlist:(id)arg1 ;
+(id)textureWithImageNamed:(id)arg1 rect:(CGRect)arg2 ;
+(id)textureVectorNoiseWithSmoothness:(float)arg1 size:(CGSize)arg2 ;
+(id)textureNoiseWithSmoothness:(float)arg1 size:(CGSize)arg2 grayscale:(char)arg3 ;
+(id)textureWithCGImage:(CGImageRef)arg1 ;
+(id)textureWithImage:(id)arg1 ;
+(id)textureWithData:(id)arg1 size:(CGSize)arg2 flipped:(char)arg3 ;
+(id)textureWithData:(id)arg1 size:(CGSize)arg2 rowLength:(unsigned)arg3 alignment:(unsigned)arg4 ;
+(void)preloadTextures;
+(id)compressedTextureWithData:(id)arg1 ;
+(id)compressedTextureWithData:(id)arg1 size:(CGSize)arg2 bitsPerPixel:(unsigned)arg3 hasAlpha:(char)arg4 ;
+(id)textureWithImagePath:(id)arg1 ;
+(id)_textureByTransferingData:(char*)arg1 size:(CGSize)arg2 ;
+(id)_textureByTransferingData:(char*)arg1 size:(CGSize)arg2 rowLength:(unsigned)arg3 alignment:(unsigned)arg4 ;
+(id)_textureWithGLTextureId:(unsigned)arg1 size:(CGSize)arg2 ;
+(void)updateTextures;
-(int)filteringMode;
-(char)usesMipmaps;
-(CGRect)textureRect;
-(int)glTextureId;
-(char)hasAlpha;
-(unsigned)textureTarget;
-(NSString *)imageNameOrPath;
-(void)setFilteringMode:(int)arg1 ;
-(unsigned*)alphaMap;
-(CGSize)alphaMapSize;
-(int)wrapMode;
-(id)imgName;
-(id)textureByGeneratingNormalMapWithSmoothness:(float)arg1 contrast:(float)arg2 ;
-(id)_generateNormalMap:(float)arg1 contrast:(float)arg2 multiPass:(unsigned long)arg3 ;
-(void)_ensureImageData;
-(char)loadImageDataFromPVRData:(id)arg1 ;
-(void)loadImageData;
-(char)loadImageDataFromPVRGZData:(id)arg1 ;
-(void)loadImageDataFromCGImage:(CGImageRef)arg1 pointsSize:(CGSize)arg2 ;
-(void)initTextureCacheWithImageData;
-(id)_copyImageData;
-(id)initWithImageNamed:(id)arg1 ;
-(CGPoint)cropScale;
-(id)_textureCache;
-(id)textureByGeneratingNormalMap;
-(void)generateAlphaMapOfSize:(CGSize)arg1 fromImage:(CGImageRef)arg2 ;
-(char)alphaTestX:(float)arg1 y:(float)arg2 ;
-(CGImageRef)alphaMask;
-(void)setTextureDimension:(const CGSize*)arg1 withPixelSize:(const CGSize*)arg2 ;
-(void)preloadWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)initWithImagePath:(id)arg1 ;
-(char)useAlpha;
-(void)setDisableAlpha:(char)arg1 ;
-(char)disableAlpha;
-(char)isInMemory;
-(id)textureByApplyingCIFilter:(id)arg1 ;
-(void)setUsesMipmaps:(char)arg1 ;
-(void)_loadOnTextureQueue;
-(char)isRepeatable;
-(void)preload;
-(void)setCropScale:(CGPoint)arg1 ;
-(CGPoint)cropOffset;
-(void)setCropOffset:(CGPoint)arg1 ;
-(NSString *)originalAtlasName;
-(void)setOriginalAtlasName:(NSString *)arg1 ;
-(NSString *)subTextureName;
-(void)setSubTextureName:(NSString *)arg1 ;
-(CGImageRef)_createCGImage;
-(id)_initWithGLTextureId:(unsigned)arg1 size:(CGSize)arg2 ;
-(CGImageRef)_newTextureFromGLCache;
-(CGImageRef)_rotateCGImage:(CGImageRef)arg1 ;
-(void)setIsRotated:(char)arg1 ;
-(void)setTextureTarget:(unsigned)arg1 ;
-(void)_savePngFromGLCache:(id)arg1 ;
-(void)dealloc;
-(CGSize)size;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isRotated;
-(void)commonInit;
-(void)load;
-(void)unload;
-(void)setWrapMode:(int)arg1 ;
-(CGSize)pixelSize;
@end

