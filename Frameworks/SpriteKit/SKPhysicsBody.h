/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:38:02 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/SpriteKit.framework/SpriteKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpriteKit/SpriteKit-Structs.h>
#import <SpriteKit/NSCopying.h>
#import <SpriteKit/NSCoding.h>

@class NSArray, SKNode;

@interface SKPhysicsBody : NSObject <NSCopying, NSCoding> {

	char _dynamic;
	char _usesPreciseCollisionDetection;
	char _allowsRotation;
	char _pinned;
	char _resting;
	char _affectedByGravity;
	float _friction;
	float _charge;
	float _restitution;
	float _linearDamping;
	float _angularDamping;
	float _density;
	float _mass;
	float _area;
	unsigned _fieldBitMask;
	unsigned _categoryBitMask;
	unsigned _collisionBitMask;
	unsigned _contactTestBitMask;
	NSArray* _joints;
	SKNode* _node;
	float _angularVelocity;
	CGVector _velocity;

}

@property (assign,getter=isDynamic,nonatomic) char dynamic;                   //@synthesize dynamic=_dynamic - In the implementation block
@property (assign,nonatomic) char usesPreciseCollisionDetection;              //@synthesize usesPreciseCollisionDetection=_usesPreciseCollisionDetection - In the implementation block
@property (assign,nonatomic) char allowsRotation;                             //@synthesize allowsRotation=_allowsRotation - In the implementation block
@property (assign,nonatomic) char pinned;                                     //@synthesize pinned=_pinned - In the implementation block
@property (assign,getter=isResting,nonatomic) char resting;                   //@synthesize resting=_resting - In the implementation block
@property (assign,nonatomic) float friction;                                  //@synthesize friction=_friction - In the implementation block
@property (assign,nonatomic) float charge;                                    //@synthesize charge=_charge - In the implementation block
@property (assign,nonatomic) float restitution;                               //@synthesize restitution=_restitution - In the implementation block
@property (assign,nonatomic) float linearDamping;                             //@synthesize linearDamping=_linearDamping - In the implementation block
@property (assign,nonatomic) float angularDamping;                            //@synthesize angularDamping=_angularDamping - In the implementation block
@property (assign,nonatomic) float density;                                   //@synthesize density=_density - In the implementation block
@property (assign,nonatomic) float mass;                                      //@synthesize mass=_mass - In the implementation block
@property (nonatomic,readonly) float area;                                    //@synthesize area=_area - In the implementation block
@property (assign,nonatomic) char affectedByGravity;                          //@synthesize affectedByGravity=_affectedByGravity - In the implementation block
@property (assign,nonatomic) unsigned fieldBitMask;                           //@synthesize fieldBitMask=_fieldBitMask - In the implementation block
@property (assign,nonatomic) unsigned categoryBitMask;                        //@synthesize categoryBitMask=_categoryBitMask - In the implementation block
@property (assign,nonatomic) unsigned collisionBitMask;                       //@synthesize collisionBitMask=_collisionBitMask - In the implementation block
@property (assign,nonatomic) unsigned contactTestBitMask;                     //@synthesize contactTestBitMask=_contactTestBitMask - In the implementation block
@property (nonatomic,readonly) NSArray * joints;                              //@synthesize joints=_joints - In the implementation block
@property (nonatomic,__weak,readonly) SKNode * node;                          //@synthesize node=_node - In the implementation block
@property (assign,nonatomic) CGVector velocity;                               //@synthesize velocity=_velocity - In the implementation block
@property (assign,nonatomic) float angularVelocity;                           //@synthesize angularVelocity=_angularVelocity - In the implementation block
+(id)bodyWithCircleOfRadius:(float)arg1 center:(CGPoint)arg2 ;
+(id)bodyWithTexture:(id)arg1 alphaThreshold:(float)arg2 size:(CGSize)arg3 ;
+(id)bodyWithBodies:(id)arg1 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 center:(CGPoint)arg2 ;
+(id)bodyWithEdgeLoopFromRect:(CGRect)arg1 ;
+(id)bodyWithTexture:(id)arg1 size:(CGSize)arg2 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)copyWithZone:(NSZone*)arg1 ;
+(id)bodyWithRectangleOfSize:(CGSize)arg1 ;
+(id)bodyWithCircleOfRadius:(float)arg1 ;
+(id)bodyWithEdgeLoopFromPath:(CGPathRef)arg1 ;
+(id)bodyWithEdgeFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
+(id)bodyWithPolygonFromPath:(CGPathRef)arg1 ;
+(id)bodyWithEdgeChainFromPath:(CGPathRef)arg1 ;
-(NSArray *)joints;
-(char)pinned;
-(void)setFieldBitMask:(unsigned)arg1 ;
-(unsigned)fieldBitMask;
-(void)applyForce:(CGVector)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyTorque:(float)arg1 ;
-(void)applyImpulse:(CGVector)arg1 atPoint:(CGPoint)arg2 ;
-(void)applyAngularImpulse:(float)arg1 ;
-(id)allContactedBodies;
-(unsigned)contactTestBitMask;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setVelocity:(CGVector)arg1 ;
-(void)setMass:(float)arg1 ;
-(float)charge;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setCharge:(float)arg1 ;
-(void)setPinned:(char)arg1 ;
-(void)setResting:(char)arg1 ;
-(void)setDynamic:(char)arg1 ;
-(void)setFriction:(float)arg1 ;
-(void)setDensity:(float)arg1 ;
-(void)setAllowsRotation:(char)arg1 ;
-(void)setRestitution:(float)arg1 ;
-(float)friction;
-(float)density;
-(void)setLinearDamping:(float)arg1 ;
-(void)setAngularDamping:(float)arg1 ;
-(char)allowsRotation;
-(CGVector)velocity;
-(float)angularVelocity;
-(void)setAngularVelocity:(float)arg1 ;
-(float)restitution;
-(float)linearDamping;
-(float)angularDamping;
-(float)mass;
-(void)applyImpulse:(CGVector)arg1 ;
-(SKNode *)node;
-(void)setAffectedByGravity:(char)arg1 ;
-(void)setUsesPreciseCollisionDetection:(char)arg1 ;
-(unsigned)collisionBitMask;
-(void)setCollisionBitMask:(unsigned)arg1 ;
-(unsigned)categoryBitMask;
-(void)setCategoryBitMask:(unsigned)arg1 ;
-(void)setContactTestBitMask:(unsigned)arg1 ;
-(char)isDynamic;
-(char)usesPreciseCollisionDetection;
-(char)isResting;
-(char)affectedByGravity;
-(float)area;
-(void)applyForce:(CGVector)arg1 ;
@end

