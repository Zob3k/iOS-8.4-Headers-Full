/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:38:55 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIViewController.h>
#import <UIKit/_UIRemoteViewController_ViewControllerOperatorInterface.h>
#import <UIKit/_UIRemoteViewController_TextEffectsOperatorInterface.h>
#import <UIKit/UIActionSheetDelegate.h>

@class NSString, _UIViewServiceInterface, _UIRemoteViewService, NSArray, _UIAsyncInvocation, NSMutableArray, _UISizeTrackingView, _UIRemoteView, _UITextEffectsRemoteView, UIView, NSError, UIActionSheet, _UITextServiceSession, UIDimmingView, BKSTouchDeliveryPolicyAssertion;

@interface _UIRemoteViewController : UIViewController <_UIRemoteViewController_ViewControllerOperatorInterface, _UIRemoteViewController_TextEffectsOperatorInterface, UIActionSheetDelegate> {

	NSString* _serviceBundleIdentifier;
	_UIViewServiceInterface* _serviceInterface;
	_UIRemoteViewService* _remoteViewService;
	id _serviceViewControllerProxy;
	id _serviceViewControllerControlMessageProxy;
	NSArray* _serviceViewControllerSupportedInterfaceOrientations;
	unsigned _serviceAccessibilityServerPort;
	unsigned _serviceRegisteredScrollToTopViewCount;
	int _applicationDeactivationReason;
	id _viewControllerOperatorProxy;
	_UIAsyncInvocation* _viewControllerOperatorHalfDisconnectionInvocation;
	id _textEffectsOperatorProxy;
	_UIAsyncInvocation* _textEffectsOperatorHalfDisconnectionInvocation;
	char _fencingCurrentTransaction;
	int _preFencedCommitActionsLock;
	NSMutableArray* _preFencedCommitActions;
	_UISizeTrackingView* _sizeTrackingView;
	_UIRemoteView* _serviceViewControllerRemoteView;
	_UITextEffectsRemoteView* _fullScreenTextEffectsRemoteView;
	_UITextEffectsRemoteView* _textEffectsAboveStatusBarRemoteView;
	_UITextEffectsRemoteView* _remoteKeyboardRemoteView;
	UIView* _fullScreenTextEffectsSnapshotView;
	char _snapshotTextEffectsAfterRotation;
	unsigned _serviceScreenDisplayID;
	_UIAsyncInvocation* _terminationInvocation;
	int _terminationErrorLock;
	NSError* _terminationError;
	UIActionSheet* _hostedActionSheet;
	_UITextServiceSession* _textServiceSession;
	int __automatic_invalidation_retainCount;
	char __automatic_invalidation_invalidated;
	UIDimmingView* _hostedDimmingView;
	UIView* _touchGrabbingView;
	int _preferredStatusBarStyle;
	char _prefersStatusBarHidden;
	char _isFocusDeferred;
	NSString* _deferredDisplayUUID;
	unsigned _deferredContextID;
	NSArray* _allowedNotifications;
	char _isUpdatingSize;
	char _serviceViewShouldShareTouchesWithHost;
	BKSTouchDeliveryPolicyAssertion* _touchDeliveryPolicyAssertion;

}

@property (nonatomic,readonly) NSString * serviceBundleIdentifier; 
@property (nonatomic,readonly) int serviceProcessIdentifier; 
@property (nonatomic,readonly) SCD_Struct_UI28 serviceAuditToken; 
@property (assign,nonatomic) char serviceViewShouldShareTouchesWithHost;                                                                            //@synthesize serviceViewShouldShareTouchesWithHost=_serviceViewShouldShareTouchesWithHost - In the implementation block
@property (setter=_setTouchDeliveryPolicyAssertion:,nonatomic,retain) BKSTouchDeliveryPolicyAssertion * _touchDeliveryPolicyAssertion;              //@synthesize touchDeliveryPolicyAssertion=_touchDeliveryPolicyAssertion - In the implementation block
@property (assign,setter=_setIsUpdatingSize:,nonatomic) char _isUpdatingSize;                                                                       //@synthesize isUpdatingSize=_isUpdatingSize - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)_shouldSendLegacyMethodsFromViewWillTransitionToSize;
+(char)_shouldForwardViewWillTransitionToSize;
+(id)serviceViewControllerInterface;
+(id)exportedInterface;
+(id)requestViewControllerWithService:(id)arg1 connectionHandler:(/*^block*/id)arg2 ;
+(char)__shouldHostRemoteTextEffectsWindow;
+(id)_requestViewController:(id)arg1 traitCollection:(id)arg2 fromServiceWithBundleIdentifier:(id)arg3 service:(id)arg4 connectionHandler:(/*^block*/id)arg5 ;
+(char)shouldPropagateAppearanceCustomizations;
+(char)__shouldAllowHostProcessToTakeFocus;
+(id)requestViewController:(id)arg1 fromServiceWithBundleIdentifier:(id)arg2 connectionHandler:(/*^block*/id)arg3 ;
+(id)requestViewController:(id)arg1 traitCollection:(id)arg2 fromServiceWithBundleIdentifier:(id)arg3 connectionHandler:(/*^block*/id)arg4 ;
+(id)requestViewControllerWithService:(id)arg1 traitCollection:(id)arg2 connectionHandler:(/*^block*/id)arg3 ;
-(id)retain;
-(void)dealloc;
-(unsigned)retainCount;
-(int)preferredStatusBarStyle;
-(char)prefersStatusBarHidden;
-(unsigned)supportedInterfaceOrientations;
-(void)actionSheet:(id)arg1 clickedButtonAtIndex:(int)arg2 ;
-(void)__willChangeToIdiom:(int)arg1 onScreen:(id)arg2 ;
-(char)canBecomeFirstResponder;
-(char)_tryRetain;
-(char)_isDeallocating;
-(void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(char)arg2 ;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)loadView;
-(id)serviceViewControllerProxy;
-(void)didMoveToParentViewController:(id)arg1 ;
-(char)shouldAutorotateToInterfaceOrientation:(int)arg1 ;
-(void)viewWillAppear:(char)arg1 ;
-(void)_setContentOverlayInsets:(UIEdgeInsets)arg1 ;
-(char)_customizesForPresentationInPopover;
-(void)_traitCollectionDidChange:(id)arg1 ;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)viewDidDisappear:(char)arg1 ;
-(char)_ignoreAppSupportedOrientations;
-(void)_willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2 forwardToChildControllers:(char)arg3 skipSelf:(char)arg4 ;
-(void)_willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2 forwardToChildControllers:(char)arg3 skipSelf:(char)arg4 ;
-(void)_didRotateFromInterfaceOrientation:(int)arg1 forwardToChildControllers:(char)arg2 skipSelf:(char)arg3 ;
-(void)_willBecomeContentViewControllerOfPopover:(id)arg1 ;
-(void)_didResignContentViewControllerOfPopover:(id)arg1 ;
-(char)_requiresKeyboardWindowWhenFirstResponder;
-(void)viewServiceDidTerminateWithError:(id)arg1 ;
-(void)_applicationDidEnterBackground:(id)arg1 ;
-(void)_applicationWillEnterForeground:(id)arg1 ;
-(void)dimmingViewWasTapped:(id)arg1 ;
-(id)disconnect;
-(id)serviceViewControllerProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(int)__automatic_invalidation_logic;
-(void)_applicationDidBecomeActive:(id)arg1 ;
-(CGSize)intrinsicContentSizeForServiceSize:(CGSize)arg1 ;
-(void)viewDidInvalidateIntrinsicContentSize;
-(char)_isUpdatingSize;
-(char)__shouldRemoteViewControllerFenceOperations;
-(void)synchronizeAnimationsInActions:(/*^block*/id)arg1 ;
-(void)_scrollToTopFromTouchAtViewLocation:(CGPoint)arg1 resultHandler:(/*^block*/id)arg2 ;
-(char)_serviceHasScrollToTopView;
-(char)serviceViewShouldShareTouchesWithHost;
-(void)_prepareTouchDeliveryPolicy;
-(void)_setTouchDeliveryPolicyAssertion:(id)arg1 ;
-(id)_initWithViewServiceBundleIdentifier:(id)arg1 ;
-(void)_awakeWithConnectionInfo:(id)arg1 ;
-(id)_terminateWithError:(id)arg1 ;
-(void)_firstResponderDidChange:(id)arg1 ;
-(void)_statusBarOrientationDidChange:(id)arg1 ;
-(void)_statusBarHeightDidChange:(id)arg1 ;
-(void)_hostWillEnterForeground:(id)arg1 ;
-(void)_hostDidEnterBackground:(id)arg1 ;
-(void)_applicationDidFinishSuspendSnapshot:(id)arg1 ;
-(void)_appearanceInvocationsDidChange:(id)arg1 ;
-(void)_snapshotAdjustedMediaTiming:(id)arg1 ;
-(void)_updateTintColor;
-(void)_terminateUnconditionallyThen:(/*^block*/id)arg1 ;
-(SCD_Struct_UI28)serviceAuditToken;
-(id)_addAutoAllowedNotifications:(id)arg1 ;
-(int)__getPreferredInterfaceOrientation;
-(id)_hostDeferralProperties;
-(id)_clientDeferralProperties;
-(id)textEffectsWindowForServiceScreen;
-(void)_restoreTextEffectsRemoteView;
-(void)_snapshotAndRemoveTextEffectsRemoteView;
-(void)_setDeferred:(char)arg1 forDisplayUUID:(id)arg2 ;
-(void)_applicationWillDeactivate:(id)arg1 ;
-(void)_applicationDidAddDeactivationReason:(id)arg1 ;
-(void)_addPreFencedCommitAction:(/*^block*/id)arg1 ;
-(char)_shouldDeferEventsForFocusOnScreen:(id)arg1 ;
-(NSString *)serviceBundleIdentifier;
-(int)serviceProcessIdentifier;
-(void)_updateTouchGrabbingView;
-(id)allowedNotifications;
-(void)setAllowedNotifications:(id)arg1 ;
-(void)_setIsUpdatingSize:(char)arg1 ;
-(id)_appearanceSource;
-(void)__presentActionSheetFromYCoordinate:(float)arg1 withTitle:(id)arg2 buttonTitles:(id)arg3 cancelButtonIndex:(int)arg4 destructiveButtonIndex:(int)arg5 style:(int)arg6 ;
-(void)__dismissActionSheetWithClickedButtonIndex:(int)arg1 animated:(char)arg2 ;
-(void)__viewServiceDidPromoteFirstResponder;
-(void)__viewServiceDidRegisterScrollToTopView;
-(void)__viewServiceDidUnregisterScrollToTopView;
-(void)__setSupportedInterfaceOrientations:(id)arg1 ;
-(void)__viewServiceDidUpdateTintColor:(id)arg1 duration:(double)arg2 ;
-(void)__showServiceForText:(id)arg1 type:(int)arg2 fromRectValue:(id)arg3 replyHandler:(/*^block*/id)arg4 ;
-(void)__dismissTextServiceSessionAnimated:(char)arg1 ;
-(void)__setViewServiceIsDisplayingPopover:(char)arg1 ;
-(void)__viewServicePopoverDidChangeContentSize:(CGSize)arg1 animated:(char)arg2 fenceSendRight:(id)arg3 withReplyHandler:(/*^block*/id)arg4 ;
-(void)__viewServicePopoverDidSetUseToolbarShine:(char)arg1 ;
-(void)__viewServicePreferredContentSizeDidChange:(CGSize)arg1 fenceSendRight:(id)arg2 ;
-(void)__viewServiceInstrinsicContentSizeDidChange:(CGSize)arg1 fenceSendRight:(id)arg2 ;
-(void)__viewServiceDidUpdatePreferredStatusBarStyle:(int)arg1 hidden:(char)arg2 ;
-(void)__sendNotificationName:(id)arg1 userInfo:(id)arg2 ;
-(void)setInheritsSecurity:(char)arg1 ;
-(char)inheritsSecurity;
-(void)_initializeAccessibilityPortInformation;
-(void)saveStateForSession:(id)arg1 anchor:(id)arg2 ;
-(void)restoreStateForSession:(id)arg1 anchor:(id)arg2 ;
-(void)setServiceViewShouldShareTouchesWithHost:(char)arg1 ;
-(id)_cancelTouchesForCurrentEventInHostedContent;
-(BKSTouchDeliveryPolicyAssertion *)_touchDeliveryPolicyAssertion;
-(oneway void)release;
@end

