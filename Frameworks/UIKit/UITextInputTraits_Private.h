/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:38:42 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

@class UIColor, UIImage, NSString;


@protocol UITextInputTraits_Private <NSObject,UITextInputTraits>
@property (assign,nonatomic) CFCharacterSetRef textTrimmingSet; 
@property (nonatomic,retain) UIColor * insertionPointColor; 
@property (nonatomic,retain) UIColor * selectionBarColor; 
@property (nonatomic,retain) UIColor * selectionHighlightColor; 
@property (nonatomic,retain) UIImage * selectionDragDotImage; 
@property (assign,nonatomic) unsigned insertionPointWidth; 
@property (assign,nonatomic) int textLoupeVisibility; 
@property (assign,nonatomic) int textSelectionBehavior; 
@property (assign,nonatomic) id textSuggestionDelegate; 
@property (assign,nonatomic) char isSingleLineDocument; 
@property (assign,nonatomic) char contentsIsSingleValue; 
@property (assign,nonatomic) char acceptsEmoji; 
@property (assign,nonatomic) char forceEnableDictation; 
@property (assign,nonatomic) int emptyContentReturnKeyType; 
@property (assign,nonatomic) char returnKeyGoesToNextResponder; 
@property (assign,nonatomic) char acceptsFloatingKeyboard; 
@property (assign,nonatomic) char acceptsSplitKeyboard; 
@property (assign,nonatomic) char displaySecureTextUsingPlainText; 
@property (assign,nonatomic) char learnsCorrections; 
@property (assign,nonatomic) int shortcutConversionType; 
@property (assign,nonatomic) char suppressReturnKeyStyling; 
@property (assign,nonatomic) char useInterfaceLanguageForLocalization; 
@property (assign,nonatomic) char deferBecomingResponder; 
@property (assign,nonatomic) char enablesReturnKeyOnNonWhiteSpaceContent; 
@property (nonatomic,copy) NSString * autocorrectionContext; 
@property (nonatomic,copy) NSString * responseContext; 
@property (assign,nonatomic) char disablePrediction; 
@optional
-(int)textSelectionBehavior;
-(char)displaySecureTextUsingPlainText;
-(CFCharacterSetRef)textTrimmingSet;
-(char)acceptsSplitKeyboard;
-(int)shortcutConversionType;
-(char)acceptsFloatingKeyboard;
-(char)disablePrediction;
-(char)learnsCorrections;
-(void)setLearnsCorrections:(char)arg1;
-(NSString *)autocorrectionContext;
-(NSString *)responseContext;
-(void)setResponseContext:(id)arg1;
-(void)setTextTrimmingSet:(CFCharacterSetRef)arg1;
-(UIColor *)insertionPointColor;
-(void)setInsertionPointColor:(id)arg1;
-(UIColor *)selectionBarColor;
-(void)setSelectionBarColor:(id)arg1;
-(UIColor *)selectionHighlightColor;
-(void)setSelectionHighlightColor:(id)arg1;
-(UIImage *)selectionDragDotImage;
-(void)setSelectionDragDotImage:(id)arg1;
-(unsigned)insertionPointWidth;
-(void)setInsertionPointWidth:(unsigned)arg1;
-(int)textLoupeVisibility;
-(void)setTextLoupeVisibility:(int)arg1;
-(void)setTextSelectionBehavior:(int)arg1;
-(id)textSuggestionDelegate;
-(void)setTextSuggestionDelegate:(id)arg1;
-(char)isSingleLineDocument;
-(void)setIsSingleLineDocument:(char)arg1;
-(char)contentsIsSingleValue;
-(void)setContentsIsSingleValue:(char)arg1;
-(char)acceptsEmoji;
-(void)setAcceptsEmoji:(char)arg1;
-(char)forceEnableDictation;
-(void)setForceEnableDictation:(char)arg1;
-(int)emptyContentReturnKeyType;
-(void)setEmptyContentReturnKeyType:(int)arg1;
-(char)returnKeyGoesToNextResponder;
-(void)setReturnKeyGoesToNextResponder:(char)arg1;
-(void)setAcceptsFloatingKeyboard:(char)arg1;
-(void)setAcceptsSplitKeyboard:(char)arg1;
-(void)setDisplaySecureTextUsingPlainText:(char)arg1;
-(void)setShortcutConversionType:(int)arg1;
-(char)suppressReturnKeyStyling;
-(void)setSuppressReturnKeyStyling:(char)arg1;
-(char)useInterfaceLanguageForLocalization;
-(void)setUseInterfaceLanguageForLocalization:(char)arg1;
-(char)deferBecomingResponder;
-(void)setDeferBecomingResponder:(char)arg1;
-(char)enablesReturnKeyOnNonWhiteSpaceContent;
-(void)setEnablesReturnKeyOnNonWhiteSpaceContent:(char)arg1;
-(void)setAutocorrectionContext:(id)arg1;
-(void)setDisablePrediction:(char)arg1;

@required
-(void)takeTraitsFrom:(id)arg1;

@end

