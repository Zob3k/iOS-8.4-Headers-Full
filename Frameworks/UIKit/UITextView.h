/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:39:00 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIScrollView.h>
#import <UIKit/UITextLinkInteraction.h>
#import <UIKit/UITextInputControllerDelegate.h>
#import <UIKit/UITextAutoscrolling.h>
#import <UIKit/UIKeyboardInput.h>
#import <UIKit/UITextInputTraits_Private.h>
#import <UIKit/_UIMultilineTextContentSizing.h>
#import <UIKit/_UILayoutBaselineUpdating.h>
#import <UIKit/UITextInput.h>
#import <UIKit/ABText.h>
#import <UIKit/MPUAutoupdatingTextContainer.h>

@protocol UITextInputTokenizer;
@class NSTextStorage, NSTextContainer, NSLayoutManager, _UITextContainerView, UITextInputController, UITextInteractionAssistant, UITextInputTraits, UIAutoscroll, _UITextViewRestorableScrollPosition, UILabel, UIView, _UISiriStreamingManager, _UICharacterStreamingManager, NSDictionary, NSString, UIFont, NSAttributedString, MPUTextContainerContentSizeUpdater, UIColor, UIImage, UITextRange, UITextPosition;

@interface UITextView : UIScrollView <UITextLinkInteraction, UITextInputControllerDelegate, UITextAutoscrolling, UIKeyboardInput, UITextInputTraits_Private, _UIMultilineTextContentSizing, _UILayoutBaselineUpdating, UITextInput, ABText, MPUAutoupdatingTextContainer> {

	id _private;
	NSTextStorage* _textStorage;
	NSTextContainer* _textContainer;
	NSLayoutManager* _layoutManager;
	_UITextContainerView* _containerView;
	id _inputDelegate;
	id<UITextInputTokenizer> _tokenizer;
	UITextInputController* _inputController;
	UITextInteractionAssistant* _interactionAssistant;
	UITextInputTraits* _textInputTraits;
	UIAutoscroll* _autoscroll;
	struct {
		unsigned needsScrollToSelectionAfterLayout : 1;
		unsigned isInteractingWithLink : 1;
		unsigned linkInteractionIsLongPress : 1;
		unsigned editable : 1;
		unsigned reentrancyGuard : 1;
		unsigned usesExplicitPreferredMaxLayoutWidth : 1;
		unsigned determiningPreferredMaxLayoutWidth : 1;
		unsigned inSecondConstraintsPass : 1;
		unsigned interactiveSelectionDisabled : 1;
		unsigned selectable : 1;
		unsigned shouldPresentSheetsInAWindowLayeredAboveTheKeyboard : 1;
	}  _tvFlags;
	id _linkInteractionItem;
	_UITextViewRestorableScrollPosition* _scrollTarget;
	CGPoint _scrollTargetOffset;
	unsigned _dataDetectorTypes;
	float _preferredMaxLayoutWidth;
	UILabel* _placeholderLabel;
	UIView* _inputAccessoryView;
	_UISiriStreamingManager* _streamingManager;
	_UICharacterStreamingManager* _characterStreamingManager;
	int _siriAnimationStyle;
	NSDictionary* _siriParameters;
	float _firstBaselineOffsetFromTop;
	float _lastBaselineOffsetFromBottom;
	char _clearsOnInsertion;
	UIView* _inputView;

}

@property (assign,setter=MPU_setAutomaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts:,nonatomic) char MPU_automaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) UIFont * font; 
@property (nonatomic,copy) NSAttributedString * attributedText; 
@property (nonatomic,readonly) MPUTextContainerContentSizeUpdater * MPU_contentSizeUpdater; 
@property (nonatomic,copy) NSString * ab_text; 
@property (nonatomic,copy) NSDictionary * ab_textAttributes; 
@property (assign,setter=_setDrawsDebugBaselines:,nonatomic) char _drawsDebugBaselines; 
@property (assign,nonatomic) id<UITextViewDelegate> delegate; 
@property (nonatomic,copy) NSString * text; 
@property (nonatomic,retain) UIColor * textColor; 
@property (assign,nonatomic) int textAlignment; 
@property (assign,nonatomic) NSRange selectedRange; 
@property (assign,getter=isEditable,nonatomic) char editable; 
@property (assign,getter=isSelectable,nonatomic) char selectable; 
@property (assign,nonatomic) unsigned dataDetectorTypes; 
@property (assign,nonatomic) char allowsEditingTextAttributes; 
@property (nonatomic,copy) NSDictionary * typingAttributes; 
@property (retain) UIView * inputView;                                                                                                                                                     //@synthesize inputView=_inputView - In the implementation block
@property (retain) UIView * inputAccessoryView; 
@property (assign,nonatomic) char clearsOnInsertion;                                                                                                                                       //@synthesize clearsOnInsertion=_clearsOnInsertion - In the implementation block
@property (nonatomic,readonly) NSTextContainer * textContainer;                                                                                                                            //@synthesize textContainer=_textContainer - In the implementation block
@property (assign,nonatomic) UIEdgeInsets textContainerInset; 
@property (nonatomic,readonly) NSLayoutManager * layoutManager;                                                                                                                            //@synthesize layoutManager=_layoutManager - In the implementation block
@property (nonatomic,retain,readonly) NSTextStorage * textStorage;                                                                                                                         //@synthesize textStorage=_textStorage - In the implementation block
@property (nonatomic,copy) NSDictionary * linkTextAttributes; 
@property (assign,nonatomic) int autocapitalizationType; 
@property (assign,nonatomic) int autocorrectionType; 
@property (assign,nonatomic) int spellCheckingType; 
@property (assign,nonatomic) int keyboardType; 
@property (assign,nonatomic) int keyboardAppearance; 
@property (assign,nonatomic) int returnKeyType; 
@property (assign,nonatomic) char enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) char secureTextEntry; 
@property (assign,nonatomic) CFCharacterSetRef textTrimmingSet; 
@property (nonatomic,retain) UIColor * insertionPointColor; 
@property (nonatomic,retain) UIColor * selectionBarColor; 
@property (nonatomic,retain) UIColor * selectionHighlightColor; 
@property (nonatomic,retain) UIImage * selectionDragDotImage; 
@property (assign,nonatomic) unsigned insertionPointWidth; 
@property (assign,nonatomic) int textLoupeVisibility; 
@property (assign,nonatomic) int textSelectionBehavior; 
@property (assign,nonatomic) id textSuggestionDelegate; 
@property (assign,nonatomic) char isSingleLineDocument; 
@property (assign,nonatomic) char contentsIsSingleValue; 
@property (assign,nonatomic) char acceptsEmoji; 
@property (assign,nonatomic) char forceEnableDictation; 
@property (assign,nonatomic) int emptyContentReturnKeyType; 
@property (assign,nonatomic) char returnKeyGoesToNextResponder; 
@property (assign,nonatomic) char acceptsFloatingKeyboard; 
@property (assign,nonatomic) char acceptsSplitKeyboard; 
@property (assign,nonatomic) char displaySecureTextUsingPlainText; 
@property (assign,nonatomic) char learnsCorrections; 
@property (assign,nonatomic) int shortcutConversionType; 
@property (assign,nonatomic) char suppressReturnKeyStyling; 
@property (assign,nonatomic) char useInterfaceLanguageForLocalization; 
@property (assign,nonatomic) char deferBecomingResponder; 
@property (assign,nonatomic) char enablesReturnKeyOnNonWhiteSpaceContent; 
@property (nonatomic,copy) NSString * autocorrectionContext; 
@property (nonatomic,copy) NSString * responseContext; 
@property (assign,nonatomic) char disablePrediction; 
@property (copy) UITextRange * selectedTextRange; 
@property (nonatomic,readonly) UITextRange * markedTextRange; 
@property (nonatomic,copy) NSDictionary * markedTextStyle; 
@property (nonatomic,readonly) UITextPosition * beginningOfDocument; 
@property (nonatomic,readonly) UITextPosition * endOfDocument; 
@property (assign,nonatomic) id<UITextInputDelegate> inputDelegate; 
@property (nonatomic,readonly) id<UITextInputTokenizer> tokenizer; 
@property (nonatomic,readonly) UIView * textInputView; 
@property (assign,nonatomic) int selectionAffinity; 
+(id)pkui_plainNonInteractiveTextView;
+(char)_isCompatibilityTextView;
+(id)_bestInterpretationForDictationResult:(id)arg1 ;
+(id)_sharedHighlightView;
-(CGSize)pkui_textSizeThatFits:(CGSize)arg1 ;
-(CGSize)pkui_frameSizeForTextSize:(CGSize)arg1 ;
-(id)dd_newOperation;
-(char)MPU_automaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts;
-(void)MPU_setAutomaticallyUpdatesTextStyleFontsToPreferredTextStyleFonts:(char)arg1 ;
-(MPUTextContainerContentSizeUpdater *)MPU_contentSizeUpdater;
-(void)setAb_textAttributes:(NSDictionary *)arg1 ;
-(void)setAb_text:(NSString *)arg1 ;
-(NSString *)ab_text;
-(NSDictionary *)ab_textAttributes;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)_populateArchivedSubviews:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(char)respondsToSelector:(SEL)arg1 ;
-(CGSize)_intrinsicSizeWithinSize:(CGSize)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setBounds:(CGRect)arg1 ;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(void)setTextAlignment:(int)arg1 ;
-(void)setAttributedText:(NSAttributedString *)arg1 ;
-(void)setScrollEnabled:(char)arg1 ;
-(char)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(id)undoManager;
-(char)resignFirstResponder;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(void)increaseSize:(id)arg1 ;
-(void)decreaseSize:(id)arg1 ;
-(char)becomeFirstResponder;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)decodeRestorableStateWithCoder:(id)arg1 ;
-(char)_isDisplayingShortcutViewController;
-(char)isEditable;
-(void)setTextColor:(UIColor *)arg1 ;
-(void)setFont:(UIFont *)arg1 ;
-(NSString *)text;
-(void)setText:(NSString *)arg1 ;
-(float)lineHeight;
-(void)invalidateIntrinsicContentSize;
-(char)canBecomeFirstResponder;
-(float)_baselineOffsetFromBottom;
-(float)_firstBaselineOffsetFromTop;
-(void)tintColorDidChange;
-(CGSize)intrinsicContentSize;
-(void)_scrollViewAnimationEnded:(id)arg1 finished:(char)arg2 ;
-(NSAttributedString *)attributedText;
-(UIFont *)font;
-(void)_updateContentSize;
-(char)isEditing;
-(NSLayoutManager *)layoutManager;
-(id)_containerView;
-(void)_textStorageDidProcessEditing:(id)arg1 ;
-(NSTextStorage *)textStorage;
-(id)interactionAssistant;
-(id)selectionView;
-(char)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(char)arg3 ;
-(char)keyboardInput:(id)arg1 shouldReplaceTextInRange:(NSRange)arg2 replacementText:(id)arg3 ;
-(char)keyboardInputShouldDelete:(id)arg1 ;
-(char)keyboardInputChanged:(id)arg1 ;
-(void)keyboardInputChangedSelection:(id)arg1 ;
-(void)scrollSelectionToVisible:(char)arg1 ;
-(UIColor *)textColor;
-(void)cancelAutoscroll;
-(UIView *)textInputView;
-(NSRange)selectedRange;
-(void)setTypingAttributes:(NSDictionary *)arg1 ;
-(id)_textInputTraits;
-(void)takeTraitsFrom:(id)arg1 ;
-(int)textAlignment;
-(NSDictionary *)typingAttributes;
-(UITextPosition *)beginningOfDocument;
-(UITextPosition *)endOfDocument;
-(id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)textInRange:(id)arg1 ;
-(id<UITextInputDelegate>)inputDelegate;
-(void)setSelectedRange:(NSRange)arg1 ;
-(void)addTextAlternativesDisplayStyleToRange:(NSRange)arg1 ;
-(void)setSelectedTextRange:(UITextRange *)arg1 ;
-(CGRect)caretRectForPosition:(id)arg1 ;
-(void)_scrollRangeToVisible:(NSRange)arg1 animated:(char)arg2 ;
-(char)hasText;
-(void)insertText:(id)arg1 ;
-(void)deleteBackward;
-(void)replaceRange:(id)arg1 withText:(id)arg2 ;
-(void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2 ;
-(UITextRange *)selectedTextRange;
-(UITextRange *)markedTextRange;
-(NSDictionary *)markedTextStyle;
-(void)setMarkedTextStyle:(NSDictionary *)arg1 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 ;
-(void)unmarkText;
-(id)positionFromPosition:(id)arg1 offset:(int)arg2 ;
-(id)positionFromPosition:(id)arg1 inDirection:(int)arg2 offset:(int)arg3 ;
-(int)comparePosition:(id)arg1 toPosition:(id)arg2 ;
-(int)offsetFromPosition:(id)arg1 toPosition:(id)arg2 ;
-(id)positionWithinRange:(id)arg1 farthestInDirection:(int)arg2 ;
-(id)characterRangeByExtendingPosition:(id)arg1 inDirection:(int)arg2 ;
-(void)setInputDelegate:(id<UITextInputDelegate>)arg1 ;
-(id<UITextInputTokenizer>)tokenizer;
-(int)baseWritingDirectionForPosition:(id)arg1 inDirection:(int)arg2 ;
-(void)setBaseWritingDirection:(int)arg1 forRange:(id)arg2 ;
-(CGRect)firstRectForRange:(id)arg1 ;
-(id)selectionRectsForRange:(id)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 ;
-(id)closestPositionToPoint:(CGPoint)arg1 withinRange:(id)arg2 ;
-(id)characterRangeAtPoint:(CGPoint)arg1 ;
-(void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(id)insertDictationResultPlaceholder;
-(CGRect)frameForDictationResultPlaceholder:(id)arg1 ;
-(void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(char)arg2 ;
-(id)rangeWithTextAlternatives:(id*)arg1 atPosition:(id)arg2 ;
-(id)metadataDictionariesForDictationResults;
-(void)beginSelectionChange;
-(void)endSelectionChange;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(char)textInput:(id)arg1 shouldChangeCharactersInRange:(NSRange)arg2 replacementText:(id)arg3 ;
-(void)textInputDidChange:(id)arg1 ;
-(void)textInputDidChangeSelection:(id)arg1 ;
-(CGRect)visibleRect;
-(UIEdgeInsets)textContainerInset;
-(NSTextContainer *)textContainer;
-(NSDictionary *)linkTextAttributes;
-(id)textStylingAtPosition:(id)arg1 inDirection:(int)arg2 ;
-(int)selectionAffinity;
-(void)startAutoscroll:(CGPoint)arg1 ;
-(void)updateConstraints;
-(char)canResignFirstResponder;
-(UIView *)inputView;
-(UIView *)inputAccessoryView;
-(void)setAllowsEditingTextAttributes:(char)arg1 ;
-(void)setEditable:(char)arg1 ;
-(void)setLineHeight:(float)arg1 ;
-(void)setDataDetectorTypes:(unsigned)arg1 ;
-(char)allowsEditingTextAttributes;
-(unsigned)dataDetectorTypes;
-(id)webView;
-(void)setInputView:(UIView *)arg1 ;
-(void)setInputAccessoryView:(UIView *)arg1 ;
-(void)selectAll:(id)arg1 ;
-(CGRect)visibleTextRect;
-(void)setClearsOnInsertion:(char)arg1 ;
-(void)makeTextWritingDirectionRightToLeft:(id)arg1 ;
-(void)makeTextWritingDirectionLeftToRight:(id)arg1 ;
-(void)replace:(id)arg1 ;
-(void)cut:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)_define:(id)arg1 ;
-(void)_addShortcut:(id)arg1 ;
-(void)toggleBoldface:(id)arg1 ;
-(void)toggleItalics:(id)arg1 ;
-(void)toggleUnderline:(id)arg1 ;
-(void)_showTextStyleOptions:(id)arg1 ;
-(void)setContentToHTMLString:(id)arg1 ;
-(char)mightHaveLinks;
-(void)tapLinkAtPoint:(CGPoint)arg1 ;
-(char)isInteractingWithLink;
-(void)startInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(void)updateInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(void)validateInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(void)cancelInteractionWithLink;
-(void)startLongInteractionWithLinkAtPoint:(CGPoint)arg1 ;
-(char)willInteractWithLinkAtPoint:(CGPoint)arg1 ;
-(id)initWithFrame:(CGRect)arg1 font:(id)arg2 ;
-(void)_setDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 ;
-(char)clearsOnInsertion;
-(void)disableClearsOnInsertion;
-(void)updateSelection;
-(id)selectedText;
-(void)select:(id)arg1 ;
-(void)_promptForReplace:(id)arg1 ;
-(void)_transliterateChinese:(id)arg1 ;
-(void)setBecomesEditableWithGestures:(char)arg1 ;
-(unsigned)marginTop;
-(void)setMarginTop:(unsigned)arg1 ;
-(void)scrollRangeToVisible:(NSRange)arg1 ;
-(id)automaticallySelectedOverlay;
-(Class)_printFormatterClass;
-(char)_isDisplayingReferenceLibraryViewController;
-(float)_preferredMaxLayoutWidth;
-(char)_needsDoubleUpdateConstraintsPass;
-(void)_prepareForFirstIntrinsicContentSizeCalculation;
-(void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(CGRect)arg1 ;
-(void)_setInSecondConstraintsPass:(char)arg1 ;
-(void)_setDrawsDebugBaselines:(char)arg1 ;
-(char)_drawsDebugBaselines;
-(id)_layoutDebuggingTitle;
-(void)_resetUsesExplicitPreferredMaxLayoutWidth;
-(void)setContinuousSpellCheckingEnabled:(char)arg1 ;
-(void)_insertAttributedTextWithoutClosingTyping:(id)arg1 ;
-(char)forceEnableDictation;
-(void)setForceEnableDictation:(char)arg1 ;
-(void)_deleteBackwardAndNotify:(char)arg1 ;
-(void)_keyboardDidShow:(id)arg1 ;
-(char)isAccessibilityElementByDefault;
-(char)isElementAccessibilityExposedToInterfaceBuilder;
-(id)_textInputViewForAddingGestureRecognizers;
-(char)_isInteractiveTextSelectionDisabled;
-(id)initWithFrame:(CGRect)arg1 textContainer:(id)arg2 ;
-(void)drawRect:(CGRect)arg1 forViewPrintFormatter:(id)arg2 ;
-(void)_setInteractiveTextSelectionDisabled:(char)arg1 ;
-(char)_wantsBaselineUpdatingFollowingConstraintsPass;
-(void)_updateBaselineInformationDependentOnBounds;
-(void)_streamingManagerDidCommitFinalResults;
-(void)_observedTextViewDidChange:(id)arg1 ;
-(void)setSelectable:(char)arg1 ;
-(void)_commonInitWithTextContainer:(id)arg1 isDecoding:(char)arg2 isEditable:(char)arg3 isSelectable:(char)arg4 ;
-(void)setUsesTiledViews:(char)arg1 ;
-(char)isSelectable;
-(char)_shouldStartDataDetectors;
-(void)_startDataDetectors;
-(void)_updatePlaceholderVisibility;
-(unsigned)_totalNumberOfTextViewsInLayoutManager;
-(NSRange)_visibleRangeWithLayout:(char)arg1 ;
-(CGPoint)_contentOffsetForScrollToVisible:(NSRange)arg1 ;
-(void)_setScrollTarget:(id)arg1 ;
-(CGRect)visibleRectIgnoringKeyboard;
-(void)_layoutPlaceholder;
-(void)_resyncContainerFrameForNonAutolayout;
-(char)_shouldScrollEnclosingScrollView;
-(void)_scrollSelectionToVisibleInContainingScrollView;
-(char)usesTiledViews;
-(void)_performLayoutCalculation:(/*^block*/id)arg1 inSize:(CGSize)arg2 ;
-(float)_currentPreferredMaxLayoutWidth;
-(CGPoint)_firstGlyphBaselineLeftPointWithLayoutManager:(id)arg1 ;
-(CGPoint)_lastGlyphBaselineRightPointWithLayoutManager:(id)arg1 ;
-(void)_baselineOffsetDidChange;
-(CGRect)_rectForScrollToVisible:(NSRange)arg1 ;
-(void)_scrollSelectionToVisibleInContainingScrollView:(char)arg1 ;
-(void)_resetDataDetectorsResults;
-(id)extractWordArrayFromTokensArray:(id)arg1 ;
-(void)_didRecognizeSpeechStrings:(id)arg1 ;
-(void)_restoreScrollPosition:(id)arg1 animated:(char)arg2 ;
-(void)setTextContainerInset:(UIEdgeInsets)arg1 ;
-(void)setLinkTextAttributes:(NSDictionary *)arg1 ;
-(void)_setWhitelistedTypingAttributes:(id)arg1 ;
-(id)_whitelistedTypingAttributes;
-(void)_selectionMayChange:(id)arg1 ;
-(void)_registerUndoOperationForReplacementWithActionName:(id)arg1 replacementText:(id)arg2 ;
-(unsigned)_effectiveDataDetectorTypes;
-(id)initReadonlyAndUnselectableWithFrame:(CGRect)arg1 textContainer:(id)arg2 ;
-(void)_setPreferredMaxLayoutWidth:(float)arg1 ;
-(char)shouldPresentSheetsInAWindowLayeredAboveTheKeyboard;
-(void)setShouldPresentSheetsInAWindowLayeredAboveTheKeyboard:(char)arg1 ;
-(void)setAttributedPlaceholder:(id)arg1 ;
-(id)attributedPlaceholder;
-(void)_enableSiriAnimationDictationStyle;
-(void)_enableSiriAnimationDictationStyleWithCharacterInsertionRate:(double)arg1 minimumDurationBetweenHypotheses:(double)arg2 ;
-(void)_didRecognizeSpeechTokens:(id)arg1 ;
-(void)_didFinishSpeechRecognition;
-(CGPoint)_openQuoteAnchor;
-(CGPoint)_closeQuoteAnchor;
-(id)_restorableScrollPosition;
-(char)_mightHaveSelection;
-(void)_cancelDataDetectors;
-(id)_interactableItemAtPoint:(CGPoint)arg1 ;
-(void)_highlightLinkAtPoint:(CGPoint)arg1 ;
-(void)_resetLinkInteraction;
-(CGRect)_presentationRectForLinkAtRange:(NSRange)arg1 ;
-(void)_finishHandlingInteraction:(id)arg1 ;
@end

