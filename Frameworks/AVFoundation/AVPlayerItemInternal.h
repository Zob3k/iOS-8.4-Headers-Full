/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:36:05 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, AVPlayerItemDelegate;
#import <AVFoundation/AVFoundation-Structs.h>
@class NSObject, AVWeakReference, NSArray, NSMutableArray, NSMutableDictionary, AVPlayerItem, AVPlayerConnection, AVPropertyStorage, NSError, NSURL, AVAsset, NSDate, AVAudioMix, AVVideoComposition, AVCustomVideoCompositorSession, NSDictionary, NSString;

@interface AVPlayerItemInternal : NSObject {

	NSObject*<OS_dispatch_queue> ivarAccessQueue;
	AVWeakReference* weakReference;
	NSObject*<OS_dispatch_queue> figConfigurationQueue;
	OpaqueVTPixelBufferAttributesMediatorRef pixelBufferAttributeMediator;
	OpaqueCMTimebaseRef proxyTimebase;
	char isCurrentPlayerItem;
	NSArray* cachedTracks;
	NSMutableArray* syncLayers;
	NSArray* itemOutputs;
	NSMutableArray* itemVideoOutputs;
	NSMutableDictionary* itemLegibleOutputsForKeys;
	NSMutableDictionary* itemMetadataOutputsForKeys;
	char suppressesVideoLayers;
	OpaqueCMTimebaseRef figTimebase;
	OpaqueFigPlaybackItemRef figPlaybackItem;
	AVPlayerItem* previousItem;
	AVPlayerItem* nextItem;
	OpaqueFigCPEProtectorRef figCPEProtector;
	id<AVPlayerItemDelegate> delegate;
	AVWeakReference* playerReference;
	AVPlayerConnection* playerConnection;
	NSObject*<OS_dispatch_queue> stateDispatchQueue;
	AVPropertyStorage* propertyStorage;
	int status;
	NSError* error;
	NSURL* URL;
	AVAsset* asset;
	NSArray* automaticallyLoadedAssetKeys;
	AVAsset* assetWithFigPlaybackItem;
	NSArray* trackIDsForAssetWithFigPlaybackItem;
	NSArray* timedMetadata;
	SCD_Struct_CM4 initialTime;
	SCD_Struct_CM4 initialToleranceBefore;
	SCD_Struct_CM4 initialToleranceAfter;
	SCD_Struct_CM4 forwardPlaybackEndTime;
	SCD_Struct_CM4 reversePlaybackEndTime;
	NSDate* initialDate;
	NSDate* initialEstimatedDate;
	char initialLimitReadAhead;
	char allowsExtendedReadAhead;
	SCD_Struct_CM4 maximumTrailingBufferDuration;
	int initialPlaybackLikelyToKeepUpTrigger;
	char initialAlwaysMonitorsPlayability;
	char initialWillNeverSeekBackwardsHint;
	char initialContinuesPlayingDuringPrerollForSeek;
	char initialContinuesPlayingDuringPrerollForRateChange;
	char usesIFrameOnlyPlaybackForHighRateScaledEdits;
	char usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet;
	SCD_Struct_CM4 minimumIntervalForIFrameOnlyPlayback;
	char minimumIntervalForIFrameOnlyPlaybackWasSet;
	float speedThresholdForIFrameOnlyPlayback;
	char speedThresholdForIFrameOnlyPlaybackWasSet;
	CFStringRef initialFigTimePitchAlgorithm;
	char savesDownloadedDataToDiskWhenDone;
	char nonForcedSubtitlesEnabled;
	char networkUsuallyExceedsMaxBitRate;
	char allowProgressiveSwitchUp;
	double preferredPeakBitRate;
	AVAudioMix* audioMix;
	AVVideoComposition* videoComposition;
	AVWeakReference* clientsOriginalVideoComposition;
	void* figVideoCompositor;
	AVCustomVideoCompositorSession* customVideoCompositorSession;
	char seekingWaitsForVideoCompositionRendering;
	NSArray* textStyleRules;
	NSDictionary* gaplessInfo;
	int initialVariantIndex;
	NSDictionary* audibleDRMInfo;
	NSDictionary* rampInOutInfo;
	float soundCheckVolumeNormalization;
	float volumeAdjustment;
	NSMutableArray* handlersToCallWhenReadyForEnqueueing;
	NSMutableDictionary* mediaOptionsSelectedByClient;
	char haveInitialSamples;
	char haveCPEProtector;
	char didSetAssetToAssetWithFigPlaybackItem;
	char didBecomeReadyForBasicInspection;
	char didBecomeReadyForInspectionOfMediaSelectionOptions;
	char didBecomeReadyForInspectionOfTracks;
	char didBecomeReadyForInspectionOfPresentationSize;
	char didBecomeReadyForInspectionOfDuration;
	char didInformObserversAboutAvailabilityOfTracks;
	char didFireKVOForAssetForNonStreamingItem;
	char wasInitializedWithURL;
	char needTimedMetadataNotification;
	char externalSubtitlesEnabled;
	char externalProtectionRequested;
	char requiresAccessLog;
	int eqPreset;
	OpaqueFigSimpleMutexRef seekIDMutex;
	unsigned nextSeekIDToGenerate;
	int pendingSeekID;
	/*^block*/id seekCompletionHandler;
	NSString* dataYouTubeID;
	unsigned RTCReportingFlags;
	NSString* serviceIdentifier;
	NSString* mediaKind;
	unsigned restrictions;

}
@end

