/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:36:11 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AVFoundation/AVFoundation-Structs.h>
@class AVCaptureDeviceInternal_FigRecorder, NSString, NSArray, AVCaptureDeviceFormat_FigRecorder;

@interface AVCaptureDevice_FigRecorder : NSObject {

	AVCaptureDeviceInternal_FigRecorder* _internal;

}

@property (nonatomic,readonly) NSString * uniqueID; 
@property (nonatomic,readonly) NSString * modelID; 
@property (nonatomic,readonly) NSString * localizedName; 
@property (getter=isConnected,nonatomic,readonly) char connected; 
@property (nonatomic,readonly) NSArray * formats; 
@property (nonatomic,retain) AVCaptureDeviceFormat_FigRecorder * activeFormat; 
@property (assign,nonatomic) SCD_Struct_CM4 activeVideoMinFrameDuration; 
@property (assign,nonatomic) SCD_Struct_CM4 activeVideoMaxFrameDuration; 
+(id)devicesWithMediaType:(id)arg1 ;
+(id)defaultDeviceWithMediaType:(id)arg1 ;
+(id)deviceWithUniqueID:(id)arg1 ;
+(id)_devices;
+(int)authorizationStatusForMediaType:(id)arg1 ;
+(void)requestAccessForMediaType:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
+(void)initialize;
+(id)devices;
-(void)_applyOverridesToCaptureOptions:(id)arg1 ;
-(void)handleNotification:(id)arg1 payload:(id)arg2 ;
-(char)addInput:(id)arg1 ;
-(AVCaptureDeviceFormat_FigRecorder *)activeFormat;
-(SCD_Struct_CM4)activeVideoMinFrameDuration;
-(void)_setActiveVideoMinFrameDuration:(SCD_Struct_CM4)arg1 ;
-(SCD_Struct_CM4)activeVideoMaxFrameDuration;
-(void)_setActiveVideoMaxFrameDuration:(SCD_Struct_CM4)arg1 ;
-(char)isActiveVideoMinFrameDurationSet;
-(id)activeInput;
-(char)_startUsingDevice:(id*)arg1 ;
-(void)_stopUsingDevice;
-(char)startUsingDevice:(id*)arg1 ;
-(void)stopUsingDevice;
-(NSString *)modelID;
-(char)hasMediaType:(id)arg1 ;
-(char)supportsAVCaptureSessionPreset:(id)arg1 ;
-(char)isSubjectAreaChangeMonitoringEnabled;
-(void)setSubjectAreaChangeMonitoringEnabled:(char)arg1 ;
-(char)isFaceDetectionSupported;
-(char)isFaceDetectionDuringVideoPreviewSupported;
-(char)isFaceDetectionDrivenImageProcessingEnabled;
-(void)setFaceDetectionDrivenImageProcessingEnabled:(char)arg1 ;
-(CGRect)faceRectangle;
-(int)faceRectangleAngle;
-(char)isHighDynamicRangeSceneDetectionSupported;
-(char)isHighDynamicRangeSceneDetectionEnabled;
-(void)setHighDynamicRangeSceneDetectionEnabled:(char)arg1 ;
-(char)isHighDynamicRangeScene;
-(char)isMachineReadableCodeDetectionSupported;
-(char)isInUseByAnotherApplication;
-(NSArray *)formats;
-(void)setActiveFormat:(AVCaptureDeviceFormat_FigRecorder *)arg1 ;
-(void)setActiveVideoMinFrameDuration:(SCD_Struct_CM4)arg1 ;
-(void)setActiveVideoMaxFrameDuration:(SCD_Struct_CM4)arg1 ;
-(char)isActiveVideoMaxFrameDurationSet;
-(OpaqueCMClockRef)deviceClock;
-(char)isLockedForConfiguration;
-(char)lockForConfiguration:(id*)arg1 ;
-(void)unlockForConfiguration;
-(char)open:(id*)arg1 ;
-(char)hasFlash;
-(char)isFlashAvailable;
-(char)isFlashActive;
-(char)isFlashModeSupported:(int)arg1 ;
-(int)flashMode;
-(void)setFlashMode:(int)arg1 ;
-(char)hasTorch;
-(float)torchLevel;
-(char)isTorchModeSupported:(int)arg1 ;
-(char)isTorchAvailable;
-(char)isTorchActive;
-(int)torchMode;
-(void)setTorchMode:(int)arg1 ;
-(char)setTorchModeOnWithLevel:(float)arg1 error:(id*)arg2 ;
-(char)isFocusModeSupported:(int)arg1 ;
-(int)focusMode;
-(void)setFocusMode:(int)arg1 ;
-(char)isFocusPointOfInterestSupported;
-(CGPoint)focusPointOfInterest;
-(char)isAdjustingFocus;
-(void)setFocusPointOfInterest:(CGPoint)arg1 ;
-(char)isAutoFocusRangeRestrictionSupported;
-(int)autoFocusRangeRestriction;
-(void)setAutoFocusRangeRestriction:(int)arg1 ;
-(char)isSmoothAutoFocusSupported;
-(char)isSmoothAutoFocusEnabled;
-(void)setSmoothAutoFocusEnabled:(char)arg1 ;
-(char)isExposureModeSupported:(int)arg1 ;
-(int)exposureMode;
-(void)setExposureMode:(int)arg1 ;
-(char)isExposurePointOfInterestSupported;
-(CGPoint)exposurePointOfInterest;
-(void)setExposurePointOfInterest:(CGPoint)arg1 ;
-(SCD_Struct_CM4)exposureDuration;
-(char)isAdjustingExposure;
-(char)isWhiteBalanceModeSupported:(int)arg1 ;
-(int)whiteBalanceMode;
-(void)setWhiteBalanceMode:(int)arg1 ;
-(char)isAdjustingWhiteBalance;
-(char)isImageControlModeSupported:(int)arg1 ;
-(char)automaticallyAdjustsImageControlMode;
-(void)setAutomaticallyAdjustsImageControlMode:(char)arg1 ;
-(int)imageControlMode;
-(void)setImageControlMode:(int)arg1 ;
-(float)saturation;
-(void)setSaturation:(float)arg1 ;
-(float)videoZoomFactor;
-(void)setVideoZoomFactor:(float)arg1 ;
-(void)rampToVideoZoomFactor:(float)arg1 withRate:(float)arg2 ;
-(char)isRampingVideoZoom;
-(void)cancelVideoZoomRamp;
-(char)isHDRSupported;
-(char)isLowLightBoostSupported;
-(char)isLowLightBoostEnabled;
-(char)automaticallyEnablesLowLightBoostWhenAvailable;
-(void)setAutomaticallyEnablesLowLightBoostWhenAvailable:(char)arg1 ;
-(char)isSISSupported;
-(void)setActiveInput:(id)arg1 ;
-(void)removeInput:(id)arg1 ;
-(void)_sessionWillStart;
-(void)_sessionDidStart;
-(char)isFaceDetectionDebugMetadataReportingEnabled;
-(void)setFaceDetectionDebugMetadataReportingEnabled:(char)arg1 ;
-(void)_setActiveFormatAndFrameRatesForResolvedOptions:(id)arg1 sendingFrameRatesToFig:(char)arg2 ;
-(float)focusPosition;
-(void)setFocusPosition:(float)arg1 ;
-(char)isManualFocusSupportEnabled;
-(void)setManualFocusSupportEnabled:(char)arg1 ;
-(void)setExposureDuration:(SCD_Struct_CM4)arg1 ;
-(float)exposureGain;
-(void)setExposureGain:(float)arg1 ;
-(char)isManualExposureSupportEnabled;
-(void)setManualExposureSupportEnabled:(char)arg1 ;
-(float)autoExposureBias;
-(void)setAutoExposureBias:(float)arg1 ;
-(float)whiteBalanceTemperature;
-(void)setWhiteBalanceTemperature:(float)arg1 ;
-(char)HDRUsesPreBracketedFrameAsEV0;
-(char)doesHandleNotification:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(char)isKindOfClass:(Class)arg1 ;
-(id)description;
-(void)setContrast:(float)arg1 ;
-(int)position;
-(NSString *)localizedName;
-(void)close;
-(float)contrast;
-(id)session;
-(char)isOpen;
-(char)isConnected;
-(NSString *)uniqueID;
@end

