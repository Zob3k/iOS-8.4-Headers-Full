/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:36:15 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/Accounts.framework/Accounts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Accounts/Accounts-Structs.h>
#import <Accounts/NSSecureCoding.h>

@class ACAccountStore, NSString, ACAccountType, ACAccountCredential, NSMutableDictionary, NSURL, NSDate, NSArray, NSMutableSet, NSDictionary, NSSet;

@interface ACAccount : NSObject <NSSecureCoding> {

	ACAccountStore* _store;
	NSString* _identifier;
	NSString* _accountDescription;
	NSString* _owningBundleID;
	NSString* _username;
	NSString* _authenticationType;
	NSString* _credentialType;
	NSString* _clientToken;
	char _haveCheckedForClientToken;
	ACAccountType* _accountType;
	ACAccountCredential* _credential;
	NSMutableDictionary* _properties;
	NSMutableDictionary* _dataclassProperties;
	char _accountAccessAvailable;
	char _authenticated;
	char _active;
	char _supportsAuthentication;
	char _visible;
	NSURL* _objectID;
	NSDate* _date;
	NSDate* _lastCredentialRenewalRejectionDate;
	ACAccount* _parentAccount;
	char _haveCheckedForParentAccount;
	NSString* _parentAccountIdentifier;
	char _haveCheckedForChildAccounts;
	NSArray* _childAccounts;
	NSMutableSet* _enabledDataclasses;
	NSMutableSet* _provisionedDataclasses;
	NSMutableSet* _dirtyProperties;
	NSMutableSet* _dirtyAccountProperties;
	id _credentialsDidChangeObserver;
	/*^block*/id _accountPropertiesTransformer;
	char _creatingFromManagedObject;

}

@property (nonatomic,readonly) NSString * aa_altDSID; 
@property (nonatomic,readonly) NSString * aa_personID; 
@property (setter=aa_setFirstName:,nonatomic,copy) NSString * aa_firstName; 
@property (setter=aa_setLastName:,nonatomic,copy) NSString * aa_lastName; 
@property (nonatomic,readonly) NSString * aa_primaryEmail; 
@property (nonatomic,readonly) NSString * aa_appleId; 
@property (nonatomic,readonly) NSArray * aa_appleIDAliases; 
@property (nonatomic,readonly) char aa_needsRegistration; 
@property (nonatomic,readonly) char aa_needsEmailConfiguration; 
@property (nonatomic,readonly) char aa_serviceUnavailable; 
@property (nonatomic,readonly) NSDictionary * aa_serviceUnavailableInfo; 
@property (nonatomic,readonly) NSString * aa_protocolVersion; 
@property (nonatomic,readonly) NSString * aa_displayName; 
@property (nonatomic,readonly) NSString * aa_syncStoreIdentifier; 
@property (nonatomic,readonly) NSString * aa_accountTypeString; 
@property (nonatomic,readonly) ACAccount * aa_fmfAccount; 
@property (nonatomic,readonly) ACAccount * aa_fmipAccount; 
@property (nonatomic,readonly) NSString * aa_fmipToken; 
@property (nonatomic,readonly) NSString * aa_mapsToken; 
@property (nonatomic,readonly) NSString * aa_hsaToken; 
@property (nonatomic,readonly) NSString * aa_accountFooterText; 
@property (nonatomic,readonly) NSDictionary * aa_accountFooterButton; 
@property (nonatomic,readonly) NSDictionary * aa_accountFirstDisplayAlert; 
@property (nonatomic,readonly) ACAccount * aa_cloudKitAccount; 
@property (nonatomic,readonly) ACAccount * aa_childMailAccount; 
@property (assign,setter=aa_setPrimaryAccount:,nonatomic) char aa_isPrimaryAccount; 
@property (assign,setter=aa_setPrimaryEmailVerified:,nonatomic) char aa_isPrimaryEmailVerified; 
@property (assign,setter=aa_setSyncedAccount:,nonatomic) char aa_isSyncedAccount; 
@property (assign,setter=aa_setNeedsToVerifyTerms:,nonatomic) char aa_needsToVerifyTerms; 
@property (assign,setter=aa_setUsesCloudDocs:,nonatomic) char aa_isUsingCloudDocs; 
@property (assign,setter=aa_setCloudDocsMigrationComplete:,nonatomic) char aa_isCloudDocsMigrationComplete; 
@property (setter=aa_setPassword:,nonatomic,copy) NSString * aa_password; 
@property (setter=aa_setAuthToken:,nonatomic,copy) NSString * aa_authToken; 
@property (assign,setter=aa_setUndergoingRepair:,nonatomic) char aa_isUndergoingRepair; 
@property (nonatomic,readonly) int aa_repairerPID; 
@property (nonatomic,retain) NSString * mcProfileUUID; 
@property (nonatomic,retain) NSString * mcPayloadUUID; 
@property (nonatomic,__weak,readonly) NSString * identifier; 
@property (nonatomic,retain) ACAccountType * accountType; 
@property (nonatomic,copy) NSString * accountDescription; 
@property (nonatomic,copy) NSString * username; 
@property (nonatomic,readonly) NSString * userFullName; 
@property (nonatomic,retain) ACAccountCredential * credential; 
@property (nonatomic,readonly) NSURL * objectID; 
@property (nonatomic,readonly) ACAccountStore * accountStore; 
@property (nonatomic,retain) ACAccount * parentAccount; 
@property (nonatomic,readonly) NSString * parentAccountIdentifier; 
@property (nonatomic,readonly) NSArray * childAccounts; 
@property (nonatomic,retain) NSMutableSet * enabledDataclasses; 
@property (nonatomic,retain) NSMutableSet * provisionedDataclasses; 
@property (nonatomic,__weak,readonly) NSDictionary * dataclassProperties; 
@property (assign,getter=isAuthenticated,nonatomic) char authenticated; 
@property (nonatomic,__weak,readonly) NSDictionary * accountProperties; 
@property (nonatomic,__weak,readonly) ACAccount * displayAccount; 
@property (assign,getter=isActive,nonatomic) char active; 
@property (assign,nonatomic) char supportsAuthentication; 
@property (getter=isDirty,nonatomic,readonly) char dirty; 
@property (nonatomic,readonly) NSSet * dirtyProperties;                                                                  //@synthesize dirtyProperties=_dirtyProperties - In the implementation block
@property (nonatomic,readonly) NSSet * dirtyAccountProperties;                                                           //@synthesize dirtyAccountProperties=_dirtyAccountProperties - In the implementation block
@property (nonatomic,readonly) NSString * authenticationType; 
@property (nonatomic,readonly) NSString * credentialType; 
@property (nonatomic,readonly) char supportsPush; 
@property (nonatomic,retain) NSDate * creationDate; 
@property (assign,getter=isVisible,nonatomic) char visible; 
@property (nonatomic,retain) NSDate * lastCredentialRenewalRejectionDate; 
@property (nonatomic,readonly) NSString * shortDebugName; 
@property (nonatomic,readonly) NSString * clientToken; 
@property (copy) id accountPropertiesTransformer;                                                                        //@synthesize accountPropertiesTransformer=_accountPropertiesTransformer - In the implementation block
+(id)aa_dataclassesBoundToPrimaryAppleAccount;
+(id)aa_dataclassesBoundToSingleAppleAccount;
+(id)_createNewAccountUID;
+(char)supportsSecureCoding;
-(void)aa_configureCerts;
-(void)aa_removeCerts;
-(NSString *)aa_appleId;
-(NSString *)aa_altDSID;
-(void)aa_setAuthToken:(id)arg1 ;
-(void)aa_updateWithProvisioningResponse:(id)arg1 ;
-(int)mobileMeAccountStatus;
-(ACAccount *)aa_fmipAccount;
-(void)_aa_setAltDSID:(id)arg1 ;
-(ACAccount *)aa_fmfAccount;
-(ACAccount *)aa_cloudKitAccount;
-(void)aa_setMapsToken:(id)arg1 ;
-(void)aa_setHSAToken:(id)arg1 ;
-(ACAccount *)aa_childMailAccount;
-(NSString *)aa_displayName;
-(void)aa_setFirstName:(id)arg1 ;
-(void)aa_setLastName:(id)arg1 ;
-(NSString *)aa_accountTypeString;
-(void)_aa_setAppleID:(id)arg1 ;
-(NSString *)aa_protocolVersion;
-(id)aa_authTokenWithError:(id*)arg1 ;
-(NSString *)aa_fmipToken;
-(NSString *)aa_mapsToken;
-(NSString *)aa_hsaToken;
-(id)aa_hsaTokenWithError:(id*)arg1 ;
-(NSString *)aa_accountFooterText;
-(NSDictionary *)aa_accountFooterButton;
-(NSDictionary *)aa_accountFirstDisplayAlert;
-(char)aa_serviceUnavailable;
-(NSDictionary *)aa_serviceUnavailableInfo;
-(char)aa_isSyncedAccount;
-(void)aa_setUseCellular:(char)arg1 forDataclass:(id)arg2 ;
-(char)aa_needsEmailConfiguration;
-(NSString *)aa_syncStoreIdentifier;
-(char)aa_isUndergoingRepair;
-(void)aa_setUndergoingRepair:(char)arg1 ;
-(int)aa_repairerPID;
-(NSString *)aa_personID;
-(char)aa_isUsingCloudDocs;
-(NSString *)aa_firstName;
-(NSString *)aa_lastName;
-(char)aa_isPrimaryAccount;
-(char)aa_isCloudDocsMigrationComplete;
-(void)aa_setCloudDocsMigrationComplete:(char)arg1 ;
-(void)aa_setUsesCloudDocs:(char)arg1 ;
-(char)aa_useCellularForDataclass:(id)arg1 ;
-(void)aa_setPassword:(id)arg1 ;
-(char)aa_needsRegistration;
-(void)aa_setPrimaryAccount:(char)arg1 ;
-(void)aa_setPrimaryEmailVerified:(char)arg1 ;
-(void)aa_setSyncedAccount:(char)arg1 ;
-(char)aa_isPrimaryEmailVerified;
-(NSString *)aa_authToken;
-(void)aa_setNeedsToVerifyTerms:(char)arg1 ;
-(char)aa_needsToVerifyTerms;
-(NSString *)aa_primaryEmail;
-(NSArray *)aa_appleIDAliases;
-(NSString *)aa_password;
-(void)storeOriginalUsername;
-(id)initWithAppleID:(id)arg1 password:(id)arg2 ;
-(id)_registeredBundles;
-(void)setDSID:(id)arg1 ;
-(char)canRemoveAccount;
-(id)dsid;
-(id)appleID;
-(char)MCIsManaged;
-(NSString *)mcProfileUUID;
-(void)setMcProfileUUID:(NSString *)arg1 ;
-(NSString *)mcPayloadUUID;
-(void)setMcPayloadUUID:(NSString *)arg1 ;
-(id)mcBackingProfile;
-(id)mcBackingPayload;
-(void)_clearCachedChildAccounts;
-(void)_clearDirtyProperties;
-(void)_clearCachedCredentials;
-(void)_installCredentialsChangedObserver;
-(void)_markPropertyDirty:(id)arg1 ;
-(void)credentialsChanged:(id)arg1 ;
-(id)accountPropertiesTransformer;
-(void)_markAccountPropertyDirty:(id)arg1 ;
-(id)enabledAndSyncableDataclasses;
-(char)_useParentForCredentials;
-(id)fullDescription;
-(void)_markCredentialDirty;
-(void)setAccountProperties:(NSDictionary *)arg1 ;
-(void)setProperties:(id)arg1 forDataclass:(id)arg2 ;
-(void)setCreatingFromManagedObject:(char)arg1 ;
-(NSString *)shortDebugName;
-(void)setAccountPropertiesTransformer:(id)arg1 ;
-(void)refresh;
-(void)_setObjectID:(id)arg1 ;
-(NSSet *)dirtyProperties;
-(char)isPropertyDirty:(id)arg1 ;
-(ACAccount *)displayAccount;
-(NSString *)userFullName;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)description;
-(void)reload;
-(id)objectForKeyedSubscript:(id)arg1 ;
-(void)setObject:(id)arg1 forKeyedSubscript:(id)arg2 ;
-(char)isActive;
-(NSString *)identifier;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setIdentifier:(NSString *)arg1 ;
-(void)setVisible:(char)arg1 ;
-(void)setActive:(char)arg1 ;
-(char)isVisible;
-(void)setSupportsAuthentication:(char)arg1 ;
-(id)owningBundleID;
-(void)setOwningBundleID:(id)arg1 ;
-(id)initWithManagedAccount:(id)arg1 accountStore:(id)arg2 ;
-(void)_setAccountStore:(id)arg1 ;
-(void)_loadAllCachedProperties;
-(id)_initWithManagedAccount:(id)arg1 accountStore:(id)arg2 withDirtyStateFromAccount:(id)arg3 ;
-(id)diffAccount:(id)arg1 ;
-(NSSet *)dirtyAccountProperties;
-(NSDictionary *)dataclassProperties;
-(void)setDataclassProperties:(NSDictionary *)arg1 ;
-(void)setEnabledDataclasses:(NSMutableSet *)arg1 ;
-(void)markAllPropertiesDirty;
-(id)initWithManagedAccount:(id)arg1 ;
-(void)setLastCredentialRenewalRejectionDate:(NSDate *)arg1 ;
-(id)accountByCleaningThirdPartyTransformations;
-(NSDate *)lastCredentialRenewalRejectionDate;
-(id)childAccountsWithAccountTypeIdentifier:(id)arg1 ;
-(char)isEnabledForDataclass:(id)arg1 ;
-(NSDate *)creationDate;
-(ACAccountType *)accountType;
-(ACAccountStore *)accountStore;
-(NSArray *)childAccounts;
-(id)initWithAccountType:(id)arg1 ;
-(void)setUsername:(NSString *)arg1 ;
-(void)setParentAccount:(ACAccount *)arg1 ;
-(ACAccount *)parentAccount;
-(id)propertyForKey:(id)arg1 ;
-(void)setProperty:(id)arg1 forKey:(id)arg2 ;
-(NSString *)clientToken;
-(char)authenticated;
-(char)isEnabledToSyncDataclass:(id)arg1 ;
-(char)addClientToken:(id)arg1 ;
-(void)takeValuesFromModifiedAccount:(id)arg1 ;
-(char)supportsPush;
-(char)supportsAuthentication;
-(NSMutableSet *)provisionedDataclasses;
-(ACAccountCredential *)credential;
-(NSString *)authenticationType;
-(void)setAuthenticationType:(NSString *)arg1 ;
-(void)setProvisionedDataclasses:(NSMutableSet *)arg1 ;
-(void)setAuthenticated:(char)arg1 ;
-(id)accountPropertyForKey:(id)arg1 ;
-(NSString *)parentAccountIdentifier;
-(NSDictionary *)accountProperties;
-(void)setAccountProperty:(id)arg1 forKey:(id)arg2 ;
-(void)setAccountDescription:(NSString *)arg1 ;
-(id)credentialWithError:(id*)arg1 ;
-(void)setCredential:(ACAccountCredential *)arg1 ;
-(NSMutableSet *)enabledDataclasses;
-(void)setCredentialType:(NSString *)arg1 ;
-(NSString *)credentialType;
-(NSURL *)objectID;
-(void)setCreationDate:(NSDate *)arg1 ;
-(void)setEnabled:(char)arg1 forDataclass:(id)arg2 ;
-(id)propertiesForDataclass:(id)arg1 ;
-(char)isProvisionedForDataclass:(id)arg1 ;
-(NSString *)username;
-(char)isDirty;
-(NSString *)accountDescription;
-(char)isAuthenticated;
-(void)setAccountType:(ACAccountType *)arg1 ;
@end

