/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:36:48 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/EventKit.framework/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <EventKit/EventKit-Structs.h>
@class NSCalendar, NSDate, NSTimeZone, NSArray;

@interface EKRecurrenceGenerator : NSObject {

	NSCalendar* _calendar;
	NSDate* _eventStartDate;
	NSDate* _eventEndDate;
	NSTimeZone* _eventTimeZone;
	unsigned _duration;
	char _allDay;
	long _interval;
	int _frequency;
	NSDate* _endDate;
	long _weekStart;
	char _shouldPinMonthDays;
	NSArray* _daysOfTheWeek;
	NSArray* _daysOfTheMonth;
	NSArray* _daysOfTheYear;
	NSArray* _weeksOfTheYear;
	NSArray* _monthsOfTheYear;
	NSArray* _setPositions;

}

@property (nonatomic,copy) NSDate * eventStartDate;                 //@synthesize eventStartDate=_eventStartDate - In the implementation block
@property (nonatomic,copy) NSDate * eventEndDate;                   //@synthesize eventEndDate=_eventEndDate - In the implementation block
@property (nonatomic,copy) NSTimeZone * eventTimeZone;              //@synthesize eventTimeZone=_eventTimeZone - In the implementation block
@property (assign,nonatomic) char allDay;                           //@synthesize allDay=_allDay - In the implementation block
@property (nonatomic,copy) NSDate * endDate;                        //@synthesize endDate=_endDate - In the implementation block
@property (nonatomic,copy) NSArray * daysOfTheWeek;                 //@synthesize daysOfTheWeek=_daysOfTheWeek - In the implementation block
@property (nonatomic,copy) NSArray * daysOfTheMonth;                //@synthesize daysOfTheMonth=_daysOfTheMonth - In the implementation block
@property (nonatomic,copy) NSArray * daysOfTheYear;                 //@synthesize daysOfTheYear=_daysOfTheYear - In the implementation block
@property (nonatomic,copy) NSArray * weeksOfTheYear;                //@synthesize weeksOfTheYear=_weeksOfTheYear - In the implementation block
@property (nonatomic,copy) NSArray * monthsOfTheYear;               //@synthesize monthsOfTheYear=_monthsOfTheYear - In the implementation block
@property (nonatomic,copy) NSArray * setPositions;                  //@synthesize setPositions=_setPositions - In the implementation block
+(id)generator;
-(id)computeRecurrenceEndDateForCalEvent:(void*)arg1 recurrenceRule:(void*)arg2 count:(unsigned)arg3 locked:(char)arg4 ;
-(id)copyOccurrenceDatesWithCalEvent:(void*)arg1 startDate:(SCD_Struct_EK12)arg2 endDate:(SCD_Struct_EK12)arg3 timeZone:(id)arg4 limit:(int)arg5 locked:(char)arg6 ;
-(id)copyOccurrenceDatesWithInitialDate:(id)arg1 calRecurrences:(id)arg2 rangeStart:(id)arg3 rangeEnd:(id)arg4 timeZone:(id)arg5 ;
-(char)isOccurrenceDate:(id)arg1 validForEvent:(id)arg2 ;
-(id)nextOccurrenceDateWithEKRecurrences:(id)arg1 initialDate:(id)arg2 afterDate:(id)arg3 ;
-(NSArray *)monthsOfTheYear;
-(NSArray *)daysOfTheMonth;
-(id)nextOccurrenceDateWithEKRecurrences:(id)arg1 exceptionDates:(id)arg2 initialDate:(id)arg3 afterDate:(id)arg4 ;
-(id)copyOccurrenceDatesWithEKEvent:(id)arg1 recurrenceRule:(id)arg2 startDate:(SCD_Struct_EK12)arg3 endDate:(SCD_Struct_EK12)arg4 timeZone:(id)arg5 exceptionDates:(id)arg6 limit:(int)arg7 ;
-(char)occurrenceDate:(id)arg1 matchesRecurrenceRule:(id)arg2 forEvent:(id)arg3 includeDetachedEventsInSeries:(char)arg4 ;
-(id)copyOccurrenceDatesWithEvent:(id)arg1 recurrenceRule:(id)arg2 startDate:(SCD_Struct_EK12)arg3 endDate:(SCD_Struct_EK12)arg4 timeZone:(id)arg5 limit:(int)arg6 ;
-(void)setDaysOfTheWeek:(NSArray *)arg1 ;
-(void)setDaysOfTheMonth:(NSArray *)arg1 ;
-(void)setSetPositions:(NSArray *)arg1 ;
-(void)setMonthsOfTheYear:(NSArray *)arg1 ;
-(void)setDaysOfTheYear:(NSArray *)arg1 ;
-(void)setWeeksOfTheYear:(NSArray *)arg1 ;
-(NSArray *)daysOfTheWeek;
-(NSArray *)setPositions;
-(NSArray *)daysOfTheYear;
-(NSArray *)weeksOfTheYear;
-(void)setEventStartDate:(NSDate *)arg1 ;
-(void)setEventEndDate:(NSDate *)arg1 ;
-(void)setEventTimeZone:(NSTimeZone *)arg1 ;
-(NSDate *)eventEndDate;
-(NSDate *)eventStartDate;
-(void)_setupForEKEvent:(id)arg1 ;
-(void)_prepareForEKRecurrence:(id)arg1 ;
-(id)_copyOccurrenceDatesBetweenStartDate:(SCD_Struct_EK12)arg1 endDate:(SCD_Struct_EK12)arg2 timeZone:(id)arg3 limit:(int)arg4 ;
-(void)_setupForCalEvent:(void*)arg1 locked:(char)arg2 ;
-(id)_copyOccurrenceDatesWithBirthdayEvent:(void*)arg1 startDate:(SCD_Struct_EK12)arg2 endDate:(SCD_Struct_EK12)arg3 timeZone:(id)arg4 limit:(int)arg5 locked:(char)arg6 ;
-(void)_prepareForCalRecurrence:(void*)arg1 locked:(char)arg2 ;
-(void)_setupForPersistentEvent:(id)arg1 ;
-(void)_prepareForPersistentRecurrence:(id)arg1 ;
-(id)_computeRecurrenceEndDate:(unsigned)arg1 ;
-(double)_convertAbsoluteTime:(double)arg1 fromTimeZone:(id)arg2 toTimeZone:(id)arg3 ;
-(id)_copyDailyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned)arg4 ;
-(id)_copyWeeklyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned)arg4 ;
-(id)_copyMonthlyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned)arg4 ;
-(id)_copyYearlyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned)arg4 ;
-(char)_validateCalDate:(SCD_Struct_EK12)arg1 pinned:(char)arg2 ;
-(id)copyOccurrenceDatesWithEKEvent:(id)arg1 startDate:(SCD_Struct_EK12)arg2 endDate:(SCD_Struct_EK12)arg3 timeZone:(id)arg4 limit:(int)arg5 ;
-(id)copyOccurrenceDatesWithEKEvent:(id)arg1 recurrenceRule:(id)arg2 startDate:(SCD_Struct_EK12)arg3 endDate:(SCD_Struct_EK12)arg4 timeZone:(id)arg5 limit:(int)arg6 ;
-(id)copyOccurrenceDatesWithEvent:(id)arg1 startDate:(SCD_Struct_EK12)arg2 endDate:(SCD_Struct_EK12)arg3 timeZone:(id)arg4 limit:(int)arg5 ;
-(char)_isSimpleYearlyRecurrence;
-(id)_copySimpleYearlyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned)arg4 ;
-(NSTimeZone *)eventTimeZone;
-(void)dealloc;
-(id)init;
-(void)setAllDay:(char)arg1 ;
-(char)allDay;
-(void)setEndDate:(NSDate *)arg1 ;
-(NSDate *)endDate;
@end

