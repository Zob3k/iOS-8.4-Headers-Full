/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:37:56 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SceneKit/SceneKit-Structs.h>
#import <SceneKit/NSCopying.h>
#import <SceneKit/NSSecureCoding.h>
#import <SceneKit/SCNAnimatable.h>
#import <SceneKit/SCNActionable.h>
#import <SceneKit/SCNBoundingVolume.h>

@class NSMutableArray, SCNLight, SCNGeometry, SCNCamera, SCNSkinner, SCNMorpher, NSArray, SCNOrderedDictionary, SCNPhysicsBody, SCNPhysicsField, NSString, NSMutableDictionary;

@interface SCNNode : NSObject <NSCopying, NSSecureCoding, SCNAnimatable, SCNActionable, SCNBoundingVolume> {

	id _reserved;
	_C3DNode* _node;
	SCNNode* _parent;
	NSMutableArray* _childNodes;
	SCNNode* _presentationInstance;
	unsigned _isPresentationInstance : 1;
	unsigned _lightLoaded : 1;
	unsigned _geometryLoaded : 1;
	unsigned _cameraLoaded : 1;
	unsigned _skinnerLoaded : 1;
	unsigned _morpherLoaded : 1;
	unsigned _paused : 1;
	unsigned _pausedByInheritance : 1;
	unsigned _affineUpToDate : 1;
	unsigned _transformUpToDate : 1;
	unsigned _hasPivot : 1;
	unsigned _usesEuler : 1;
	SCNMatrix4 _transform;
	SCNVector3 _position;
	SCNVector4 _rotation;
	SCNVector3 _scale;
	float _opacity;
	char _hidden;
	char _castsShadow;
	unsigned _categoryBitMask;
	SCNLight* _light;
	SCNGeometry* _geometry;
	SCNCamera* _camera;
	SCNSkinner* _skinner;
	SCNMorpher* _morpher;
	NSArray* _filters;
	NSMutableArray* _particleSystems;
	SCNOrderedDictionary* _animations;
	SCNOrderedDictionary* _actions;
	NSMutableArray* _constraints;
	SCNPhysicsBody* _physicsBody;
	SCNPhysicsField* _physicsField;
	SCNVector3* _fixedBoundingBoxExtrema;
	int _renderingOrder;
	NSString* _name;
	NSMutableDictionary* _valueForKey;
	id _rendererDelegate;

}

@property (nonatomic,copy) NSString * name; 
@property (nonatomic,retain) SCNLight * light; 
@property (nonatomic,retain) SCNCamera * camera; 
@property (nonatomic,retain) SCNGeometry * geometry; 
@property (nonatomic,retain) SCNSkinner * skinner; 
@property (nonatomic,retain) SCNMorpher * morpher; 
@property (assign,nonatomic) SCNMatrix4 transform; 
@property (assign,nonatomic) SCNVector3 position; 
@property (assign,nonatomic) SCNVector4 rotation; 
@property (assign,nonatomic) SCNVector4 orientation; 
@property (assign,nonatomic) SCNVector3 eulerAngles; 
@property (assign,nonatomic) SCNVector3 scale; 
@property (assign,nonatomic) SCNMatrix4 pivot; 
@property (nonatomic,readonly) SCNMatrix4 worldTransform; 
@property (assign,getter=isHidden,nonatomic) char hidden; 
@property (assign,nonatomic) float opacity; 
@property (assign,nonatomic) int renderingOrder; 
@property (assign,nonatomic) char castsShadow; 
@property (nonatomic,readonly) SCNNode * parentNode; 
@property (nonatomic,readonly) NSArray * childNodes; 
@property (nonatomic,retain) SCNPhysicsBody * physicsBody; 
@property (nonatomic,retain) SCNPhysicsField * physicsField; 
@property (copy) NSArray * constraints; 
@property (nonatomic,copy) NSArray * filters; 
@property (assign,getter=isPaused,nonatomic) char paused; 
@property (assign,nonatomic) id<SCNNodeRendererDelegate> rendererDelegate; 
@property (assign,nonatomic) unsigned categoryBitMask; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)SCNJSExportProtocol;
+(id)nodeWithNodeRef:(_C3DNode*)arg1 ;
+(id)nodeWithGeometry:(id)arg1 ;
+(id)keyPathsForValuesAffectingTransform;
+(char)resolveInstanceMethod:(SEL)arg1 ;
+(char)supportsSecureCoding;
+(id)node;
-(id)scene;
-(_C3DNode*)nodeRef;
-(C3DSceneRef)sceneRef;
-(void*)__CFObject;
-(void)_syncObjCAnimations;
-(_C3DAnimationManager*)animationManager;
-(void)_pauseAnimation:(char)arg1 forKey:(id)arg2 ;
-(void)pauseAnimationForKey:(id)arg1 ;
-(void)resumeAnimationForKey:(id)arg1 ;
-(char)isAnimationForKeyPaused:(id)arg1 ;
-(void)removeAnimationForKey:(id)arg1 fadeOutDuration:(float)arg2 ;
-(void)__removeAnimation:(id)arg1 forKey:(id)arg2 ;
-(_C3DAnimationChannel*)copyAnimationChannelForKeyPath:(id)arg1 ;
-(char)isPausedOrPausedByInheritance;
-(id)presentationInstance;
-(void)setWorldTransform:(SCNMatrix4)arg1 ;
-(void)removeFromParentNode;
-(void)_removeAction:(id)arg1 forKey:(id)arg2 ;
-(SCNMatrix4)worldTransform;
-(id)presentationNode;
-(id)childNodeWithName:(id)arg1 recursively:(char)arg2 ;
-(void)runAction:(id)arg1 ;
-(SCNPhysicsBody *)physicsBody;
-(void)_syncObjCModel;
-(void)_syncEntityObjCModel;
-(char)castsShadow;
-(void)setCastsShadow:(char)arg1 ;
-(SCNLight *)light;
-(void)_setAttributes:(id)arg1 ;
-(void)_setGeometry:(id)arg1 ;
-(void)_setCamera:(id)arg1 ;
-(void)_setLight:(id)arg1 ;
-(void)_setSkinner:(id)arg1 ;
-(void)_setMorpher:(id)arg1 ;
-(id)initPresentationNodeWithNodeRef:(_C3DNode*)arg1 ;
-(void)_dump:(id)arg1 ;
-(SCNMatrix4)pivot;
-(void)setPivot:(SCNMatrix4)arg1 ;
-(int)renderingOrder;
-(void)setRenderingOrder:(int)arg1 ;
-(void)setLight:(SCNLight *)arg1 ;
-(id<SCNNodeRendererDelegate>)rendererDelegate;
-(void)setRendererDelegate:(id<SCNNodeRendererDelegate>)arg1 ;
-(SCNSkinner *)skinner;
-(void)setSkinner:(SCNSkinner *)arg1 ;
-(SCNMorpher *)morpher;
-(void)setMorpher:(SCNMorpher *)arg1 ;
-(SCNPhysicsField *)physicsField;
-(void)setPhysicsField:(SCNPhysicsField *)arg1 ;
-(id)particleSystems;
-(void)addParticleSystem:(id)arg1 ;
-(char)isGizmo;
-(void)setGizmo:(char)arg1 ;
-(id)actionKeys;
-(void)runAction:(id)arg1 forKey:(id)arg2 ;
-(void)setPhysicsBody:(SCNPhysicsBody *)arg1 ;
-(id)_copy:(char)arg1 ;
-(id)_copyRecursively;
-(void)addChildNode:(id)arg1 ;
-(void)_initChildNodesArray;
-(void)_expandChildArrayIfNeeded;
-(id)initWithNodeRef:(_C3DNode*)arg1 ;
-(char)_childNodesPassingTest:(/*^block*/id)arg1 recursively:(char)arg2 output:(id)arg3 ;
-(id)childNodesPassingTest:(/*^block*/id)arg1 recursively:(char)arg2 ;
-(char)_enumerateChildNodesUsingBlock:(/*^block*/id)arg1 ;
-(void)_childNodesWithAttribute:(Class)arg1 output:(id)arg2 recursively:(char)arg3 ;
-(id)objectInChildNodesWithAttribute:(id)arg1 firstOnly:(char)arg2 ;
-(SCNVector3)convertPosition:(SCNVector3)arg1 toNode:(id)arg2 ;
-(void)_updateAffine;
-(SCNVector4)_quaternion;
-(void)_setQuaternion:(SCNVector4)arg1 ;
-(SCNVector3)_euler;
-(void)_updateTransform;
-(SCNMatrix4)convertTransform:(SCNMatrix4)arg1 fromNode:(id)arg2 ;
-(id)__light;
-(id)__skinner;
-(id)__morpher;
-(id)__camera;
-(id)__geometry;
-(id)objectInChildNodesAtIndex:(unsigned)arg1 ;
-(char)parseSpecialKey:(id)arg1 withPath:(id)arg2 intoDestination:(id*)arg3 remainingPath:(id*)arg4 ;
-(unsigned)countOfChildNodes;
-(void)insertObject:(id)arg1 inChildNodesAtIndex:(unsigned)arg2 ;
-(char)canAddChildNode:(id)arg1 ;
-(void)_setPaused:(char)arg1 ;
-(void)__insertObject:(id)arg1 inChildNodesAtIndex:(unsigned)arg2 ;
-(void)__removeObjectFromChildNodesAtIndex:(unsigned)arg1 ;
-(void)removeObjectFromChildNodesAtIndex:(unsigned)arg1 ;
-(unsigned)indexOfChildNode:(id)arg1 ;
-(void)replaceObjectInChildNodesAtIndex:(unsigned)arg1 withObject:(id)arg2 ;
-(char)getBoundingBoxMin:(SCNVector3*)arg1 max:(SCNVector3*)arg2 ;
-(char)getBoundingSphereCenter:(SCNVector3*)arg1 radius:(float*)arg2 ;
-(id)flattenedClone;
-(void)_actionsTimeJump:(double)arg1 ;
-(void)removeActionForKey:(id)arg1 ;
-(void)runAction:(id)arg1 forKey:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_removeDeadParticleSystem:(C3DParticleSystemRef)arg1 ;
-(id)clone;
-(void)insertChildNode:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)replaceChildNode:(id)arg1 with:(id)arg2 ;
-(id)childNodesPassingTest:(/*^block*/id)arg1 ;
-(void)enumerateChildNodesUsingBlock:(/*^block*/id)arg1 ;
-(SCNVector3)convertPosition:(SCNVector3)arg1 fromNode:(id)arg2 ;
-(SCNMatrix4)convertTransform:(SCNMatrix4)arg1 toNode:(id)arg2 ;
-(id)hitTestWithSegmentFromPoint:(SCNVector3)arg1 toPoint:(SCNVector3)arg2 options:(id)arg3 ;
-(void)removeAllParticleSystems;
-(void)removeParticleSystem:(id)arg1 ;
-(id)getBoundingBox;
-(id)getBoundingSphere;
-(id)childNodeWithName:(id)arg1 ;
-(void)runAction:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)hasActions;
-(SCNVector3)eulerAngles;
-(void)setEulerAngles:(SCNVector3)arg1 ;
-(void)setConstraints:(NSArray *)arg1 ;
-(void)setBoundingBoxMin:(SCNVector3*)arg1 max:(SCNVector3*)arg2 ;
-(void)_customEncodingOfSCNNode:(id)arg1 ;
-(void)_customDecodingOfSCNNode:(id)arg1 ;
-(void)_didDecodeSCNNode:(id)arg1 ;
-(char)isPresentationInstance;
-(void)dump;
-(id)objectInChildNodesWithName:(id)arg1 ;
-(id)childNodesWithAttribute:(Class)arg1 recursively:(char)arg2 ;
-(id)jsChildNodesWithAttribute:(id)arg1 ;
-(void)_registerAsObserver;
-(void)setQuaternion:(SCNVector4)arg1 ;
-(id)mutableChildNodes;
-(char)isJoint;
-(void)removeAllChilds;
-(id)flattenedCopy;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isHidden;
-(void)setHidden:(char)arg1 ;
-(id)init;
-(id)copy;
-(NSString *)description;
-(void)_setParent:(id)arg1 ;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(SCNVector4)orientation;
-(id)identifier;
-(SCNVector3)scale;
-(void)_setScale:(SCNVector3)arg1 ;
-(void)addAnimation:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setTransform:(SCNMatrix4)arg1 ;
-(id)actionForKey:(id)arg1 ;
-(void)setPosition:(SCNVector3)arg1 ;
-(id)animationKeys;
-(id)animationForKey:(id)arg1 ;
-(SCNMatrix4)transform;
-(void)removeAnimationForKey:(id)arg1 ;
-(id)valueForKeyPath:(id)arg1 ;
-(void)addAnimation:(id)arg1 forKey:(id)arg2 ;
-(void)setFilters:(NSArray *)arg1 ;
-(void)setValue:(id)arg1 forKeyPath:(id)arg2 ;
-(NSArray *)constraints;
-(void)renderInContext:(void*)arg1 ;
-(SCNVector3)position;
-(void)setIdentifier:(id)arg1 ;
-(float)opacity;
-(void)setOpacity:(float)arg1 ;
-(NSArray *)filters;
-(void)removeAllAnimations;
-(void)setScale:(SCNVector3)arg1 ;
-(NSArray *)childNodes;
-(void)removeAllActions;
-(void)setOrientation:(SCNVector4)arg1 ;
-(id)valueForUndefinedKey:(id)arg1 ;
-(void)setRotation:(SCNVector4)arg1 ;
-(SCNVector4)rotation;
-(SCNNode *)parentNode;
-(void)setPaused:(char)arg1 ;
-(SCNGeometry *)geometry;
-(void)setGeometry:(SCNGeometry *)arg1 ;
-(unsigned)categoryBitMask;
-(void)setCategoryBitMask:(unsigned)arg1 ;
-(SCNVector4)quaternion;
-(void)setAttribute:(id)arg1 forKey:(id)arg2 ;
-(id)attributeForKey:(id)arg1 ;
-(void)_setPosition:(SCNVector3)arg1 ;
-(SCNCamera *)camera;
-(char)isPaused;
-(void)setCamera:(SCNCamera *)arg1 ;
-(char)hidden;
-(void)setValue:(id)arg1 forUndefinedKey:(id)arg2 ;
@end

