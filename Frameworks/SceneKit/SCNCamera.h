/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:37:57 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SceneKit/SceneKit-Structs.h>
#import <SceneKit/SCNAnimatable.h>
#import <SceneKit/SCNTechniqueSupport.h>
#import <SceneKit/NSCopying.h>
#import <SceneKit/NSSecureCoding.h>

@class SCNOrderedDictionary, NSString, SCNTechnique;

@interface SCNCamera : NSObject <SCNAnimatable, SCNTechniqueSupport, NSCopying, NSSecureCoding> {

	id _reserved;
	_C3DCamera* _camera;
	unsigned _isPresentationInstance : 1;
	unsigned _custom : 1;
	unsigned _usesOrthographicProjection : 1;
	unsigned _automaticallyAdjustsZRange : 1;
	SCNOrderedDictionary* _animations;
	NSString* _name;
	double _xFov;
	double _yFov;
	double _orthographicScale;
	double _zNear;
	double _zFar;
	float _focalDistance;
	float _focalBlurRadius;
	float _focalSize;
	float _aperture;
	unsigned _categoryBitMask;
	SCNMatrix4 _projectionTransform;
	SCNTechnique* _technique;

}

@property (nonatomic,copy) NSString * name; 
@property (assign,nonatomic) double xFov; 
@property (assign,nonatomic) double yFov; 
@property (assign,nonatomic) double zNear; 
@property (assign,nonatomic) double zFar; 
@property (assign,nonatomic) char automaticallyAdjustsZRange; 
@property (assign,nonatomic) char usesOrthographicProjection; 
@property (assign,nonatomic) double orthographicScale; 
@property (assign,nonatomic) float focalDistance; 
@property (assign,nonatomic) float focalSize; 
@property (assign,nonatomic) float focalBlurRadius; 
@property (assign,nonatomic) float aperture; 
@property (assign,nonatomic) unsigned categoryBitMask; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) SCNTechnique * technique; 
+(id)SCNJSExportProtocol;
+(id)cameraWithCameraRef:(_C3DCamera*)arg1 ;
+(char)supportsSecureCoding;
+(id)camera;
-(id)scene;
-(C3DSceneRef)sceneRef;
-(void*)__CFObject;
-(void)_syncObjCAnimations;
-(_C3DAnimationManager*)animationManager;
-(void)_pauseAnimation:(char)arg1 forKey:(id)arg2 ;
-(void)pauseAnimationForKey:(id)arg1 ;
-(void)resumeAnimationForKey:(id)arg1 ;
-(char)isAnimationForKeyPaused:(id)arg1 ;
-(void)removeAnimationForKey:(id)arg1 fadeOutDuration:(float)arg2 ;
-(void)__removeAnimation:(id)arg1 forKey:(id)arg2 ;
-(_C3DAnimationChannel*)copyAnimationChannelForKeyPath:(id)arg1 ;
-(char)isPausedOrPausedByInheritance;
-(id)presentationInstance;
-(_C3DCamera*)cameraRef;
-(void)_syncObjCModel;
-(void)_syncEntityObjCModel;
-(double)orthographicScale;
-(void)setOrthographicScale:(double)arg1 ;
-(double)zNear;
-(void)setZNear:(double)arg1 ;
-(double)zFar;
-(void)setZFar:(double)arg1 ;
-(void)setTechnique:(SCNTechnique *)arg1 ;
-(SCNTechnique *)technique;
-(id)presentationCamera;
-(void)_registerAsObserver;
-(float)focalBlurRadius;
-(void)setFocalBlurRadius:(float)arg1 ;
-(char)hasCustomProjectionTransform;
-(double)xFov;
-(double)yFov;
-(char)usesOrthographicProjection;
-(float)focalDistance;
-(float)focalSize;
-(float)aperture;
-(id)initWithCameraRef:(_C3DCamera*)arg1 ;
-(id)initPresentationCameraWithCameraRef:(_C3DCamera*)arg1 ;
-(void)setFocalDistance:(float)arg1 ;
-(void)setAperture:(float)arg1 ;
-(void)setFocalSize:(float)arg1 ;
-(void)setXFov:(double)arg1 ;
-(void)setYFov:(double)arg1 ;
-(char)automaticallyAdjustsZRange;
-(void)setAutomaticallyAdjustsZRange:(char)arg1 ;
-(void)setUsesOrthographicProjection:(char)arg1 ;
-(SCNMatrix4)projectionTransform;
-(void)setProjectionTransform:(SCNMatrix4)arg1 ;
-(void)_customEncodingOfSCNCamera:(id)arg1 ;
-(void)_didDecodeSCNCamera:(id)arg1 ;
-(double)xMag;
-(void)setXMag:(double)arg1 ;
-(double)yMag;
-(void)setYMag:(double)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(id)copy;
-(NSString *)description;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(id)identifier;
-(void)addAnimation:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)animationKeys;
-(id)animationForKey:(id)arg1 ;
-(void)removeAnimationForKey:(id)arg1 ;
-(void)addAnimation:(id)arg1 forKey:(id)arg2 ;
-(void)setIdentifier:(id)arg1 ;
-(void)removeAllAnimations;
-(unsigned)categoryBitMask;
-(void)setCategoryBitMask:(unsigned)arg1 ;
@end

