/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:37:34 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <MediaPlayer/MPViewController.h>
#import <MediaPlayer/MPVideoControllerProtocol.h>
#import <MediaPlayer/MPSwipableViewDelegate.h>
#import <UIKit/UIModalViewDelegate.h>

@class UIView, UIColor, _UIHostedWindow, UIImage, MPVideoView, MPVideoBackgroundView, MPSwipableView, MPClosedCaptionDisplay, UIAlertView, UIActivityIndicatorView, MPTVOutWindow, NSString, MPAVItem, MPAVController;

@interface MPVideoViewController : MPViewController <MPVideoControllerProtocol, MPSwipableViewDelegate, UIModalViewDelegate> {

	MPVideoBackgroundView* _backgroundView;
	MPSwipableView* _backstopView;
	char _batteryMonitoringWasEnabled;
	MPClosedCaptionDisplay* _captionView;
	unsigned long long _desiredParts;
	unsigned long long _disabledParts;
	unsigned long long _visibleParts;
	unsigned _tvOutEnabled : 1;
	unsigned _allowsTVOutInBackground : 1;
	unsigned _itemTypeOverride;
	unsigned _scaleMode;
	unsigned _scaleModeOverride;
	UIAlertView* _alertSheet;
	UIColor* _backstopColor;
	UIActivityIndicatorView* _loadingIndicator;
	MPTVOutWindow* _tvOutWindow;
	unsigned _backgroundTaskId;
	int _artworkImageStyle;
	UIImage* _posterImage;
	unsigned _canAnimateControlsOverlay : 1;
	unsigned _canShowControlsOverlay : 1;
	unsigned _disableControlsAutohide : 1;
	unsigned _playAfterPop : 1;
	unsigned _scheduledLoadingIndicator : 1;
	unsigned _displayPlaybackErrorAlerts : 1;
	unsigned _allowsDetailScrubbing : 1;
	unsigned _attemptAutoPlayWhenControlsHidden : 1;
	unsigned _alwaysAllowHidingControlsOverlay : 1;
	unsigned _hasShownFirstVideoFrame : 1;
	unsigned _allowsWirelessPlayback : 1;
	unsigned _disableAutoRotation : 1;
	unsigned _inlinePlaybackUsesTVOut : 1;

}

@property (assign,nonatomic) char allowsTVOutInBackground; 
@property (getter=isTransitioningToFullscreen,nonatomic,readonly) char transitioningToFullscreen; 
@property (getter=isTransitioningFromFullscreen,nonatomic,readonly) char transitioningFromFullscreen; 
@property (nonatomic,readonly) UIView * artworkImageView; 
@property (nonatomic,readonly) char showArtworkInImageView; 
@property (nonatomic,readonly) char showArtworkForTVOut; 
@property (nonatomic,readonly) char canShowQTAudioOnlyUI; 
@property (nonatomic,readonly) UIView*<MPVideoOverlay> videoOverlayViewIfLoaded; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id delegate; 
@property (nonatomic,retain) MPAVItem * item; 
@property (assign,nonatomic) int orientation; 
@property (nonatomic,retain) MPAVController * player; 
@property (nonatomic,retain,readonly) UIView * view; 
@property (assign,nonatomic) char allowsDetailScrubbing; 
@property (assign,nonatomic) char allowsWirelessPlayback; 
@property (assign,nonatomic) char alwaysAllowHidingControlsOverlay; 
@property (assign,nonatomic) int artworkImageStyle;                                                                //@synthesize artworkImageStyle=_artworkImageStyle - In the implementation block
@property (assign,nonatomic) char attemptAutoPlayWhenControlsHidden; 
@property (nonatomic,readonly) UIView * backgroundView; 
@property (nonatomic,retain) UIColor * backstopColor;                                                              //@synthesize backstopColor=_backstopColor - In the implementation block
@property (assign,nonatomic) char canAnimateControlsOverlay; 
@property (nonatomic,readonly) char canChangeScaleMode; 
@property (assign,nonatomic) char canShowControlsOverlay; 
@property (assign,nonatomic) char controlsOverlayVisible; 
@property (assign,nonatomic) unsigned long long desiredParts;                                                      //@synthesize desiredParts=_desiredParts - In the implementation block
@property (assign,nonatomic) char disableAutoRotation; 
@property (assign,nonatomic) char disableControlsAutohide; 
@property (assign,nonatomic) unsigned long long disabledParts;                                                     //@synthesize disabledParts=_disabledParts - In the implementation block
@property (assign,nonatomic) char displayPlaybackErrorAlerts; 
@property (nonatomic,readonly) _UIHostedWindow * hostedWindow; 
@property (nonatomic,readonly) unsigned hostedWindowContextID; 
@property (assign,nonatomic) char inlinePlaybackUsesTVOut; 
@property (assign,nonatomic) unsigned itemTypeOverride;                                                            //@synthesize itemTypeOverride=_itemTypeOverride - In the implementation block
@property (assign,getter=isFullscreen,nonatomic) char fullscreen; 
@property (nonatomic,retain) UIImage * posterImage;                                                                //@synthesize posterImage=_posterImage - In the implementation block
@property (assign,nonatomic) unsigned scaleMode;                                                                   //@synthesize scaleMode=_scaleMode - In the implementation block
@property (assign,nonatomic) char TVOutEnabled; 
@property (nonatomic,readonly) char viewControllerWillRequestExit; 
@property (nonatomic,retain,readonly) UIView*<MPVideoOverlay> videoOverlayView; 
@property (nonatomic,retain,readonly) MPVideoView * videoView; 
@property (assign,nonatomic) unsigned long long visibleParts;                                                      //@synthesize visibleParts=_visibleParts - In the implementation block
@property (assign,nonatomic) char autoPlayWhenLikelyToKeepUp; 
+(CGRect)calculateArtworkImageViewFrameInRect:(CGRect)arg1 ;
+(int)_activityIndicatorViewStyle;
+(char)supportsFullscreenDisplay;
-(char)isFullscreen;
-(void)setFullscreen:(char)arg1 ;
-(void)setFullscreen:(char)arg1 animated:(char)arg2 ;
-(void)setScaleModeOverride:(unsigned)arg1 animated:(char)arg2 ;
-(void)setCanShowControlsOverlay:(char)arg1 ;
-(void)setAutoPlayWhenLikelyToKeepUp:(char)arg1 ;
-(void)setAllowsWirelessPlayback:(char)arg1 ;
-(char)allowsWirelessPlayback;
-(char)TVOutEnabled;
-(void)setItemTypeOverride:(unsigned)arg1 ;
-(char)canShowControlsOverlay;
-(void)displayVideoView;
-(void)setControlsOverlayVisible:(char)arg1 animate:(char)arg2 ;
-(char)controlsOverlayVisible;
-(UIView*<MPVideoOverlay>)videoOverlayView;
-(unsigned long long)visibleParts;
-(unsigned long long)desiredParts;
-(void)setDesiredParts:(unsigned long long)arg1 ;
-(void)setVisibleParts:(unsigned long long)arg1 ;
-(char)alwaysAllowHidingControlsOverlay;
-(void)setAlwaysAllowHidingControlsOverlay:(char)arg1 ;
-(void)setControlsOverlayVisible:(char)arg1 animate:(char)arg2 force:(char)arg3 ;
-(void)setDisplayPlaybackErrorAlerts:(char)arg1 ;
-(void)setUseHostedWindowWhenFullscreen:(char)arg1 ;
-(void)setTVOutEnabled:(char)arg1 ;
-(void)setInlinePlaybackUsesTVOut:(char)arg1 ;
-(char)inlinePlaybackUsesTVOut;
-(_UIHostedWindow *)hostedWindow;
-(unsigned)hostedWindowContextID;
-(void)setDisabledParts:(unsigned long long)arg1 ;
-(void)setAttemptAutoPlayWhenControlsHidden:(char)arg1 ;
-(void)setClosedCaptions:(id)arg1 ;
-(void)setPosterImage:(UIImage *)arg1 ;
-(void)setArtworkImageStyle:(int)arg1 ;
-(void)setCanAnimateControlsOverlay:(char)arg1 ;
-(void)setDisableControlsAutohide:(char)arg1 ;
-(void)toggleScaleMode:(char)arg1 ;
-(void)willChangeToInterfaceOrientation:(int)arg1 ;
-(void)setOrientation:(int)arg1 animate:(char)arg2 ;
-(void)noteIgnoredChangeTypes:(unsigned)arg1 ;
-(void)setDisableAutoRotation:(char)arg1 ;
-(void)setDesiredParts:(unsigned long long)arg1 animate:(char)arg2 ;
-(void)setVisibleParts:(unsigned long long)arg1 animate:(char)arg2 ;
-(char)canHideOverlay:(char)arg1 ;
-(void)setAllowsDetailScrubbing:(char)arg1 ;
-(void)setControlsNeedLayout;
-(char)viewControllerWillRequestExit;
-(void)crossedTimeMakerWithEvent:(id)arg1 ;
-(char)autoPlayWhenLikelyToKeepUp;
-(void)videoView_itemTypeAvailableNotification:(id)arg1 ;
-(void)_videoView_effectiveScaleModeChangedNotification:(id)arg1 ;
-(void)videoView_tvOutCapabilityDidChangeNotification:(id)arg1 ;
-(void)_videoView_resumeEventsOnlyNotification:(id)arg1 ;
-(void)_videoView_applicationSuspendedNotification:(id)arg1 ;
-(void)_videoView_applicationWillEnterForegroundNotification:(id)arg1 ;
-(void)_videoView_batteryStateDidChangeNotification:(id)arg1 ;
-(void)_screenDidConnect:(id)arg1 ;
-(void)_screenDidDisconnect:(id)arg1 ;
-(void)_endBackgroundTask;
-(void)registerForPlayerNotifications;
-(void)_videoView_availableRoutesDidChangeNotification:(id)arg1 ;
-(void)videoView_bufferingStateChangedNotification:(id)arg1 ;
-(void)videoView_firstVideoFrameDisplayedNotification:(id)arg1 ;
-(void)_videoView_isExternalPlaybackActiveDidChangeNotification:(id)arg1 ;
-(void)_videoView_playbackErrorNotification:(id)arg1 ;
-(void)videoView_playbackStateChangedNotification:(id)arg1 ;
-(void)_videoView_sizeChangedNotification:(id)arg1 ;
-(void)_videoView_timedImageMetadataAvailableNotification:(id)arg1 ;
-(void)_videoView_validityChangedNotification:(id)arg1 ;
-(void)unregisterForPlayerNotifications;
-(void)_updateClosedCaptionDisplay;
-(char)disableControlsAutohide;
-(id)newAlternateTracksTransition;
-(void)reloadArtworkImageView;
-(char)isTransitioningToFullscreen;
-(char)isTransitioningFromFullscreen;
-(char)isFullscreenForLayoutPurposes;
-(int)artworkImageStyle;
-(UIView*<MPVideoOverlay>)videoOverlayViewIfLoaded;
-(CGRect)calculateFullScreenArtworkImageViewFrame;
-(unsigned)itemTypeOverride;
-(int)displayArtworkImageStyle;
-(unsigned)_itemTypeWithActualTypePreference;
-(char)showArtworkForTVOut;
-(CGRect)calculateArtworkImageViewFrame;
-(UIView *)artworkImageView;
-(char)showArtworkInImageView;
-(id)newArtworkImageView;
-(char)_canEnableAirPlayVideoRoutes;
-(char)_showDestinationPlaceholder;
-(void)_fixupViewHierarchyIfNecessary;
-(char)canChangeScaleMode;
-(void)setScaleMode:(unsigned)arg1 ;
-(void)_itemDurationDidChange:(id)arg1 ;
-(void)_updateProgressControlForItem:(id)arg1 ;
-(void)enableAirPlayVideoRoutesIfNecessary;
-(unsigned long long)disabledPartsForProposedParts:(unsigned long long)arg1 ;
-(void)setScaleMode:(unsigned)arg1 animated:(char)arg2 ;
-(void)_updateAlwaysPlayWheneverPossible;
-(void)_scheduleLoadingIndicatorIfNeeded;
-(void)_hideLoadingIndicator;
-(void)_videoView_scaleModeChangedNotification:(id)arg1 ;
-(void)prepareToDisplayVideo;
-(void)tearDownTVOutWindow;
-(void)_updateIdleTimerDisabledFromPlaybackState:(int)arg1 ;
-(void)handleScaleModeChange;
-(void)_exitPlayerForPlaybackError;
-(void)_delayedUpdateBackgroundView;
-(void)_updateBackgroundView:(char)arg1 ;
-(char)canShowQTAudioOnlyUI;
-(void)backgroundViewDidUpdate;
-(void)_delayedPopForTimeJump;
-(void)displayVideoViewOnTV;
-(void)displayVideoViewOnScreen;
-(void)_delayedShowLoading;
-(void)_showStillFrameIfNotAlreadyPlaying;
-(unsigned long long)disabledParts;
-(void)showAlternateTracksController:(id)arg1 ;
-(void)setOwnsStatusBar:(char)arg1 ;
-(char)allowsDetailScrubbing;
-(char)attemptAutoPlayWhenControlsHidden;
-(UIColor *)backstopColor;
-(void)setBackstopColor:(UIColor *)arg1 ;
-(char)canAnimateControlsOverlay;
-(void)setControlsOverlayVisible:(char)arg1 ;
-(char)disableAutoRotation;
-(char)displayPlaybackErrorAlerts;
-(unsigned long long)visiblePartsForProposedParts:(unsigned long long)arg1 ;
-(void)setAllowsTVOutInBackground:(char)arg1 ;
-(char)allowsTVOutInBackground;
-(void)_popForTimeJump:(id)arg1 ;
-(MPVideoView *)videoView;
-(unsigned)scaleMode;
-(void)dealloc;
-(id)init;
-(void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2 ;
-(UIView *)backgroundView;
-(void)loadView;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)removeChildViewController:(id)arg1 ;
-(void)setItem:(MPAVItem *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(UIImage *)posterImage;
-(void)setPlayer:(MPAVController *)arg1 ;
-(void)exitFullscreen;
@end

