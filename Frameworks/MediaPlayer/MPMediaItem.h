/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:37:36 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MPMediaEntity.h>

@class NSString, MPMediaItemArtwork, NSDate, NSURL, NSArray;

@interface MPMediaItem : MPMediaEntity

@property (nonatomic,readonly) char mediaTypeCanSeedGenius; 
@property (nonatomic,readonly) unsigned long long persistentID; 
@property (nonatomic,readonly) unsigned mediaType; 
@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) NSString * albumTitle; 
@property (nonatomic,readonly) unsigned long long albumPersistentID; 
@property (nonatomic,readonly) NSString * artist; 
@property (nonatomic,readonly) unsigned long long artistPersistentID; 
@property (nonatomic,readonly) NSString * albumArtist; 
@property (nonatomic,readonly) unsigned long long albumArtistPersistentID; 
@property (nonatomic,readonly) NSString * genre; 
@property (nonatomic,readonly) unsigned long long genrePersistentID; 
@property (nonatomic,readonly) NSString * composer; 
@property (nonatomic,readonly) unsigned long long composerPersistentID; 
@property (nonatomic,readonly) double playbackDuration; 
@property (nonatomic,readonly) unsigned albumTrackNumber; 
@property (nonatomic,readonly) unsigned albumTrackCount; 
@property (nonatomic,readonly) unsigned discNumber; 
@property (nonatomic,readonly) unsigned discCount; 
@property (nonatomic,readonly) MPMediaItemArtwork * artwork; 
@property (nonatomic,readonly) NSString * lyrics; 
@property (getter=isCompilation,nonatomic,readonly) char compilation; 
@property (nonatomic,readonly) NSDate * releaseDate; 
@property (nonatomic,readonly) unsigned beatsPerMinute; 
@property (nonatomic,readonly) NSString * comments; 
@property (nonatomic,readonly) NSURL * assetURL; 
@property (getter=isCloudItem,nonatomic,readonly) char cloudItem; 
@property (nonatomic,readonly) NSString * podcastTitle; 
@property (nonatomic,readonly) unsigned long long podcastPersistentID; 
@property (nonatomic,readonly) unsigned playCount; 
@property (nonatomic,readonly) unsigned skipCount; 
@property (nonatomic,readonly) unsigned rating; 
@property (nonatomic,copy) NSDate * lastPlayedDate; 
@property (nonatomic,readonly) NSString * userGrouping; 
@property (nonatomic,readonly) double bookmarkTime; 
@property (nonatomic,readonly) char isRental; 
@property (nonatomic,readonly) char isITunesU; 
@property (nonatomic,readonly) double startTime; 
@property (nonatomic,readonly) double stopTime; 
@property (nonatomic,readonly) unsigned year; 
@property (assign,nonatomic) unsigned skipCountSinceSync; 
@property (assign,nonatomic) unsigned playCountSinceSync; 
@property (nonatomic,copy) NSDate * lastSkippedDate; 
@property (nonatomic,copy) NSDate * dateAccessed; 
@property (assign,nonatomic) char hasBeenPlayed; 
@property (nonatomic,readonly) char rememberBookmarkTime; 
@property (nonatomic,readonly) double effectiveStopTime; 
@property (nonatomic,readonly) NSString * effectiveAlbumArtist; 
@property (nonatomic,readonly) char isUsableAsRepresentativeItem; 
@property (nonatomic,readonly) NSArray * chapters; 
+(id)artworkCatalogCacheProperties;
+(id)screenshotArtworkCatalogCacheProperties;
+(void)_createFilterableDictionary;
+(char)canFilterByProperty:(id)arg1 ;
+(id)persistentIDPropertyForGroupingType:(int)arg1 ;
+(char)_isValidItemProperty:(id)arg1 ;
+(id)titlePropertyForGroupingType:(int)arg1 ;
+(id)fallbackTitlePropertyForGroupingType:(int)arg1 ;
+(id)dynamicProperties;
+(id)MPSD_mediaItemPropertiesForDownloadability;
-(id)MPU_libraryLinkKind;
-(id)MPU_libraryLinkArtist;
-(id)MPU_libraryLinkPlaylistName;
-(id)MPU_libraryLinkURL:(char)arg1 ;
-(id)MPU_containerLibraryLinkURL;
-(id)MPU_directStoreURL;
-(id)MPU_libraryLinkURL;
-(id)MPU_contentItemIdentifierCollection;
-(NSString *)albumArtist;
-(unsigned)albumTrackNumber;
-(unsigned)albumTrackCount;
-(unsigned)discCount;
-(char)isCloudItem;
-(double)bookmarkTime;
-(char)isITunesU;
-(id)chapterOfType:(int)arg1 atTime:(double)arg2 ;
-(id)artworkCatalog;
-(id)screenshotArtworkCatalog;
-(id)initWithMultiverseIdentifier:(id)arg1 ;
-(id)initWithPersistentID:(unsigned long long)arg1 ;
-(id)_artworkCatalogWithArtworkType:(int)arg1 ;
-(void)populateLocationPropertiesWithPath:(id)arg1 assetProtectionType:(int)arg2 ;
-(void)clearLocationProperties;
-(id)valuesForProperties:(id)arg1 ;
-(char)mediaTypeCanSeedGenius;
-(char)rememberBookmarkTime;
-(void)noteWasPlayedToTime:(double)arg1 skipped:(char)arg2 ;
-(char)didSkipWithPlayedToTime:(double)arg1 ;
-(void)incrementPlayCountForPlayingToEnd;
-(char)incrementPlayCountForStopTime:(double)arg1 ;
-(id)chaptersOfType:(int)arg1 ;
-(double)effectiveStopTime;
-(id)predicateForProperty:(id)arg1 ;
-(id)_directStoreURL;
-(id)_libraryLinkURL;
-(double)playbackDuration;
-(id)_libraryLinkKind;
-(id)_libraryLinkArtist;
-(id)_libraryLinkPlaylistName;
-(Class)itemArrayCoderPIDDataCodingClass;
-(void)markNominalAmountHasBeenPlayed;
-(void)incrementSkipCount;
-(void)updateDateAccessedToCurrentDateWithWriteCompletionBlock:(/*^block*/id)arg1 ;
-(double)nominalHasBeenPlayedThreshold;
-(id)_bestStoreURL;
-(NSString *)effectiveAlbumArtist;
-(unsigned long long)albumPersistentID;
-(unsigned long long)artistPersistentID;
-(unsigned long long)composerPersistentID;
-(unsigned long long)genrePersistentID;
-(char)isRental;
-(NSString *)podcastTitle;
-(unsigned long long)podcastPersistentID;
-(unsigned)playCountSinceSync;
-(void)setPlayCountSinceSync:(unsigned)arg1 ;
-(NSDate *)lastPlayedDate;
-(void)setLastPlayedDate:(NSDate *)arg1 ;
-(NSDate *)dateAccessed;
-(void)setDateAccessed:(NSDate *)arg1 ;
-(unsigned)skipCountSinceSync;
-(void)setSkipCountSinceSync:(unsigned)arg1 ;
-(NSDate *)lastSkippedDate;
-(void)setLastSkippedDate:(NSDate *)arg1 ;
-(char)hasBeenPlayed;
-(void)setHasBeenPlayed:(char)arg1 ;
-(NSString *)userGrouping;
-(id)chapterOfType:(int)arg1 atIndex:(unsigned)arg2 ;
-(unsigned)countOfChaptersOfType:(int)arg1 ;
-(void)gaplessHeuristicInfo:(unsigned*)arg1 durationInSamples:(unsigned long long*)arg2 lastPacketsResync:(unsigned long long*)arg3 encodingDelay:(unsigned*)arg4 encodingDrain:(unsigned*)arg5 ;
-(char)isUsableAsRepresentativeItem;
-(char)MPSD_isDownloadInProgress;
-(char)MPSD_isDownloadable;
-(NSString *)albumTitle;
-(id)representativeItem;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(void)didReceiveMemoryWarning;
-(NSString *)title;
-(id)valueForProperty:(id)arg1 ;
-(unsigned)year;
-(double)startTime;
-(NSString *)comments;
-(unsigned)rating;
-(void)setRating:(unsigned)arg1 ;
-(NSString *)artist;
-(NSString *)composer;
-(NSString *)genre;
-(unsigned)discNumber;
-(NSString *)lyrics;
-(char)existsInLibrary;
-(double)stopTime;
-(unsigned)beatsPerMinute;
-(NSArray *)chapters;
-(void)populateLocationPropertiesWithPath:(id)arg1 ;
-(MPMediaItemArtwork *)artwork;
-(char)isCompilation;
-(NSDate *)releaseDate;
-(void)setPlayCount:(unsigned)arg1 ;
-(void)setSkipCount:(unsigned)arg1 ;
-(id)multiverseIdentifier;
-(unsigned long long)albumArtistPersistentID;
-(unsigned)playCount;
-(unsigned)skipCount;
-(NSURL *)assetURL;
-(unsigned)mediaType;
@end

