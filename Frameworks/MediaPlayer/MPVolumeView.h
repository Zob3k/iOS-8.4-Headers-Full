/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:37:35 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <UIKit/UIView.h>
#import <MediaPlayer/MPAVRoutingControllerDelegate.h>
#import <MediaPlayer/NSCoding.h>

@class MPAVRoutingSheet, MPAVRoutingController, UIButton, UILabel, MPAudioVideoRoutingPopoverController, MPVolumeSlider, UIImage, NSString;

@interface MPVolumeView : UIView <MPAVRoutingControllerDelegate, NSCoding> {

	MPAVRoutingSheet* _routingSheet;
	MPAVRoutingController* _routingController;
	char _hasNonDefaultRouteButtonImages;
	char _hasNonDefaultMaxVolumeSliderImage;
	char _hasNonDefaultMinVolumeSliderImage;
	char _hidesRouteLabelWhenNoRouteChoice;
	UIButton* _routeButton;
	char _routeButtonShowsTouchWhenHighlighted;
	char _routeDiscoveryEnabled;
	UILabel* _routeLabel;
	MPAudioVideoRoutingPopoverController* _routePopoverController;
	char _showingButton;
	char _showingLabel;
	char _showingSlider;
	char _showsRouteButton;
	char _showsVolumeSlider;
	int _style;
	MPVolumeSlider* _volumeSlider;
	char _volumeSliderShrinksFromBothEnds;
	char _wirelessRouteIsPicked;
	char _wirelessRoutesAvailable;
	char _pushedRouteDiscoveryModeState;
	unsigned _routePopoverPermittedArrowDirections;

}

@property (assign,nonatomic) char showsVolumeSlider; 
@property (assign,nonatomic) char showsRouteButton; 
@property (getter=areWirelessRoutesAvailable,nonatomic,readonly) char wirelessRoutesAvailable; 
@property (getter=isWirelessRouteActive,nonatomic,readonly) char wirelessRouteActive; 
@property (nonatomic,retain) UIImage * volumeWarningSliderImage; 
@property (nonatomic,readonly) int style; 
@property (nonatomic,readonly) MPVolumeSlider * volumeSlider; 
@property (assign,nonatomic) char volumeSliderShrinksFromBothEnds; 
@property (assign,nonatomic) char hidesRouteLabelWhenNoRouteChoice; 
@property (nonatomic,readonly) char isVisible; 
@property (nonatomic,readonly) char isShowingRouteButton; 
@property (assign,nonatomic) char routeButtonShowsTouchWhenHighlighted; 
@property (assign,nonatomic) unsigned routePopoverPermittedArrowDirections;                                 //@synthesize routePopoverPermittedArrowDirections=_routePopoverPermittedArrowDirections - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_applicationDidEnterBackgroundNotification:(id)arg1 ;
-(void)_applicationWillEnterForegroundNotification:(id)arg1 ;
-(void)_createSubviews;
-(void)_registerNotifications;
-(void)_initWithStyle:(int)arg1 ;
-(void)_unregisterNotifications;
-(void)_setShowsVolumeSlider:(char)arg1 ;
-(void)_setShowsRouteButton:(char)arg1 animated:(char)arg2 ;
-(void)_setRouteDiscoveryEnabled:(char)arg1 ;
-(void)_updateWirelessRouteStatus;
-(void)_getDefaultVolumeSliderFrame:(CGRect*)arg1 routeButtonFrame:(CGRect*)arg2 forBounds:(CGRect)arg3 ;
-(char)routeButtonShowsTouchWhenHighlighted;
-(id)_defaultRouteButtonImageAsSelected:(char)arg1 ;
-(void)_displayAudioRoutePicker;
-(CGRect)volumeSliderRectForBounds:(CGRect)arg1 ;
-(CGRect)routeButtonRectForBounds:(CGRect)arg1 ;
-(char)isShowingRouteButton;
-(char)isWirelessRouteActive;
-(id)minimumVolumeSliderImageForState:(unsigned)arg1 ;
-(id)maximumVolumeSliderImageForState:(unsigned)arg1 ;
-(UIImage *)volumeWarningSliderImage;
-(id)routeButtonImageForState:(unsigned)arg1 ;
-(void)setMinimumVolumeSliderImage:(id)arg1 forState:(unsigned)arg2 ;
-(void)setMaximumVolumeSliderImage:(id)arg1 forState:(unsigned)arg2 ;
-(void)setVolumeWarningSliderImage:(UIImage *)arg1 ;
-(void)setRouteButtonImage:(id)arg1 forState:(unsigned)arg2 ;
-(void)setRouteButtonShowsTouchWhenHighlighted:(char)arg1 ;
-(void)setShowsRouteButton:(char)arg1 ;
-(void)setShowsVolumeSlider:(char)arg1 ;
-(void)setVolumeThumbImage:(id)arg1 forState:(unsigned)arg2 ;
-(char)showsRouteButton;
-(char)showsVolumeSlider;
-(id)volumeThumbImageForState:(unsigned)arg1 ;
-(CGRect)volumeThumbRectForBounds:(CGRect)arg1 volumeSliderRect:(CGRect)arg2 value:(float)arg3 ;
-(MPVolumeSlider *)volumeSlider;
-(char)hidesRouteLabelWhenNoRouteChoice;
-(char)volumeSliderShrinksFromBothEnds;
-(void)setHidesRouteLabelWhenNoRouteChoice:(char)arg1 ;
-(void)setVolumeSliderShrinksFromBothEnds:(char)arg1 ;
-(void)dismissActiveOverlaysAnimated:(char)arg1 ;
-(char)isShowingActiveOverlays;
-(void)_setVolumeAudioCategory:(id)arg1 ;
-(id)_routeButton;
-(unsigned)routePopoverPermittedArrowDirections;
-(void)setRoutePopoverPermittedArrowDirections:(unsigned)arg1 ;
-(void)routingControllerAvailableRoutesDidChange:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(char)pointInside:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)setHidden:(char)arg1 ;
-(void)setAlpha:(float)arg1 ;
-(void)didMoveToWindow;
-(void)layoutSubviews;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(int)style;
-(void)willMoveToWindow:(id)arg1 ;
-(void)didMoveToSuperview;
-(id)initWithFrame:(CGRect)arg1 style:(int)arg2 ;
-(char)isVisible;
-(void)popoverControllerDidDismissPopover:(id)arg1 ;
-(char)areWirelessRoutesAvailable;
@end

