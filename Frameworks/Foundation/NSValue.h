/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:37:19 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <Foundation/NSCopying.h>
#import <Foundation/NSSecureCoding.h>

@interface NSValue : NSObject <NSCopying, NSSecureCoding>

@property (readonly) SCD_Struct_NS51 MKCoordinateValue; 
@property (readonly) SCD_Struct_NS51 MKCoordinateSpanValue; 
@property (readonly) CATransform3D CATransform3DValue; 
@property (readonly) const char* objCType; 
+(id)valueWithMKCoordinate:(SCD_Struct_NS51)arg1 ;
+(id)valueWithMKCoordinateSpan:(SCD_Struct_NS51)arg1 ;
+(id)_mapkit_valueWithCGPoint:(CGPoint)arg1 ;
+(id)_mapkit_valueWithCGAffineTransform:(CGAffineTransform)arg1 ;
+(id)valueWithML3NameOrder:(SCD_Struct_NS56)arg1 ;
+(id)valueWithCGRect:(CGRect)arg1 ;
+(id)valueWithCGSize:(CGSize)arg1 ;
+(id)valueWithCGPoint:(CGPoint)arg1 ;
+(id)valueWithCGVector:(CGVector)arg1 ;
+(id)valueWithCGAffineTransform:(CGAffineTransform)arg1 ;
+(id)valueWithUIEdgeInsets:(UIEdgeInsets)arg1 ;
+(id)valueWithUIOffset:(UIOffset)arg1 ;
+(id)_web_valueWithCGRect:(CGRect)arg1 ;
+(id)valueWithCGPoint:(CGPoint)arg1 ;
+(id)valueWithCMTimeMapping:(SCD_Struct_NS13)arg1 ;
+(id)valueWithCMTime:(SCD_Struct_NS11)arg1 ;
+(id)valueWithCMTimeRange:(SCD_Struct_NS12)arg1 ;
+(id)valueWithCAPoint3D:(CAPoint3D)arg1 ;
+(id)valueWithCATransform3D:(CATransform3D)arg1 ;
+(id)valueWithCAColorMatrix:(CAColorMatrix)arg1 ;
+(id)valueWithEdgeInsets:(NSEdgeInsets)arg1 ;
+(void)initialize;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)valueWithBytes:(const void*)arg1 objCType:(const char*)arg2 ;
+(char)supportsSecureCoding;
+(id)valueWithSize:(CGSize)arg1 ;
+(id)valueWithRect:(CGRect)arg1 ;
+(id)valueWithPointer:(const void*)arg1 ;
+(id)valueWithNonretainedObject:(id)arg1 ;
+(id)valueWithRange:(NSRange)arg1 ;
+(id)valueWithPoint:(CGPoint)arg1 ;
+(id)value:(const void*)arg1 withObjCType:(const char*)arg2 ;
-(id)cplFullDescription;
-(id)plistArchiveWithCPLArchiver:(id)arg1 ;
-(id)initWithCPLArchiver:(id)arg1 ;
-(SCD_Struct_NS51)MKCoordinateValue;
-(SCD_Struct_NS51)MKCoordinateSpanValue;
-(CGRect)_mapkit_CGRectValue;
-(CGPoint)_mapkit_CGPointValue;
-(CGAffineTransform)_mapkit_CGAffineTransformValue;
-(id)_mapkit_initWithCGPoint:(CGPoint)arg1 ;
-(id)_mapkit_initWithCADoublePoint:(CADoublePoint)arg1 ;
-(CADoublePoint)CADoublePointValue;
-(id)_mapkit_initWithCADoubleRect:(CADoubleRect)arg1 ;
-(CADoubleRect)CADoubleRectValue;
-(id)_mapkit_initWithCGRect:(CGRect)arg1 ;
-(id)_mapkit_initWithZoomRegion:(SCD_Struct_NS57)arg1 ;
-(SCD_Struct_NS57)_mapkit_zoomRegionValue;
-(id)_mapkit_initWithMKMapRect:(SCD_Struct_NS58)arg1 ;
-(SCD_Struct_NS58)MKMapRectValue;
-(SCD_Struct_NS56)ML3NameOrderValue;
-(CGAffineTransform)CGAffineTransformValue;
-(CGRect)CGRectValue;
-(CGSize)CGSizeValue;
-(CGPoint)CGPointValue;
-(UIEdgeInsets)UIEdgeInsetsValue;
-(CGVector)CGVectorValue;
-(UIOffset)UIOffsetValue;
-(CGRect)CGRectValue;
-(CGPoint)CGPointValue;
-(SCD_Struct_NS13)CMTimeMappingValue;
-(SCD_Struct_NS12)CMTimeRangeValue;
-(SCD_Struct_NS11)CMTimeValue;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(id)CA_roundToIntegerFromValue:(id)arg1 ;
-(id)CA_interpolateValues:(id)arg1 :(id)arg2 :(id)arg3 interpolator:(const ValueInterpolator*)arg4 ;
-(id)CA_addValue:(id)arg1 multipliedBy:(int)arg2 ;
-(float)CA_distanceToValue:(id)arg1 ;
-(id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2 ;
-(Object*)CA_copyRenderValue;
-(CAPoint3D)CAPoint3DValue;
-(CATransform3D)CATransform3DValue;
-(CAColorMatrix)CAColorMatrixValue;
-(char)isNSValue__;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(char)_matchType:(const char*)arg1 size:(unsigned)arg2 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSRange)rangeValue;
-(void)getValue:(void*)arg1 ;
-(Class)classForCoder;
-(CGSize)sizeValue;
-(CGRect)rectValue;
-(id)nonretainedObjectValue;
-(const char*)objCType;
-(char)isEqualToValue:(id)arg1 ;
-(CGPoint)pointValue;
-(void*)pointerValue;
-(id)initWithBytes:(const void*)arg1 objCType:(const char*)arg2 ;
-(NSEdgeInsets)edgeInsetsValue;
@end

