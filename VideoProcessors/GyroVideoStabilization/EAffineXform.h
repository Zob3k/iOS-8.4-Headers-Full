/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:43:37 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/VideoProcessors/GyroVideoStabilization.videoprocessor
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <GyroVideoStabilization.videoprocessor/GyroVideoStabilization.videoprocessor-Structs.h>
#import <GyroVideoStabilization.videoprocessor/AFilter.h>

@interface EAffineXform : AFilter {

	int _renderMethod;
	unsigned _TexMatCount;
	float* _TexMats;
	unsigned _transformRowStride;
	char _renderFromTopLeft;
	int _overscanWidth;
	int _overscanHeight;
	unsigned _unsharpTexture;
	int _unsharpWidth;
	int _unsharpHeight;
	int _lastUnsharpWidth;
	int _lastUnsharpHeight;
	float _usmBlurRadius;
	float _usmBaseAmount;
	float _usmAdaptiveAmount;
	unsigned _USMv10LumaDownSampleProgram;
	unsigned _USMv10LumaSharpProgram;
	unsigned _USMv15LumaSharpProgram;
	unsigned _USMv20LumaSharpProgram;
	unsigned _AUSMLumaSharpProgram;
	unsigned _AUSMSharpLutWidth;
	unsigned _AUSMSharpLutHeight;
	float _ausmBlurRadius;
	float _ausmLowLumaDelta;
	float _ausmLowLumaDeltaBlurAmount;
	float _ausmHighLumaDelta;
	float _ausmHighLumaDeltaBlurAmount;
	unsigned _AUSMSharpLutTexture;
	unsigned _USMChromaProgram;

}
-(void)dealloc;
-(void)setTransform:(float)arg1 ;
-(id)initWithContext:(id)arg1 ;
-(void)setRenderFromTopLeft:(char)arg1 ;
-(void)setOverscan:(int)arg1 height:(int)arg2 ;
-(void)setTransformArray:(unsigned)arg1 transforms3x3:(float*)arg2 transformRowStride:(unsigned)arg3 ;
-(void)setRenderMethod:(int)arg1 ;
-(void)setUnsharpMaskParameters:(float)arg1 baseAmount:(float)arg2 adaptiveAmount:(float)arg3 ;
-(void)setAdaptiveUnsharpMaskParameters:(float)arg1 lowLumaDelta:(float)arg2 lowLumaDeltaBlurAmount:(float)arg3 highLumaDelta:(float)arg4 highLumaDeltaBlurAmount:(float)arg5 ;
-(char)requiresScissor;
-(int)renderMethod;
-(void)setRenderMethodInternal:(int)arg1 pixelFormat:(unsigned long)arg2 ;
-(void)processUnsharpMask:(CVBufferRef)arg1 forContext:(id)arg2 outputPixelBuffer:(CVBufferRef)arg3 ;
-(void)processYUVImage:(CVBufferRef)arg1 forContext:(id)arg2 outputPixelBuffer:(CVBufferRef)arg3 ;
-(void)processBGRAImage:(CVBufferRef)arg1 forContext:(id)arg2 outputBGRAPixelBuffer:(CVBufferRef)arg3 ;
-(void)setupRenderingProgram:(unsigned long)arg1 ;
-(char)renderFromTopLeft;
@end

