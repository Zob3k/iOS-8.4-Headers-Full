/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:39:10 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Internet Plug-Ins/QuickTime Plugin.webplugin/QuickTime Plugin
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <QuickTime Plugin/QuickTime Plugin-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIPopoverControllerDelegate.h>

@class UIButton, UIImageView, NSDictionary, UIMoviePlayerController, NSURL, NSString, AVAsset, ValidationTask, DownloadImageTask, LoadFirstFrameTask, NSMutableArray, NSThread, NSLock, FPVWebScript, WebScriptObject, WAKView, NSArray, FPVMediaPlayerHelper, NSTimer, NSMutableDictionary, NSNumber, MPAVRoutingController, MPAudioVideoRoutingPopoverController, MPAudioVideoRoutingActionSheet, MPVolumeView;

@interface FigPluginView : UIView <UIPopoverControllerDelegate> {

	char _allowFloatingPlayButton;
	char _floatingPlayButton;
	char _embeddedPlayback;
	char _controllerOnlyInterface;
	char _webPluginMode;
	UIButton* _playButton;
	UIImageView* _posterView;
	char _pixelAlignPlayButton;
	char _playerHasMovie;
	NSDictionary* _wkargs;
	NSDictionary* _attributes;
	UIMoviePlayerController* _player;
	NSURL* _baseURL;
	NSURL* _srcRelativeURL;
	NSURL* _initialContentURL;
	NSURL* _posterURL;
	NSURL* _autoHrefURL;
	NSString* _autoHrefTarget;
	NSURL* _currentMediaElementURL;
	NSURL* _currentContentURL;
	AVAsset* _currentContentAsset;
	char _restrictResolution;
	char _isCurrentContentURLValidated;
	char _isCurrentContentURLStreaming;
	char _enableTimedMetadata;
	char _enableAirPlay;
	char _mediaElementDisablesWirelessVideoPlayback;
	char _scriptStateIsPlaying;
	char _isPlaying;
	char _inFullScreen;
	char _inFullScreenTransition;
	int _exitReason;
	ValidationTask* _validationTask;
	DownloadImageTask* _downloadImageTask;
	LoadFirstFrameTask* _loadFirstFrameTask;
	double _nextPlayTime;
	char _readyForPlayback;
	char _finishedPlayback;
	char _playabilityReplyReceived;
	unsigned _bufferingState;
	char _okToLoadMedia;
	char _havePreparedForPlayback;
	char _waitingForPlaybackToBegin;
	char _isBlockingTaskQueue;
	char _playedRequestedAtLeastOnce;
	char _forceCurrentTimeToZero;
	int _qtNextIndex;
	char _qtNextRecursive;
	NSMutableArray* _failedQTNextIndexes;
	NSThread* _webThread;
	NSString* _pluginStatus;
	NSLock* _accessedFromWebThreadLock;
	FPVWebScript* _webScriptInterface;
	char _disableExitFullScreenOnPlayToEnd;
	id _pluginContainer;
	id _pluginElement;
	WebScriptObject* _webScriptObject;
	WAKView* _wakView;
	NSArray* _lastTimedMetadata;
	NSString* _youTubeVideoID;
	FPVMediaPlayerHelper* _mediaElementHelper;
	int _configuringPlayerCounter;
	double _cachedPlayableDuration;
	FPVTimeRange _cachedPlayableRange;
	FPVTimeRange _cachedSeekableRange;
	double _cachedDuration;
	float _cachedRate;
	float _cachedVolume;
	double _movieTimeAtLastTimeDidJumpTime;
	CGSize _cachedSize;
	long long _cachedFileSize;
	char _cachedHasVideo;
	char _cachedHasAudio;
	char _cachedMuted;
	char _poseAsMediaElement;
	char _webPluginStartCalled;
	char _canDeliverEvents;
	char _enableEvents;
	NSMutableArray* _pendingEvents;
	NSLock* _pendingEventsLock;
	char _dispatchPendingEventsScheduled;
	char _showControls;
	NSTimer* _cachePlayerRangesTimer;
	char _disableControlsAutohide;
	char _isZooming;
	float _cachedButtonScale;
	char _restrictingQueue;
	char _limitingQueue;
	char _allowInlinePlayback;
	char _playAfterEnteringFullscreen;
	char _pausedWhileScrubbing;
	char _needsToIgnoreInitialSeekZeroForStreaming;
	char _keepPosterWhilePlaying;
	unsigned _pendingBufferingNotifications;
	float _deferredPlaybackRate;
	NSArray* _pendingOutOfBandTextTrackInfo;
	NSMutableArray* _cachedOutOfBandTextTracks;
	NSMutableDictionary* _textTrackMap;
	NSNumber* _pendingTextTrack;
	char _windowIsRotating;
	MPAVRoutingController* _airPlayPickerRoutingController;
	MPAVRoutingController* _airPlayPresenceRoutingController;
	MPAudioVideoRoutingPopoverController* _airPlayPopoverController;
	MPAudioVideoRoutingActionSheet* _airPlayActionSheet;
	MPVolumeView* _volumeView;
	NSString* _captiveInterfaceName;
	NSString* _pageTitle;

}

@property (assign) char allowFloatingPlayButton;                    //@synthesize allowFloatingPlayButton=_allowFloatingPlayButton - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)plugInViewWithArguments:(id)arg1 ;
+(id)PNGImageForName:(id)arg1 ;
-(void)setArguments:(id)arg1 ;
-(double)playableDuration;
-(void)setOutOfBandTextTracks:(id)arg1 ;
-(id)currentDate;
-(void)seekToDate:(id)arg1 ;
-(void)resignActive;
-(char)moviePlayerBackwardButtonPressed:(id)arg1 ;
-(char)moviePlayerForwardButtonPressed:(id)arg1 ;
-(char)moviePlayerPlayPauseButtonPressed:(id)arg1 ;
-(void)moviePlayerPlaybackDidFail:(id)arg1 error:(id)arg2 ;
-(void)moviePlayerWillEnterFullscreen:(id)arg1 ;
-(void)moviePlayerDidEnterFullscreen:(id)arg1 ;
-(void)moviePlayerWillExitFullscreen:(id)arg1 exitReason:(int)arg2 ;
-(void)moviePlayerDidExitFullscreen:(id)arg1 ;
-(void)moviePlayerDidBeginScrubbing:(id)arg1 ;
-(void)moviePlayerDidEndScrubbing:(id)arg1 ;
-(void)moviePlayer:(id)arg1 willSelectAlternateTextTrack:(id)arg2 ;
-(void)moviePlayer:(id)arg1 didOutputAttributedStrings:(id)arg2 nativeSampleBuffers:(id)arg3 forTime:(double)arg4 ;
-(char)moviePlayerHeadsetPlayPausePressed:(id)arg1 ;
-(char)moviePlayerPlayButtonPressed:(id)arg1 ;
-(char)moviePlayerPauseButtonPressed:(id)arg1 ;
-(void)moviePlayerBufferingStateDidChange:(id)arg1 ;
-(void)moviePlayerPlaybackStateDidChange:(id)arg1 fromPlaybackState:(unsigned)arg2 ;
-(void)moviePlayerPlaybackRateDidChange:(id)arg1 ;
-(void)moviePlayerCanContinuePlayingInBackgroundDidChange:(id)arg1 ;
-(void)moviePlayerInBandAlternateTextTracksDidChange:(id)arg1 ;
-(void)moviePlayerCurrentTimeDidJump:(id)arg1 ;
-(void)moviePlayerPlaybackDidEnd:(id)arg1 ;
-(void)moviePlayer:(id)arg1 timedMetadataDidArrive:(id)arg2 ;
-(void)moviePlayerVolumeDidChange:(id)arg1 ;
-(void)moviePlayerVolumeMutedDidChange:(id)arg1 ;
-(void)moviePlayerIsPreparedForPlaybackDidChange:(id)arg1 ;
-(char)isFullScreen;
-(double)_playableDuration;
-(void)setCurrentTime:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)removeFromSuperview;
-(id)superview;
-(double)duration;
-(void)setWAKView:(id)arg1 ;
-(void)webPlugInInitialize;
-(void)webPlugInStart;
-(void)webPlugInStop;
-(void)webPlugInDestroy;
-(id)objectForWebScript;
-(void)_webViewWillBeginZooming;
-(void)_webViewDidEndZooming:(id)arg1 ;
-(void)_webViewDidZoomWithRelativeScale:(float)arg1 ;
-(void)_webViewScaleDidChange;
-(void)popoverControllerDidDismissPopover:(id)arg1 ;
-(void)goBack;
-(void)_windowWillRotate:(id)arg1 ;
-(void)setPlaceholderImage:(id)arg1 ;
-(CGSize)naturalSize;
-(void)_dismissAirPlayRoutePickerIPad;
-(void)_windowDidRotate:(id)arg1 ;
-(char)hasClosedCaptions;
-(void)setWebThread;
-(void)setCanDeliverNotifications:(char)arg1 ;
-(void)loadURLForMediaElement:(id)arg1 ;
-(id)posterURL;
-(void)setPoster:(id)arg1 ;
-(void)scriptPrepareForPlayback;
-(void)scriptBeginPlaying;
-(void)scriptPausePlayback;
-(FPVTimeRange)seekableRange;
-(FPVTimeRange)playableRange;
-(char)readyForPlayback;
-(void)scriptEnterFullScreen;
-(void)scriptExitFullScreen;
-(char)isCurrentPlaybackTargetWireless;
-(void)scriptShowPlaybackTargetPicker;
-(char)hasWirelessPlaybackTargets;
-(char)wirelessVideoPlaybackDisabled;
-(void)setWirelessVideoPlaybackDisabled:(char)arg1 ;
-(void)setHasPlaybackTargetAvailabilityListeners:(char)arg1 ;
-(void)setClosedCaptionsVisible:(char)arg1 ;
-(void)mediaElementAttributeChanged:(id)arg1 value:(id)arg2 ;
-(void)setTextTrackRepresentation:(id)arg1 ;
-(void)selectTextTrack:(id)arg1 ;
-(void)setAllowFloatingPlayButton:(char)arg1 ;
-(void)appSuspendedEventsOnly:(id)arg1 ;
-(void)appSuspended:(id)arg1 ;
-(void)appWillBeginSuspend:(id)arg1 ;
-(void)appWillResignActive:(id)arg1 ;
-(void)appDidBecomeActive:(id)arg1 ;
-(void)mainThreadDestroy;
-(void)taskModeNormal;
-(void)setCachePlayerRangesTimer:(id)arg1 ;
-(void)_stopMonitoringAirPlayRoutesForMediaElementIfNeeded;
-(void)_stopMonitoringAirPlayRoutesForPickerIfNeeded;
-(void)_dismissAirPlayRoutePicker;
-(id)lowercaseKeys:(id)arg1 ;
-(char)shouldUsePosterMode;
-(void)loadPosterImage:(id)arg1 ;
-(void)changeMovieToURL:(id)arg1 asset:(id)arg2 isValidated:(char)arg3 isStreaming:(char)arg4 postBeginDOMEvent:(char)arg5 playRequested:(char)arg6 ;
-(CGRect)playButtonFrame;
-(void)updateBackgroundLogo;
-(void)configurePlayButtonForced:(char)arg1 ;
-(char)isAllowedToPlayNonForeground;
-(void)postMediaElementEvent:(int)arg1 ;
-(void)updateLimitReadAhead;
-(void)pausePlaybackForNotification:(id)arg1 ;
-(void)playButtonAction;
-(void)configurePlayButton;
-(void)createPlayer;
-(void)updateControllerOnlyMode;
-(void)setAllowPlayback:(char)arg1 ;
-(void)postDOMEvent:(id)arg1 ;
-(void)qtNextIndexFailed:(int)arg1 ;
-(void)setPluginStatus:(id)arg1 ;
-(void)postDebugMessage:(id)arg1 ;
-(char)advanceQTNext;
-(void)willBeginPlayback;
-(void)fullscreenOnceWeGetAWindow;
-(void)taskModeRestricted;
-(void)setCurrentTimeDoNotSnap:(double)arg1 ;
-(void)resignActiveAfterMovedToBackgroundTab;
-(void)_updateMoviePlayerWirelessPlaybackOptions;
-(void)restoreOutOfBandTextTrackIds;
-(void)_displayAirPlayRoutePicker;
-(char)_allowsWirelessPlayback;
-(void)_startMonitoringAirPlayRoutesForMediaElementIfNeeded;
-(id)wsoValueForValue:(id)arg1 context:(id)arg2 ;
-(id)dictionaryFromAVMetadataItem:(id)arg1 ;
-(id)wsoForDictionary:(id)arg1 ;
-(id)base64Encode:(id)arg1 insertLFs:(char)arg2 ;
-(id)wsoForArray:(id)arg1 ;
-(id)wsoForData:(id)arg1 context:(id)arg2 ;
-(id)wsoForAVMetadata:(id)arg1 ;
-(void)beginConfiguringPlayer;
-(void)resetTimedMetadata;
-(id)getURLString;
-(void)endConfiguringPlayer;
-(void)updateContentType:(id)arg1 ;
-(void)movieViewScaleModeChanged:(id)arg1 ;
-(void)_volumeViewWirelessRoutesAvailableDidChange:(id)arg1 ;
-(void)_volumeViewWirelessRouteActiveDidChange:(id)arg1 ;
-(void)setPathOnMoviePlayer;
-(void)chainChangeMovieToPath:(id)arg1 ;
-(void)validationFailedWithMessage:(id)arg1 resultCode:(int)arg2 ;
-(id)assetOptions;
-(void)delayedChainChangeMovieToPath:(id)arg1 ;
-(char)gotoQTNextIndex:(int)arg1 ;
-(void)visitURLAndTarget:(id)arg1 ;
-(FPVTimeRange)_playableRange;
-(FPVTimeRange)_seekableRange;
-(void)setScriptStateIsPlaying:(char)arg1 ;
-(void)updateCachedPlayerRanges;
-(void)refreshCachedPropertiesForBufferingStateChange:(unsigned)arg1 ;
-(void)taskModeLimited;
-(void)preparedForPlaybackChanged;
-(char)isConfiguringPlayer;
-(void)playbackDidFailWithError:(id)arg1 ;
-(char)moviePlayerPlayPauseButtonForMediaElementEvent:(int)arg1 ;
-(void)mainThreadPlugInStopSuspended:(id)arg1 ;
-(void)_startMonitoringAirPlayRoutesForPicker;
-(void)_displayAirPlayRoutePickerIPad;
-(void)_displayAirPlayRoutePickerIPhone;
-(void)_dismissAirPlayRoutePickerIPhone;
-(unsigned)_MPAVItemType;
-(void)_presentAirPlayPopoverAnimated:(char)arg1 ;
-(void)cancelFPVTask:(id*)arg1 ;
-(void)validationSucceededResultURL:(id)arg1 asset:(id)arg2 isStreaming:(char)arg3 ;
-(void)dispatchPendingEvents;
-(void)postEvent:(id)arg1 priority:(char)arg2 ;
-(id)getPluginStatus;
-(double)scriptGetCurrentTime;
-(void)scriptSetCurrentTime:(double)arg1 ;
-(id)scriptGetDate;
-(void)scriptSeekToDate:(id)arg1 ;
-(double)scriptGetDuration;
-(id)scriptGetLastTimedMetadata;
-(id)scriptGetAccessLog;
-(id)scriptGetErrorLog;
-(void)changeMovieToPath:(id)arg1 ;
-(char)_webViewPluginMediaPlayerProxy;
-(char)webPlugInReceivesEventsDirectly;
-(char)webPlugInHasFullScreenUI;
-(void)taskStarted:(id)arg1 ;
-(void)taskCompleted:(id)arg1 ;
-(void)taskCanceled:(id)arg1 ;
-(char)allowFloatingPlayButton;
-(void)flushPendingEvents;
-(id)getURL;
-(void)beginPlayback;
-(char)hasAudio;
-(char)hasVideo;
-(float)rate;
-(void)setRate:(id)arg1 ;
-(long long)fileSize;
-(char)muted;
-(void)setControls:(id)arg1 ;
-(void)cancelLoad;
-(float)volume;
-(double)currentTime;
-(char)isPlaying;
-(void)webPlugInStopForPageCache;
-(char)processingUserGesture;
@end

